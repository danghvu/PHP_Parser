<?php
 // created by jay 0.8 (c) 1998 Axel.Schreiner@informatik.uni-osnabrueck.de
 // modified by alan@akbkhome.com to try to generate php!
 // modified by cellog@users.sourceforge.net to fit PEAR CS
 // %token constants

 require_once 'PHP/Parser/Stack.php';

 define('PHP_PARSER_ERROR_UNEXPECTED', 1);
 define('PHP_PARSER_ERROR_SYNTAX', 2);
 define('PHP_PARSER_ERROR_SYNTAX_EOF', 3);
if (!defined('TOKEN_yyErrorCode')) {   define('TOKEN_yyErrorCode', 256);
}
 // Class now

					// line 1 "C:/devel/PHP_Parser/Parser/Core5.jay"

?><?php
/*
   +----------------------------------------------------------------------+
   | Based on the Zend Engine                                             |
   +----------------------------------------------------------------------+
   | Copyright (c) 1998-2002 Zend Technologies Ltd. (http://www.zend.com) |
   +----------------------------------------------------------------------+
   | This source file is subject to version 2.00 of the Zend license,     |
   | that is bundled with this package in the file LICENSE, and is        | 
   | available through the world-wide-web at the following url:           |
   | http://www.zend.com/license/2_00.txt.                                |
   | If you did not receive a copy of the Zend license and are unable to  |
   | obtain it through the world-wide-web, please send a note to          |
   | license@zend.com so we can mail you a copy immediately.              |
   +----------------------------------------------------------------------+
   | Authors: Andi Gutmans <andi@zend.com>                                |
   |          Zeev Suraski <zeev@zend.com>                                |
   | native PHP version:  Greg Beaver <cellog@users.sourceforge.net>      |
   | native PHP version:  Alan Knowles <alan@akbkhome.com>                |
   +----------------------------------------------------------------------+
   Last synchronized with zend_language_parser.y on Feb 26, 2004
*/

define('PHP_PARSER_STRUCTURE_ERROR_PARSE', 1);

//
// This does nothing on it's own - refer to PHP_Parser
// It's purely the code for the Parser, generated by phpJay
//
 

class PHP_Parser_Structure {

    /**
     * Options, used to control how the parser collects
     * and distributes the data it finds.
     *
     * Currently, options are grouped into two categories:
     * - containers for data
     * - publishing of data
     *
     * Default action is to return arrays of parsed data
     * for use by other applications.  The first set of
     * options, container options, provide a means to
     * tell the parser to encapsulate data in objects
     * instead of in arrays.  The option tells the parser which
     * class to instantiate for each documentable element.  The
     * default value of false will prompt the usage of arrays
     * instead.
     *
     * The second set of options provide for intermediary
     * publishing of data while parsing, to allow other
     * classes to hook into functionality if they desire
     * @var array
     * @access private
     */
    var $_options = array();
    
    /**
     * @var boolean
     */
    var $_get_class = false;
    
    /**
     * @access private
     */
    var $_grabDefine = false;
    /**
     * @access private
     */
    var $_inGlobal = false;
    /**
     * @access private
     */
    var $_lastConst = false;
    /**
     * @var PHP_Parser_Stack
     */
    var $_errors;

    function PHP_Parser_Structure($options = array())
    {
        $this->_errors = PHP_Parser_Stack::singleton('PHP_Parser_Structure');
        $this->_options['classContainer'] =
        $this->_options['interfaceContainer'] =
        $this->_options['includeContainer'] =
        $this->_options['functionContainer'] =
        $this->_options['globalContainer'] =
        $this->_options['varContainer'] =
        $this->_options['constContainer'] =
        $this->_options['classConstContainer'] =
        $this->_options['methodContainer'] =
        $this->_options['publisher'] =
        $this->_options['publishMethod'] =
        $this->_options['publishMessageClass'] =
        $this->_options['publishClasses'] =
        $this->_options['publishClassMessage'] =
        $this->_options['publishInterfaces'] =
        $this->_options['publishInterfaceMessage'] =
        $this->_options['publishIncludes'] =
        $this->_options['publishIncludeMessage'] =
        $this->_options['publishFunctions'] =
        $this->_options['publishFunctionMessage'] =
        $this->_options['publishGlobals'] =
        $this->_options['publishGlobalMessage'] =
        $this->_options['publishVars'] =
        $this->_options['publishVarMessage'] =
        $this->_options['publishClassConsts'] =
        $this->_options['publishClassConstMessage'] =
        $this->_options['publishMethods'] =
        $this->_options['publishMethodMessage'] =
        $this->_options['publishConsts'] =
        $this->_options['publishConstMessage'] =
        false;
        $this->_options = array_merge($this->_options, $options);
        if (!class_exists($this->_options['classContainer'])) {
            $this->_options['classContainer'] = false;
        }
        if (!class_exists($this->_options['interfaceContainer'])) {
            $this->_options['interfaceContainer'] = false;
        }
        if (!class_exists($this->_options['includeContainer'])) {
            $this->_options['includeContainer'] = false;
        }
        if (!class_exists($this->_options['functionContainer'])) {
            $this->_options['functionContainer'] = false;
        }
        if (!class_exists($this->_options['globalContainer'])) {
            $this->_options['globalContainer'] = false;
        }
        if (!class_exists($this->_options['varContainer'])) {
            $this->_options['varContainer'] = false;
        }
        if (!class_exists($this->_options['constContainer'])) {
            $this->_options['constContainer'] = false;
        }
        if (!class_exists($this->_options['classConstContainer'])) {
            $this->_options['classConstContainer'] = false;
        }
        if (!class_exists($this->_options['methodContainer'])) {
            $this->_options['methodContainer'] = false;
        }
        if (!is_object($this->_options['publisher'])) {
            $this->_options['publisher'] = false;
        } else {
            if (!method_exists($this->_options['publisher'], $this->_options['publishMethod'])) {
                $this->_options['publishMethod'] = false;
                if (!method_exists($this->_options['publisher'], 'publish')) {
                    $this->_options['publisher'] = false;
                } else {
                    $this->_options['publishMethod'] = 'publish';
                }
            } else {
                if (!class_exists($this->_options['publishMessageClass'])) {
                    $this->_options['publishMessageClass'] = false;
                }
            }
        }
    }

    /**
     * (syntax) error message.
     * Can be overwritten to control message format.
     * @param message text to be displayed.
     * @param expected vector of acceptable tokens, if available.
     */
    function raiseError ($message, $code, $params)
    {     
        if (isset($params['expected'])) {
            $p = $params['expected'];
            $m = "$message, expecting ";
            if (count($p) - 1) {
                $last = array_pop($p);
                array_push($p, 'or ' . $last);
            }
            $m .= implode(', ', $p);
        } else {
            $m = $message;
        }
        return PHP_Parser_Stack::staticPush('PHP_Parser_Structure',
            PHP_PARSER_STRUCTURE_ERROR_PARSE,
            'error', $params,
            $m);  
    }

    /**
     * array of classes => array(methods => ...., vars => ....)
     *
     * @var array
     * @access public 
     */

    var $classes = array();

    /**
     * array of interfaces => array(methods => ...., vars => ....)
     *
     * @var array
     * @access public 
     */

    var $interfaces = array();
    /**
     * array of includes
     *
     * @var array
     * @access public 
     */
    var $includes = array();

    /**
     * array of functions
     *
     * @var array
     * @access public 
     */
    var $functions = array();

    /**
     * array of global variables
     *
     * @var array
     * @access public 
     */
    var $globals = array();

    /**
     * array of super-global variables used in
     * non-procedural global code (page-level parameters)
     *
     * @var array
     * @access public 
     */
    var $filesuperglobals = array();

    /**
     * array of variables referenced as $this->var in a class method
     *
     * @var array
     * @access public 
     */
    var $referencedVars = array();
    
    /**
     * array of methods referenced as $this->method() in a class method
     *
     * @var array
     * @access public 
     */
    var $referencedMethods = array();
    
    /**
     * File Summary documentation (page-level DocBlock in phpDocumentor)
     * @var string
     * @access public
     */
    var $documentation;

    /**
     * array of global constants
     *
     * @var array
     * @access public 
     */
    var $constants = array();

    /**
     * global variable name of parser arrays
     * should match the build options  
     *
     * @var string
     * @access private 
     */
    var $yyGlobalName = '_PHP_PARSER_STRUCTURE';

    /**
     * Global Variable helper routine
     * @param string global variable name
     * @access private
     */
    function _initGlobal($name)
    {
        if ($this->yyLex->globalSearch($name)) {
            $lc = $this->yyLex->getLastComment();
            if ($this->_options['globalContainer']) {
                $container = $this->_options['globalContainer'];
                $global = new $container;
                $global->setStartLine($this->yyLex->line);
                $global->setName($name);
                $global->setDocumentation($lc[0]);
            } else {
                $global = array('name' => $name,
                                'documentation' => $lc[0],
                                'line' => $this->yyLex->line);
            }
            $this->globals[$name] = $global;
            $this->_inGlobal = true;
        }
    }

    /**
     * Global Variable helper routine
     * @param string global variable name
     * @param string global variable initial value
     * @access private
     */
    function _processGlobal($name, $value)
    {
        if (isset($this->globals[$name])) {
            // found a global variable we are documenting
            if ($this->_options['globalContainer']) {
                $this->globals[$name]->setValue($value);
            } else {
                $this->globals[$name]['value'] = $value;
            }
            // publish the newly parsed global variable, if global variables should be published
            if ($this->_options['publisher'] && $this->_options['publishGlobals']) {
                $publish = $this->_options['publishMethod'];
                $message = 'method';
                if ($this->_options['publishGlobalMessage']) {
                    $message = $this->_options['publishGlobalMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $const);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $const);
                }
            }
        }
    }
    
    /**
     * For use with MsgServer
     * @param string ignored
     * @param object|array file-level documentation
     */
    function getFileDocs($messagetype, $message)
    {
        $this->documentation = $message;
    }
					// line 363 "-"

    /**
     * thrown for irrecoverable syntax errors and stack overflow.
     */
    
     var $yyErrorCode = 256;

    /**
     * Debugging
     */
     var $debug = false;




    /**
     * index-checked interface to yyName[].
     * @param token single character or %token value.
     * @return token name or [illegal] or [unknown].
     */
    function yyname ($token) {
        if ($token < 0 || $token >  count($GLOBALS[$this->yyGlobalName]['yyName'])) return "[illegal]";
        if (($name = $GLOBALS[$this->yyGlobalName]['yyName'][$token]) != null) return $name;
        return "[unknown]";
    }

    /**
     * computes list of expected tokens on error by tracing the tables.
     * @param state for which to compute the list.
     * @return list of token names.
     */
    function yyExpecting ($state) {
        $len = 0;
        $ok = array();//new boolean[YyNameClass.yyName.length];

        if (($n =  $GLOBALS[$this->yyGlobalName]['yySindex'][$state]) != 0) {
            $start = 1;
            for ($token = $start;
                $token < count($GLOBALS[$this->yyGlobalName]['yyName']) && 
                        $n+$token < count($GLOBALS[$this->yyGlobalName]['yyTable']); $token++) {
                if (@$GLOBALS[$this->yyGlobalName]['yyCheck'][$n+$token] == $token && !@$ok[$token] && 
                        $GLOBALS[$this->yyGlobalName]['yyName'][$token] != null) {
                    $len++;
                    $ok[$token] = true;
                }
            } // end for
        }
        if (($n = $GLOBALS[$this->yyGlobalName]['yyRindex'][$state]) != 0) {
            $start = 1;
            for ($token = $start;
                     $token < count($GLOBALS[$this->yyGlobalName]['yyName'])  && 
                     $n+$token <  count($GLOBALS[$this->yyGlobalName]['yyTable']); $token++) 
            {
               if (@$GLOBALS[$this->yyGlobalName]['yyCheck'][$n+$token] == $token && !@$ok[$token] 
                          && @$GLOBALS[$this->yyGlobalName]['yyName'][$token] != null) {
                    $len++;
                    $ok[$token] = true;
               }
            } // end for
        }
        $result = array();
        for ($n = $token = 0; $n < $len;  $token++) {
            if (@$ok[$token]) { $result[$n++] =$GLOBALS[$this->yyGlobalName]['yyName'][$token]; }
        }
        return $result;
    }


    /**
     * initial size and increment of the state/value stack [default 256].
     * This is not final so that it can be overwritten outside of invocations
     * of yyparse().
     */
    var $yyMax;

    /**
     * executed at the beginning of a reduce action.
     * Used as $$ = yyDefault($1), prior to the user-specified action, if any.
     * Can be overwritten to provide deep copy, etc.
     * @param first value for $1, or null.
     * @return first.
     */
    function yyDefault ($first) {
        return $first;
    }

    /**
     * the generated parser.
     * Maintains a state and a value stack, currently with fixed maximum size.
     * @param yyLex scanner.
     * @return result of the last reduction, if any.
     * @throws yyException on irrecoverable parse error.
     */
    function yyparse (&$yyLex) {
//t        $this->debug = true;
        $this->yyLex = &$yyLex;
        if (!$this->yyGlobalName) {
            echo "\n\nYou must define \$this->yyGlobalName to match the build option -g _XXXXX \n\n";
            exit;
        }
        if ($this->debug)
           echo "\tStarting jay:yyparse";
        //error_reporting(E_ALL);
        if ($this->yyMax <= 0) $this->yyMax = 256;			// initial size
        $this->yyState = 0;
        $this->yyStates = array();
        $this->yyVal = null;
        $this->yyValWithWhitespace = null;
        $this->yyVals = array();
        $this->yW = array();
        $yyTableCount = count($GLOBALS[$this->yyGlobalName]['yyTable']);
        $yyToken = -1;                 // current input
        $yyErrorFlag = 0;              // #tks to shift
        $tloop = 0;
    
        while (1) {//yyLoop: 
            //echo "yyLoop\n";
            //if ($this->debug) echo "\tyyLoop:\n";
            for ($yyTop = 0;; $yyTop++) {
                //if ($this->debug) echo ($tloop++) .">>>>>>yyLoop:yTop = {$yyTop}\n";
                $this->yyStates[$yyTop] = $this->yyState;
                $this->yyVals[$yyTop] = $this->yyVal;
                $this->yW[$yyTop] = $this->yyValWithWhitespace;

                //yyDiscarded: 
                for (;;) {	// discarding a token does not change stack
                    //echo "yyDiscarded\n";
                    if ($this->debug) echo "\tIn main loop : State = {$this->yyState}\n";
                    if ($this->debug) echo "\tyydefred = {$GLOBALS[$this->yyGlobalName]['yyDefRed'][$this->yyState]}\n";
                    if (($yyN = $GLOBALS[$this->yyGlobalName]['yyDefRed'][$this->yyState]) == 0) {	
                        // else [default] reduce (yyN)
                        //if ($this->debug) echo "\tA:token is $yyToken\n";
                        if ($yyToken < 0) {
                            //if ($this->debug) echo "\tA:advance\n";
                            if ($yyLex->advance()) {
                               
                                $yyToken = $yyLex->token ;
                            } else {
                                $yyToken = 0;
                            }
                        }
                        if ($this->debug) {
                            echo "\tA:token is now " .
                            "{$GLOBALS[$this->yyGlobalName]['yyName'][$yyToken]} " .token_name($yyToken).  "\n";
                            var_dump($yyToken);
                        }
                        //if ($this->debug) echo "GOT TOKEN $yyToken";
                        //if ($this->debug) echo "Sindex:  {$GLOBALS[$this->yyGlobalName]['yySindex'][$this->yyState]}\n";

                        if (($yyN = $GLOBALS[$this->yyGlobalName]['yySindex'][$this->yyState]) != 0
                                  && ($yyN += $yyToken) >= 0
                                  && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $yyToken) {
                            $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];		// shift to yyN
                            $this->yyVal = $yyLex->value;
                            $this->yyValWithWhitespace = $yyLex->valueWithWhitespace;
                            $yyToken = -1;
                            if ($yyErrorFlag > 0) $yyErrorFlag--;
                            continue 2; // goto!!yyLoop;
                        }
 
                       
              
                        if (($yyN = $GLOBALS[$this->yyGlobalName]['yyRindex'][$this->yyState]) != 0
                                && ($yyN += $yyToken) >= 0
                                && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $yyToken) {
                            $yyN = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];			// reduce (yyN)
                        } else {
                            switch ($yyErrorFlag) {
    
                                case 0:
                                    $data = $yyLex->parseError();
                                    $info = $data[0];
                                    $info .= ', Unexpected '.$this->yyName($yyToken).',';
                                    return $this->raiseError("$info syntax error",
                                                PHP_PARSER_ERROR_UNEXPECTED,
                                                array(
                                                  'expected' => $this->yyExpecting($this->yyState),
                                                  'token' => $this->yyName($yyToken),
                                                  'line' => $data[1],
                                                ));
                                
                                case 1: case 2:
                                    $yyErrorFlag = 3;
                                    do { 
                                        if (($yyN = @$GLOBALS[$this->yyGlobalName]['yySindex']
                                                [$this->yyStates[$yyTop]]) != 0
                                                && ($yyN += $this->yyErrorCode) >= 0 && $yyN < $yyTableCount
                                                && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $this->yyErrorCode) {
                                            $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];
                                            $this->yyVal = $yyLex->value;
                                            $this->yyValWithWhitespace = $yyLex->valueWithWhitespace;
                                            //vi /echo "goto yyLoop?\n";
                                            break 3; //continue yyLoop;
                                        }
                                    } while ($yyTop-- >= 0);
                                    $data = $yyLex->parseError();
                                    return $this->raiseError("$data[0] irrecoverable syntax error",
                                           PHP_PARSER_ERROR_SYNTAX,
                                           array('line' => $data[1]));
    
                                case 3:
                                    if ($yyToken == 0) {
                                        $info =$yyLex->parseError();
                                        return $this->raiseError("$info[0] irrecoverable syntax error at end-of-file",
                                           PHP_PARSER_ERROR_SYNTAX_EOF,
                                           array('line' => $info[1]));
                                    }
                                    $yyToken = -1;
                                    //echo "goto yyDiscarded?";  
                                    break 1; //continue yyDiscarded;		// leave stack alone
                            }
                        }
                    }    
                    $yyV = $yyTop + 1-$GLOBALS[$this->yyGlobalName]['yyLen'][$yyN];
                    //if ($this->debug) echo "\tyyV is $yyV\n";
                    $yyVal = $yyV > $yyTop ? null : $this->yyVals[$yyV];
                    //if ($this->debug) echo "\tyyVal is ". serialize($yyVal) ."\n";
                    if ($this->debug) echo "\tswitch($yyN)\n";
                   
                    $method = '_' .$yyN;
                    if (method_exists($this,$method)) {
                         $this->$method($yyTop);

                    }
                   
                    //if ($this->debug) echo "\tDONE switch\n";if ($this->debug) echo "\t--------------\n";
                    $yyTop -= $GLOBALS[$this->yyGlobalName]['yyLen'][$yyN];
                    //if ($this->debug) echo "\tyyTop is $yyTop\n";
                    $this->yyState = $this->yyStates[$yyTop];
                    //if ($this->debug) echo "\tyyState is {$this->yyState}\n";
                    $yyM = $GLOBALS[$this->yyGlobalName]['yyLhs'][$yyN];
                    //if ($this->debug) echo "\tyyM is now $yyM\n";



                    if ($this->yyState == 0 && $yyM == 0) {
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyFinal'];
                        if ($yyToken < 0) {
                            $yyToken =0;
                            if ($yyLex->advance()) {
                                $yyToken = $yyLex->token;
                            }
                        }
                        if ($this->debug) echo "\tTOKEN IS NOW $yyToken\n";
                        if ($yyToken == 0) {
                            return $yyVal;
                        }
                        //if ($this->debug) echo "\t>>>>> yyLoop(A)?\n";
                        continue 2; //continue yyLoop;
                    }
                    if (($yyN = $GLOBALS[$this->yyGlobalName]['yyGindex'][$yyM]) != 0 && ($yyN += $this->yyState) >= 0
                            && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $this->yyState) {
                        //if ($this->debug) echo "\tyyState: using yyTable\n";
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];
                    } else {
                        //if ($this->debug) echo "\tyyState: using yyDgoto\n";
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyDgoto'][$yyM];
                    }  
                    //if ($this->debug) echo "\t>>>>> yyLoop(B)?\n";
                    continue 2;//continue yyLoop;
                }
            }
        }
    }


    function _24($yyTop)  					// line 549 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->returns)) {
            $this->returns[] = trim($this->yyVals[-1+$yyTop]);
        }
    }

    function _25($yyTop)  					// line 555 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->returns)) {
            $this->returns[] = trim($this->yyVals[-1+$yyTop]);
        }
    }

    function _37($yyTop)  					// line 575 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->catches)) {
            $this->catches[] = trim($this->yyVals[-6+$yyTop]);
        }
        if (isset($this->referencedClasses)) {
            $this->referencedClasses[] = trim($this->yyVals[-6+$yyTop]);
        }
    }

    function _38($yyTop)  					// line 584 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_get_class = true;
    }

    function _39($yyTop)  					// line 587 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_get_class = false;
        if (isset($this->throws)) {
            $this->throws[] = trim($this->yyVals[-1+$yyTop]);
        }
    }

    function _44($yyTop)  					// line 607 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->catches)) {
            $this->catches[] = trim($this->yyVals[-5+$yyTop]);
        }
        if (isset($this->referencedClasses)) {
            $this->referencedClasses[] = trim($this->yyVals[-5+$yyTop]);
        }
    }

    function _45($yyTop)  					// line 616 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->catches)) {
            $this->catches[] = trim($this->yyVals[-5+$yyTop]);
        }
        if (isset($this->referencedClasses)) {
            $this->referencedClasses[] = trim($this->yyVals[-5+$yyTop]);
        }
    }

    function _47($yyTop)  					// line 630 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _53($yyTop)  					// line 656 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = false;
    }

    function _54($yyTop)  					// line 660 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = true;
    }

    function _55($yyTop)  					// line 668 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->functionLine = $this->yyLex->line; 
        $this->functionPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->functionComment = $lc[0];
        $this->functionCommentToken = $this->yyLex->lastCommentToken;
        $this->params = array();
        $this->statics = array();
        $this->funcglobals = array();
        $this->superglobals = array();
        $this->referencedClasses = array();
        $this->referencedFunctions = array();
        $this->returns = array();
        $this->throws = array();
        $this->catches = array();
        if ($this->_options['functionContainer']) {
            $container = $this->_options['functionContainer'];
            $this->functions[$this->yyVals[0+$yyTop]] = new $container;
            $this->functions[$this->yyVals[0+$yyTop]]->setReference($this->yyVals[-1+$yyTop]);
        } else {
        }
    }

    function _56($yyTop)  					// line 691 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->referencedClasses = array_values(array_unique($this->referencedClasses));
        $this->referencedFunctions = array_values(array_unique($this->referencedFunctions));
        if ($this->_options['functionContainer']) {
            $container = $this->_options['functionContainer'];
            $this->functions[$this->yyVals[-7+$yyTop]] = new $container;
            $this->functions[$this->yyVals[-7+$yyTop]]->setName($this->yyVals[-7+$yyTop]);
            $this->functions[$this->yyVals[-7+$yyTop]]->setReference($this->yyVals[-8+$yyTop]);
            $this->functions[$this->yyVals[-7+$yyTop]]->setReferencedClasses($this->referencedClasses);
            $this->functions[$this->yyVals[-7+$yyTop]]->setReferencedClasses($this->referencedFunctions);
            $this->functions[$this->yyVals[-7+$yyTop]]->setParams($this->params);
            $this->functions[$this->yyVals[-7+$yyTop]]->setGlobals($this->funcglobals);
            $this->functions[$this->yyVals[-7+$yyTop]]->setSuperGlobals($this->superglobals);
            $this->functions[$this->yyVals[-7+$yyTop]]->setStatics($this->statics);
            $this->functions[$this->yyVals[-7+$yyTop]]->setThrows($this->throws);
            $this->functions[$this->yyVals[-7+$yyTop]]->setCatches($this->throws);
            $this->functions[$this->yyVals[-7+$yyTop]]->setDocumentation($this->functionComment);
            $this->functions[$this->yyVals[-7+$yyTop]]->setStartLine($this->functionLine);
            $this->functions[$this->yyVals[-7+$yyTop]]->setEndLine($this->yyLex->line);
        } else {
            $this->functions[$this->yyVals[-7+$yyTop]] = array(
                'name' => $this->yyVals[-7+$yyTop],
                'returnsReference' => $this->yyVals[-8+$yyTop],
                'params' => $this->params,
                'globals' => $this->funcglobals,
                'statics' => $this->statics,
                'throws' => $this->throws,
                'catches' => $this->catches,
                'referencedFunctions' => $this->referencedFunctions,
                'referencedClasses' => $this->referencedClasses,
                'returns' => $this->returns,
                'superglobals' => $this->superglobals,
                'startline' => $this->functionLine,
                'endline' => $this->yyLex->line,
                'documentation' => $this->functionComment,
                );
        }
        /* publish the newly parsed function, if functions should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishFunctions']) {
            $publish = $this->_options['publishMethod'];
            $message = 'function';
            if ($this->_options['publishFunctionMessage']) {
                $message = $this->_options['publishFunctionMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->functions[$this->yyVals[-7+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->functions[$this->yyVals[-7+$yyTop]]);
            }
        }
        unset($this->params);
        unset($this->returns);
        unset($this->statics);
        unset($this->funcglobals);
        unset($this->superglobals);
        unset($this->throws);
        unset($this->referencedClasses);
    }

    function _57($yyTop)  					// line 757 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->classLine = $this->yyLex->line; 
        $this->classPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->classComment = $lc[0];
        $this->classCommentToken = $this->yyLex->lastCommentToken;
    }

    function _58($yyTop)  					// line 764 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->methods = array();
        $this->vars = array();
        $this->consts = array();
        $this->implementsInterfaces = array();
    }

    function _59($yyTop)  					// line 774 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $name = trim($this->yyVals[-6+$yyTop]);
        if ($this->_options['classContainer']) {
            $container = $this->_options['classContainer'];
            $this->classes[$name] = new $container;
            $this->classes[$name]->setName(trim($name));
            $this->classes[$name]->setExtends(trim($this->yyVals[-5+$yyTop]));
            $this->classes[$name]->setType($this->yyVals[-7+$yyTop]);
            $this->classes[$name]->setMethods($this->methods);
            $this->classes[$name]->setVars($this->vars);
            $this->classes[$name]->setConsts($this->consts);
            $this->classes[$name]->setImplements($this->implementsInterfaces);
            $this->classes[$name]->setDocumentation($this->classComment);
            $this->classes[$name]->setStartLine($this->classLine);
            $this->classes[$name]->setEndLine($this->yyLex->line);
        } else {
            /* use arrays if no class container is defined
*/
            $this->classes[trim($name)] = array(
                 'extends' => trim($this->yyVals[-5+$yyTop]),
                 'type' => $this->yyVals[-7+$yyTop],
                 'methods' => $this->methods,
                 'vars' => $this->vars,
                 'consts' => $this->consts,
                 'implements' => $this->implementsInterfaces,
                 'startline' => $this->classLine,
                 'endline' => $this->yyLex->line,
                 'documentation' => $this->classComment,
                 );
        }
        /* publish the newly parsed class, if classes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClasses']) {
            $publish = $this->_options['publishMethod'];
            $message = 'class';
            if ($this->_options['publishClassMessage']) {
                $message = $this->_options['publishClassMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->classes[$this->yyVals[-6+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->classes[$this->yyVals[-6+$yyTop]]);
            }
        }
        unset($this->methods);
        unset($this->vars);
        unset($this->consts);
        unset($this->throws);
        unset($this->implementsInterfaces);
    }

    function _60($yyTop)  					// line 827 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->classLine = $this->yyLex->line; 
        $this->classPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->classComment = $lc[0];
        $this->classCommentToken = $this->yyLex->lastCommentToken;
        $this->implementsInterfaces = array();
    }

    function _61($yyTop)  					// line 835 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->methods = array();
    }

    function _62($yyTop)  					// line 839 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $name = trim($this->yyVals[-5+$yyTop]);
        if ($this->_options['interfaceContainer']) {
            $container = $this->_options['interfaceContainer'];
            $this->interfaces[$name] = new $container;
            $this->interfaces[$name]->setName($name);
            $this->interfaces[$name]->setExtends('');
            $this->interfaces[$name]->setMethods($this->methods);
            $this->interfaces[$name]->setExtends($this->implementsInterfaces);
            $this->interfaces[$name]->setDocumentation($this->classComment);
            $this->interfaces[$name]->setStartLine($this->classLine);
            $this->interfaces[$name]->setEndLine($this->yyLex->line);
        } else {
            /* use arrays if no class container is defined
*/
            $this->interfaces[$name] = array(
                 'methods' => $this->methods,
                 'extends' => $this->implementsInterfaces,
                 'startline' => $this->classLine,
                 'endline' => $this->yyLex->line,
                 'documentation' => $this->classComment,
                 );
        }
        /* publish the newly parsed class, if classes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishInterfaces']) {
            $publish = $this->_options['publishMethod'];
            $message = 'class';
            if ($this->_options['publishInterfaceMessage']) {
                $message = $this->_options['publishInterfaceMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->classes[$this->yyVals[-5+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->classes[$this->yyVals[-5+$yyTop]]);
            }
        }
        unset($this->methods);
        unset($this->implementsInterfaces);
    }

    function _63($yyTop)  					// line 886 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _64($yyTop)  					// line 890 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'abstract';
    }

    function _65($yyTop)  					// line 894 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'final';
    }

    function _66($yyTop)  					// line 901 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _67($yyTop)  					// line 905 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _68($yyTop)  					// line 912 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'interface';
    }

    function _73($yyTop)  					// line 929 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->implementsInterfaces)) {
            $this->implementsInterfaces[] = trim($this->yyVals[0+$yyTop]);
        }
    }

    function _74($yyTop)  					// line 935 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->implementsInterfaces)) {
            $this->implementsInterfaces[] = trim($this->yyVals[0+$yyTop]);
        }
    }

    function _106($yyTop)  					// line 1031 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false);
    }

    function _107($yyTop)  					// line 1035 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-2+$yyTop], 'isReference' => true);
    }

    function _108($yyTop)  					// line 1039 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => trim($this->yyVals[0+$yyTop]), 'type' => $this->yyVals[-4+$yyTop], 'isReference' => true);
    }

    function _109($yyTop)  					// line 1043 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => trim($this->yyVals[0+$yyTop]), 'type' => $this->yyVals[-3+$yyTop], 'isReference' => false);
    }

    function _110($yyTop)  					// line 1047 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false);
    }

    function _111($yyTop)  					// line 1051 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-2+$yyTop], 'isReference' => true);
    }

    function _112($yyTop)  					// line 1055 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => trim($this->yyVals[0+$yyTop]), 'type' => $this->yyVals[-4+$yyTop], 'isReference' => true);
    }

    function _113($yyTop)  					// line 1059 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => trim($this->yyVals[0+$yyTop]), 'type' => $this->yyVals[-3+$yyTop], 'isReference' => false);
    }

    function _114($yyTop)  					// line 1067 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _115($yyTop)  					// line 1071 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _117($yyTop)  					// line 1080 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _120($yyTop)  					// line 1090 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _121($yyTop)  					// line 1094 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = trim($this->yyVals[-2+$yyTop]);
            $this->defineValue = trim($this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _122($yyTop)  					// line 1102 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = trim($this->yyVals[-2+$yyTop]);
            $this->defineValue = trim($this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _123($yyTop)  					// line 1110 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = trim($this->yyVals[-3+$yyTop]);
            $this->defineValue = '&' . trim($this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _126($yyTop)  					// line 1127 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->funcglobals[] = $this->yyVals[0+$yyTop];
    }

    function _127($yyTop)  					// line 1131 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->funcglobals[] = '$' . $this->yyVals[-1+$yyTop];
    }

    function _128($yyTop)  					// line 1135 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->funcglobals[] = '${' . $this->yyVals[-1+$yyTop] . '}';
    }

    function _129($yyTop)  					// line 1143 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[0+$yyTop], 'default' => null);
    }

    function _130($yyTop)  					// line 1147 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[-2+$yyTop], 'default' => trim($this->yyVals[0+$yyTop]));
    }

    function _131($yyTop)  					// line 1151 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[0+$yyTop], 'default' => null);
    }

    function _132($yyTop)  					// line 1155 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[-2+$yyTop], 'default' => trim($this->yyVals[0+$yyTop]));
    }

    function _135($yyTop)  					// line 1169 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        foreach($this->yyVals[0+$yyTop] as $var) {
            $is_static = false;
            if (in_array('static', $this->yyVals[-1+$yyTop])) {
                $is_static = true;
                $z = array_flip($this->yyVals[-1+$yyTop]);
                unset($this->yyVals[-1+$yyTop][$z['static']]);
            }
            if ($this->_options['varContainer']) {
                $var->setAccess($this->yyVals[-1+$yyTop]);
                if ($is_static) {
                    $var->setStatic();
                }
            } else {
                $var['access'] = $this->yyVals[-1+$yyTop];
                $var['static'] = $is_static;
            }
            if ($is_static) {
                $this->yyVals[-1+$yyTop][$z['static']] = 'static';
            }
            $this->vars[$var['name']] = $var;
            /* publish the newly parsed var, if vars should be published
*/
            if ($this->_options['publisher'] && $this->_options['publishVars']) {
                $publish = $this->_options['publishMethod'];
                $message = 'var';
                if ($this->_options['publishVarMessage']) {
                    $message = $this->_options['publishVarMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $var);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $var);
                }
            }
        }
    }

    function _138($yyTop)  					// line 1211 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->methodLine = $this->yyLex->line; 
        $this->methodPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->methodComment = $lc[0];
        $this->methodCommentToken = $this->yyLex->lastCommentToken;
    }

    function _139($yyTop)  					// line 1219 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->throws = array();
        $this->catches = array();
        $this->params = array();
        $this->returns = array();
        $this->referencedVars = array();
        $this->referencedMethods = array();
        $this->referencedFunctions = array();
        $this->referencedClasses = array();
        $this->statics = array();
        $this->funcglobals = array();
        $this->superglobals = array();
    }

    function _140($yyTop)  					// line 1233 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $is_static = false;
        $is_abstract = false;
        if (in_array('static', $this->yyVals[-9+$yyTop])) {
            $is_static = true;
            $z = array_flip($this->yyVals[-9+$yyTop]);
            unset($this->yyVals[-9+$yyTop][$z['static']]);
        }
        if (in_array('abstract', $this->yyVals[-9+$yyTop])) {
            $is_abstract = true;
            $z = array_flip($this->yyVals[-9+$yyTop]);
            unset($this->yyVals[-9+$yyTop][$z['abstract']]);
        }
        /* remove duplicates
*/
        $this->referencedClasses = array_values(array_unique($this->referencedClasses));
        $this->referencedFunctions = array_values(array_unique($this->referencedFunctions));
        $ar = $this->referencedMethods;
        foreach ($ar as $key => $val) {
            $this->referencedMethods[$key] = array_values(array_unique($val));
        }
        $ar = $this->referencedVars;
        foreach ($ar as $key => $val) {
            $this->referencedVars[$key] = array_values(array_unique($val));
        }
        if ($this->_options['methodContainer']) {
            $container = $this->_options['methodContainer'];
            $this->methods[$this->yyVals[-5+$yyTop]] = new $container;
            $this->methods[$this->yyVals[-5+$yyTop]]->setName($this->yyVals[-5+$yyTop]);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReference($this->yyVals[-6+$yyTop]);
            $this->methods[$this->yyVals[-5+$yyTop]]->setParams($this->params);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReferencedVars($this->referencedVars);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReferencedMethods($this->referencedMethods);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReferencedFunctions($this->referencedFunctions);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReferencedClasses($this->referencedClasses);
            $this->methods[$this->yyVals[-5+$yyTop]]->setGlobals($this->funcglobals);
            $this->methods[$this->yyVals[-5+$yyTop]]->setSuperGlobals($this->superglobals);
            $this->methods[$this->yyVals[-5+$yyTop]]->setStatics($this->statics);
            $this->methods[$this->yyVals[-5+$yyTop]]->setThrows($this->throws);
            $this->methods[$this->yyVals[-5+$yyTop]]->setCatches($this->catches);
            $this->methods[$this->yyVals[-5+$yyTop]]->setStartLine($this->methodLine);
            $this->methods[$this->yyVals[-5+$yyTop]]->setEndLine($this->yyLex->line);
            $this->methods[$this->yyVals[-5+$yyTop]]->setDocumentation($this->methodComment);
            if ($is_static) {
                $this->methods[$this->yyVals[-5+$yyTop]]->setStaticMethod();
            }
            if ($is_abstract) {
                $this->methods[$this->yyVals[-5+$yyTop]]->setAbstractMethod();
            }
            $this->methods[$this->yyVals[-5+$yyTop]]->setModifiers(array_values($this->yyVals[-9+$yyTop]));
        } else {
            $this->methods[$this->yyVals[-5+$yyTop]] = array(
                'name' => $this->yyVals[-5+$yyTop],
                'access' => array_values($this->yyVals[-9+$yyTop]),
                'static' => $is_static,
                'abstract' => $is_abstract,
                'returnsReference' => $this->yyVals[-6+$yyTop],
                'params' => $this->params,
                'globals' => $this->funcglobals,
                'statics' => $this->statics,
                'throws' => $this->throws,
                'catches' => $this->catches,
                'referencedFunctions' => $this->referencedFunctions,
                'referencedVars' => $this->referencedVars,
                'referencedMethods' => $this->referencedMethods,
                'referencedClasses' => $this->referencedClasses,
                'returns' => $this->returns,
                'superglobals' => $this->superglobals,
                'startline' => $this->methodLine,
                'endline' => $this->yyLex->line,
                'documentation' => $this->methodComment,
                );
        }
        /* publish the newly parsed method, if methods should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishMethodMessage']) {
                $message = $this->_options['publishMethodMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->methods[$this->yyVals[-5+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->methods[$this->yyVals[-5+$yyTop]]);
            }
        }
        unset($this->returns);
        unset($this->referencedFunctions);
        unset($this->referencedVars);
        unset($this->referencedMethods);
        unset($this->referencedClasses);
        unset($this->statics);
        unset($this->throws);
        unset($this->catches);
        unset($this->funcglobals);
        unset($this->superglobals);
    }

    function _143($yyTop)  					// line 1343 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _144($yyTop)  					// line 1347 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = array('public');
    }

    function _145($yyTop)  					// line 1354 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = array('public');
    }

    function _146($yyTop)  					// line 1358 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _147($yyTop)  					// line 1365 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = array($this->yyVals[0+$yyTop]);
    }

    function _148($yyTop)  					// line 1369 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
        $this->yyVal[] = $this->yyVals[0+$yyTop];
    }

    function _149($yyTop)  					// line 1377 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'public';
    }

    function _150($yyTop)  					// line 1381 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'protected';
    }

    function _151($yyTop)  					// line 1385 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'private';
    }

    function _152($yyTop)  					// line 1389 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'static';
    }

    function _153($yyTop)  					// line 1393 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'abstract';
    }

    function _154($yyTop)  					// line 1397 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = 'final';
    }

    function _155($yyTop)  					// line 1404 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop];
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[0+$yyTop]);
            $var->setStartLine($this->yyLex->line);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $this->yyVal[] = $var;
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal[] = array('name' => $this->yyVals[0+$yyTop],
                         'startline' => $this->_varLine,
                         'endline' => $this->yyLex->line,
                         'documentation' => $lc[0],
                         'default' => null);
        }
    }

    function _156($yyTop)  					// line 1426 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_varLine = $this->yyLex->line;
        
    }

    function _157($yyTop)  					// line 1430 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-5+$yyTop];
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[-3+$yyTop]);
            $var->setStartLine($this->_varLine);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $var->setDefault(trim($this->yyVals[0+$yyTop]));
            $this->yyVal[] = $var;
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal[] = array('name' => $this->yyVals[-3+$yyTop],
                         'startline' => $this->yyLex->line,
                         'endline' => $this->yyLex->line,
                         'documentation' => $lc[0],
                         'default' => trim($this->yyVals[0+$yyTop]));
        }
    }

    function _158($yyTop)  					// line 1453 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[0+$yyTop]);
            $var->setStartLine($this->yyLex->line);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $this->yyVal = array($var);
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal = array(array('name' => $this->yyVals[0+$yyTop],
                             'startline' => $this->yyLex->line,
                             'endline' => $this->yyLex->line,
                             'documentation' => $lc[0],
                             'default' => null));
        }
    }

    function _159($yyTop)  					// line 1473 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_varLine = $this->yyLex->line;
    }

    function _160($yyTop)  					// line 1476 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[-3+$yyTop]);
            $var->setStartLine($this->_varLine);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $var->setDefault(trim($this->yyVals[0+$yyTop]));
            $this->yyVal = array($var);
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal = array(array('name' => $this->yyVals[-3+$yyTop],
                             'startline' => $this->_varLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $lc[0],
                             'default' => trim($this->yyVals[0+$yyTop])));
        }
    }

    function _161($yyTop)  					// line 1500 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $lc = $this->yyLex->getLastComment();
        $this->constLine = $this->yyLex->line;
        $this->constComment = $lc[0];
    }

    function _162($yyTop)  					// line 1505 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['classConstContainer']) {
            $container = $this->_options['classConstContainer'];
            $const = new $container;
            $const->setStartLine($this->constLine);
            $const->setEndLine($this->yyLex->line);
            $const->setDocumentation($this->constComment);
            $const->setValue(trim($this->yyVals[0+$yyTop]));
            $const->setName($this->yyVals[-3+$yyTop]);
        } else {
            $const = array('name' => $this->yyVals[-3+$yyTop],
                           'value' => trim($this->yyVals[0+$yyTop]),
                           'startline' => $this->constLine,
                           'endline' => $this->yyLex->line,
                           'documentation' => $this->constComment);
        }
        $this->consts[$this->yyVals[-2+$yyTop]] = $const;
        /* publish the newly parsed class constant, if class constants should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClassConstants']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishClassConstantMessage']) {
                $message = $this->_options['publishClassConstantMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $const);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $const);
            }
        }
    }

    function _163($yyTop)  					// line 1541 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->constLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->constComment = $lc[0];
    }

    function _164($yyTop)  					// line 1546 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['classConstContainer']) {
            $container = $this->_options['classConstContainer'];
            $const = new $container;
            $const->setStartLine($this->constLine);
            $const->setEndLine($this->yyLex->line);
            $const->setDocumentation($this->constComment);
            $const->setValue(trim($this->yyVals[0+$yyTop]));
            $const->setName($this->yyVals[-2+$yyTop]);
        } else {
            $const = array('name' => $this->yyVals[-2+$yyTop],
                           'value' => trim($this->yyVals[0+$yyTop]),
                           'startline' => $this->constLine,
                           'endline' => $this->yyLex->line,
                           'documentation' => $this->constComment);
        }
        $this->consts[$this->yyVals[-2+$yyTop]] = $const;
        /* publish the newly parsed class constant, if class constants should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClassConstants']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishClassConstantMessage']) {
                $message = $this->_options['publishClassConstantMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $const);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $const);
            }
        }
    }

    function _171($yyTop)  					// line 1601 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 5] . $this->yW[$yyTop - 4] . $this->yyVals[-3+$yyTop] . 
            $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _172($yyTop)  					// line 1606 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_initGlobal(trim($this->yyVals[-1+$yyTop]));
    }

    function _173($yyTop)  					// line 1609 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_inGlobal) {
            $this->_processGlobal($this->yyVals[-3+$yyTop], $this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _174($yyTop)  					// line 1616 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_initGlobal($this->yyVals[-2+$yyTop]);
    }

    function _175($yyTop)  					// line 1619 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_inGlobal) {
            $this->_processGlobal($this->yyVals[-4+$yyTop], '&' . $this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[0+$yyTop];
    }

    function _176($yyTop)  					// line 1626 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_initGlobal($this->yyVals[-3+$yyTop]);
    }

    function _177($yyTop)  					// line 1629 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_inGlobal) {
            $this->_processGlobal($this->yyVals[-6+$yyTop], '&' . $this->yW[$yyTop - 4] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop]);
        }
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = $this->yyVals[-6+$yyTop] . $this->yW[$yyTop - 5]. $this->yW[$yyTop - 4] . $this->yW[$yyTop - 3] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
        }
    }

    function _178($yyTop)  					// line 1640 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
        }
    }

    function _179($yyTop)  					// line 1648 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _180($yyTop)  					// line 1652 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _181($yyTop)  					// line 1656 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _182($yyTop)  					// line 1660 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _183($yyTop)  					// line 1664 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _184($yyTop)  					// line 1668 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _185($yyTop)  					// line 1672 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _186($yyTop)  					// line 1676 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _187($yyTop)  					// line 1680 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _188($yyTop)  					// line 1684 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _189($yyTop)  					// line 1688 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _190($yyTop)  					// line 1692 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _191($yyTop)  					// line 1696 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _192($yyTop)  					// line 1700 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _193($yyTop)  					// line 1704 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _194($yyTop)  					// line 1708 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _195($yyTop)  					// line 1712 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _196($yyTop)  					// line 1716 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _197($yyTop)  					// line 1720 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _198($yyTop)  					// line 1724 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _199($yyTop)  					// line 1728 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _200($yyTop)  					// line 1732 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _201($yyTop)  					// line 1736 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _202($yyTop)  					// line 1740 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _203($yyTop)  					// line 1744 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _204($yyTop)  					// line 1748 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _205($yyTop)  					// line 1752 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _206($yyTop)  					// line 1756 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _207($yyTop)  					// line 1760 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _208($yyTop)  					// line 1764 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _209($yyTop)  					// line 1768 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _210($yyTop)  					// line 1772 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _211($yyTop)  					// line 1776 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _212($yyTop)  					// line 1780 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _213($yyTop)  					// line 1784 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _214($yyTop)  					// line 1788 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _215($yyTop)  					// line 1792 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _216($yyTop)  					// line 1796 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _217($yyTop)  					// line 1800 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _218($yyTop)  					// line 1804 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _219($yyTop)  					// line 1808 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _220($yyTop)  					// line 1812 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _221($yyTop)  					// line 1816 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _222($yyTop)  					// line 1820 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _223($yyTop)  					// line 1824 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _224($yyTop)  					// line 1828 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
        }
    }

    function _225($yyTop)  					// line 1838 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _227($yyTop)  					// line 1843 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _228($yyTop)  					// line 1847 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _229($yyTop)  					// line 1851 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _230($yyTop)  					// line 1855 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _231($yyTop)  					// line 1859 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _232($yyTop)  					// line 1863 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _233($yyTop)  					// line 1867 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _234($yyTop)  					// line 1871 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _235($yyTop)  					// line 1875 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _237($yyTop)  					// line 1880 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop]
            . $this->yW[$yyTop];
    }

    function _238($yyTop)  					// line 1885 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _239($yyTop)  					// line 1889 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _240($yyTop)  					// line 1896 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (strtolower($this->yyVals[0+$yyTop]) == 'define') {
            $this->defineLine = $this->yyLex->line;
            $lc = $this->yyLex->getLastComment();
            $this->defineComment = $lc[0];
            $this->_grabDefine = true;
            $this->defineName = '';
            $this->defineValue = '';
        }
    }

    function _241($yyTop)  					// line 1906 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->referencedFunctions)) {
            $this->referencedFunctions[] = $this->yyVals[-4+$yyTop];
        }
        if ($this->_grabDefine && !empty($this->defineName)) {
            /* attempt to determine whether this is a simple string
*/
            $test = token_get_all('<?php ;' . $this->defineName);
            $simple = false;
            if (count($test) == 3 && $test[2][0] == T_CONSTANT_ENCAPSED_STRING) {
                /* it's a simple define
*/
                $this->defineName = substr($this->defineName, 1, strlen($this->defineName) - 2);
                $simple = true;
            }
            if ($this->_options['constContainer']) {
                $container = $this->_options['constContainer'];
                $const = new $container;
                $const->setStartLine($this->defineLine);
                $const->setEndLine($this->yyLex->line);
                $const->setDocumentation($this->defineComment);
                $const->setValue($this->defineValue);
                $const->setName($this->defineName, $simple);
            } else {
                $const = array('name' => $this->defineName,
                               'value' => $this->defineValue,
                               'simple' => $simple,
                               'startline' => $this->defineLine,
                               'endline' => $this->yyLex->line,
                               'documentation' => $this->defineComment);
            }
            $this->constants[$this->defineName] = $const;
            /* publish the newly parsed class constant, if class constants should be published
*/
            if ($this->_options['publisher'] && $this->_options['publishConstants']) {
                $publish = $this->_options['publishMethod'];
                $message = 'method';
                if ($this->_options['publishConstantMessage']) {
                    $message = $this->_options['publishConstantMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $const);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $const);
                }
            }
        }
        $this->_grabDefine = false;
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _242($yyTop)  					// line 1958 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->referencedMethods[$this->_lastClassname][] = $this->_lastConst;
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _243($yyTop)  					// line 1963 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
    }

    function _244($yyTop)  					// line 1965 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->referencedVars)) {
            foreach ($this->referencedVars[$this->_lastClassname] as $i => $var) {
                if ($var == $this->_lastVar) {
                    break;
                }
            }
            unset ($this->referencedVars[$this->_lastClassname][$i]);
            if (!count($this->referencedVars[$this->_lastClassname])) {
                unset($this->referencedVars[$this->_lastClassname]);
            }
            $this->referencedMethods[$this->_lastClassname][] = $this->_lastVar;
        }
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _245($yyTop)  					// line 1982 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _246($yyTop)  					// line 1990 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->referencedClasses) && strtolower($this->yyVals[0+$yyTop]) != 'self' && strtolower($this->yyVals[0+$yyTop]) != 'parent') {
            $this->referencedClasses[] = $this->yyVals[0+$yyTop];
        }
        $this->yyVal = $this->yW[$yyTop];
    }

    function _247($yyTop)  					// line 2000 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
            $this->yyVal = $this->yW[$yyTop];
            if (isset($this->referencedClasses)) {
                $this->referencedClasses[] = $this->yyVals[0+$yyTop];
            }
        }

    function _248($yyTop)  					// line 2007 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _249($yyTop)  					// line 2016 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
                $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
            }

    function _251($yyTop)  					// line 2025 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
            $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
        }

    function _253($yyTop)  					// line 2034 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _254($yyTop)  					// line 2041 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _255($yyTop)  					// line 2045 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yW[$yyTop];
    }

    function _256($yyTop)  					// line 2049 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _257($yyTop)  					// line 2057 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _258($yyTop)  					// line 2061 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _259($yyTop)  					// line 2069 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _260($yyTop)  					// line 2073 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _261($yyTop)  					// line 2077 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _262($yyTop)  					// line 2081 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _263($yyTop)  					// line 2085 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _264($yyTop)  					// line 2089 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _265($yyTop)  					// line 2093 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _266($yyTop)  					// line 2097 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _268($yyTop)  					// line 2105 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _269($yyTop)  					// line 2109 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _270($yyTop)  					// line 2113 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _271($yyTop)  					// line 2117 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop]
            . $this->yW[$yyTop];
    }

    function _273($yyTop)  					// line 2126 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->referencedClasses)) {
            $this->referencedClasses[] = $this->yyVals[-2+$yyTop];
        }
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yW[$yyTop];
    }

    function _274($yyTop)  					// line 2136 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _275($yyTop)  					// line 2140 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _278($yyTop)  					// line 2146 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _279($yyTop)  					// line 2150 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _280($yyTop)  					// line 2154 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _281($yyTop)  					// line 2162 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _282($yyTop)  					// line 2166 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _283($yyTop)  					// line 2173 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _284($yyTop)  					// line 2177 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _285($yyTop)  					// line 2184 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _286($yyTop)  					// line 2188 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _287($yyTop)  					// line 2192 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _294($yyTop)  					// line 2219 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->referencedVars)) {
            if (trim($this->yyVals[-4+$yyTop]) == '$this') {
                if (!$this->yyVals[-1+$yyTop]) {
                    $this->referencedVars['$this'][] = trim($this->yyVals[-2+$yyTop]);
                } else {
                    $this->referencedMethods['$this'][] = trim($this->yyVals[-2+$yyTop]);
                }
            }
        }
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yyVals[-2+$yyTop] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _295($yyTop)  					// line 2232 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _296($yyTop)  					// line 2239 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _297($yyTop)  					// line 2243 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _298($yyTop)  					// line 2251 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _299($yyTop)  					// line 2258 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _300($yyTop)  					// line 2262 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _301($yyTop)  					// line 2269 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _302($yyTop)  					// line 2273 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _303($yyTop)  					// line 2280 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->_lastClassname = trim($this->yyVals[-2+$yyTop]);
        $this->_lastVar = trim($this->yyVals[0+$yyTop]);
        $this->referencedVars[trim($this->yyVals[-2+$yyTop])][] = trim($this->yyVals[0+$yyTop]);
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _304($yyTop)  					// line 2291 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _305($yyTop)  					// line 2295 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _306($yyTop)  					// line 2303 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _307($yyTop)  					// line 2307 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _308($yyTop)  					// line 2311 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _309($yyTop)  					// line 2318 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if (isset($this->superglobals)) {
            $test = trim($this->yyVals[-3+$yyTop]);
            if ($test == '$GLOBALS' ||
                $test == '$_SERVER' ||
                $test == '$_REQUEST' ||
                $test == '$_ENV' ||
                $test == '$_GET' ||
                $test == '$_POST' ||
                $test == '$_COOKIE' ||
                $test == '$_FILES' ||
                $test == '$_SESSION') {
                $this->_get_var = false;
                $this->superglobals[] = array('array' => $test,
                                              'var' => trim($this->yyVals[-1+$yyTop]));
            }
        } else {
            $test = trim($this->yyVals[-3+$yyTop]);
            if ($test == '$GLOBALS' ||
                $test == '$_SERVER' ||
                $test == '$_REQUEST' ||
                $test == '$_ENV' ||
                $test == '$_GET' ||
                $test == '$_POST' ||
                $test == '$_COOKIE' ||
                $test == '$_FILES' ||
                $test == '$_SESSION') {
                $this->_get_var = false;
                $this->filesuperglobals[] = array('array' => $test,
                                              'var' => trim($this->yyVals[-1+$yyTop]));
            }
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _310($yyTop)  					// line 2353 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _311($yyTop)  					// line 2357 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _312($yyTop)  					// line 2365 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _313($yyTop)  					// line 2369 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _314($yyTop)  					// line 2376 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _318($yyTop)  					// line 2390 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _319($yyTop)  					// line 2394 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _321($yyTop)  					// line 2402 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _322($yyTop)  					// line 2406 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _323($yyTop)  					// line 2413 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _324($yyTop)  					// line 2417 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _325($yyTop)  					// line 2424 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _328($yyTop)  					// line 2434 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _329($yyTop)  					// line 2438 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _330($yyTop)  					// line 2446 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _331($yyTop)  					// line 2450 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _332($yyTop)  					// line 2457 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . $this->yW[$yyTop - 3] . $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _333($yyTop)  					// line 2461 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _334($yyTop)  					// line 2465 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _335($yyTop)  					// line 2469 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _336($yyTop)  					// line 2473 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-5+$yyTop] . $this->yW[$yyTop - 4] . $this->yyVals[-3+$yyTop] 
        . $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _337($yyTop)  					// line 2478 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _338($yyTop)  					// line 2482 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _339($yyTop)  					// line 2486 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _340($yyTop)  					// line 2493 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _341($yyTop)  					// line 2497 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _342($yyTop)  					// line 2501 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _343($yyTop)  					// line 2505 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _344($yyTop)  					// line 2509 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _345($yyTop)  					// line 2513 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _346($yyTop)  					// line 2517 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _347($yyTop)  					// line 2521 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _348($yyTop)  					// line 2525 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _349($yyTop)  					// line 2529 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _350($yyTop)  					// line 2533 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _351($yyTop)  					// line 2537 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _352($yyTop)  					// line 2546 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _353($yyTop)  					// line 2550 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _354($yyTop)  					// line 2554 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yW[$yyTop - 1] . $this->yW[$yyTop];
    }

    function _355($yyTop)  					// line 2558 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _356($yyTop)  					// line 2562 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 5] . $this->yW[$yyTop - 4] . $this->yW[$yyTop - 3] .
             $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yW[$yyTop];
    }

    function _357($yyTop)  					// line 2567 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _358($yyTop)  					// line 2575 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _359($yyTop)  					// line 2579 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _360($yyTop)  					// line 2583 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop];
    }

    function _361($yyTop)  					// line 2591 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _362($yyTop)  					// line 2595 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _363($yyTop)  					// line 2599 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _364($yyTop)  					// line 2604 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile(trim($this->yyVals[0+$yyTop]));
            $include->setType('include');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => trim($this->yyVals[0+$yyTop]),
                             'type' => 'include',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _365($yyTop)  					// line 2641 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _366($yyTop)  					// line 2646 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile(trim($this->yyVals[0+$yyTop]));
            $include->setType('include_once');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => trim($this->yyVals[0+$yyTop]),
                             'type' => 'include_once',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _367($yyTop)  					// line 2683 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yW[$yyTop - 3] . $this->yW[$yyTop - 2] . $this->yyVals[-1+$yyTop] . $this->yW[$yyTop];
    }

    function _368($yyTop)  					// line 2687 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _369($yyTop)  					// line 2692 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile(trim($this->yyVals[0+$yyTop]));
            $include->setType('require');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => trim($this->yyVals[0+$yyTop]),
                             'type' => 'require',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _370($yyTop)  					// line 2729 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _371($yyTop)  					// line 2734 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile(trim($this->yyVals[0+$yyTop]));
            $include->setType('require_once');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => trim($this->yyVals[0+$yyTop]),
                             'type' => 'require_once',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
        $this->yyVal = $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _373($yyTop)  					// line 2775 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yyVals[0+$yyTop];
    }

    function _374($yyTop)  					// line 2782 "C:/devel/PHP_Parser/Parser/Core5.jay"
    {
            $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yW[$yyTop - 1] . $this->yW[$yyTop];
            $this->_lastConst = $this->yyVals[0+$yyTop];
            $this->_lastClassname = trim($this->yyVals[-2+$yyTop]);
        }
					// line 2703 "-"

					// line 2789 "C:/devel/PHP_Parser/Parser/Core5.jay"

}
					// line 2708 "-"

  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyLhs']  = array(              -1,
    0,    0,    1,    1,    1,    5,    5,    6,    6,    6,
    2,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,   32,    7,   24,
   24,   31,   31,   33,   33,   23,   23,   34,   22,   22,
    3,    4,   37,   37,   38,   35,   41,   44,   36,   47,
   49,   36,   40,   40,   40,   42,   42,   46,   48,   48,
   43,   43,   50,   50,   25,   25,   15,   15,   26,   26,
   29,   29,   28,   28,   16,   16,   16,   16,   52,   52,
   52,   53,   53,   13,   13,    9,    9,   11,   11,   10,
   10,   12,   12,   39,   39,   54,   54,   54,   54,   54,
   54,   54,   54,   55,   55,   56,   56,   57,   57,   57,
   57,   57,   57,   19,   19,   58,   58,   58,   20,   20,
   20,   20,   45,   45,   63,   60,   60,   66,   67,   60,
   68,   68,   61,   61,   65,   65,   69,   69,   70,   70,
   70,   70,   70,   70,   62,   71,   62,   62,   72,   62,
   73,   64,   74,   64,   21,   21,   14,   14,   75,   75,
   17,   77,   17,   78,   17,   80,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   89,
   88,   88,   92,   88,   88,   30,   79,   79,   94,   94,
   97,   97,   98,   84,   84,   84,   81,   81,   99,   99,
   99,   99,   99,   99,   99,   99,   51,   51,   51,   51,
   51,   51,  101,   85,   85,   85,   85,   85,   85,   85,
  100,  100,  103,  103,  102,  102,  102,  102,    8,    8,
   59,   27,   82,   18,   18,  106,  106,  107,  105,  105,
   93,   93,   91,  104,  104,   95,   95,   95,  108,  108,
  108,  111,  111,  110,  110,   96,   96,  112,  112,  112,
  113,  113,  109,  109,   76,   76,  114,  114,  114,   86,
   86,  115,  115,  115,  115,  115,  115,  115,  115,   87,
   87,   87,   87,   87,   87,   87,   87,   87,   87,   87,
   87,  116,  116,  116,  116,  116,  116,  117,  117,  117,
   83,   83,  119,   83,  120,   83,   83,  121,   83,  122,
   83,  118,  118,   90,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyLen'] = array(           2,
    2,    0,    1,    1,    1,    2,    0,    1,    1,    1,
    1,    3,    7,   10,    5,    7,    9,    5,    2,    3,
    2,    3,    2,    3,    3,    3,    3,    3,    1,    2,
    3,    5,    8,    8,    5,    1,   13,    0,    4,    1,
    2,    1,    0,    9,    8,    1,    3,    1,    1,    3,
    1,    1,    0,    1,    0,   10,    0,    0,    9,    0,
    0,    8,    1,    2,    2,    0,    2,    1,    0,    2,
    0,    2,    1,    3,    0,    2,    1,    4,    1,    4,
    1,    4,    3,    5,    3,    4,    4,    5,    0,    5,
    4,    1,    1,    1,    4,    0,    6,    0,    7,    0,
    2,    0,    3,    1,    0,    2,    3,    5,    4,    4,
    5,    7,    6,    0,    1,    1,    0,    1,    1,    2,
    3,    3,    4,    3,    1,    1,    2,    4,    3,    5,
    1,    3,    2,    0,    0,    4,    2,    0,    0,   10,
    1,    3,    1,    1,    0,    1,    1,    2,    1,    1,
    1,    1,    1,    1,    3,    0,    6,    1,    0,    4,
    0,    6,    0,    5,    3,    1,    0,    1,    3,    1,
    6,    0,    4,    0,    5,    0,    7,    3,    2,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    2,    2,    2,    2,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    2,    2,    2,    2,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    5,    1,    2,    2,    2,    2,
    2,    2,    2,    2,    2,    1,    4,    3,    2,    0,
    5,    4,    0,    5,    4,    1,    1,    1,    4,    1,
    2,    0,    2,    0,    2,    3,    0,    3,    1,    1,
    1,    1,    1,    1,    1,    1,    1,    1,    2,    2,
    4,    1,    3,    1,    1,    1,    1,    3,    3,    3,
    0,    2,    0,    1,    5,    3,    3,    1,    1,    1,
    1,    1,    1,    5,    1,    2,    0,    3,    3,    0,
    1,    2,    3,    1,    1,    1,    2,    1,    4,    4,
    1,    1,    4,    0,    1,    1,    1,    4,    4,    1,
    1,    3,    1,    2,    3,    1,    1,    4,    0,    0,
    2,    5,    3,    3,    1,    6,    4,    4,    2,    2,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    0,    1,    4,    3,    3,    6,    3,    1,    1,    1,
    4,    4,    0,    3,    0,    3,    4,    0,    3,    0,
    3,    1,    3,    3,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyDefRed'] = array(            2,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  259,  260,    0,  275,  312,
   29,  261,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   38,    0,    0,    0,    0,    0,
    0,    0,    0,   63,   68,    0,    0,  264,  266,  265,
  262,  263,  351,    0,    0,    0,    0,    0,    0,    7,
    0,   36,    0,  351,  351,  351,    1,    3,    4,    5,
   11,    0,  290,    0,    0,   51,   52,   57,   60,  289,
    0,  226,  236,  305,    0,    0,    0,  304,  277,    0,
    0,    0,  311,    0,    0,    0,    0,    0,    0,    0,
  293,  192,    0,  194,  227,  228,  229,  230,  231,  232,
  233,    0,    0,    0,  308,  248,    0,    0,    0,    0,
  234,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   19,    0,   21,    0,   54,    0,   23,    0,    0,
    0,    7,    0,   49,    0,    0,  126,    0,    0,  125,
    0,    0,   64,   65,    0,    0,    0,    0,    0,    0,
  179,    0,    0,    0,  214,  235,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   30,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  191,  193,    0,  243,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  178,    0,    0,  255,    0,    0,    0,    0,   28,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   20,   22,   55,   24,   25,    0,    0,    0,   31,    0,
  291,  127,    0,   26,    0,    0,   27,   48,    0,   46,
  372,    0,    0,    0,  327,    0,  326,    0,    0,    0,
    0,  341,    0,  342,  344,  345,  343,  350,  280,    0,
    0,  346,  348,  349,  347,  340,   12,    8,    9,   10,
    6,  224,    0,  238,  278,  279,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  223,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  374,  303,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  321,    0,
  317,    0,    0,  320,    0,    0,    0,    0,    0,    0,
    0,  367,    0,  252,  256,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   39,   50,    0,  124,    0,    0,    0,    0,  132,  267,
  272,    0,    0,    0,    0,  361,  362,    0,    0,    0,
  292,  339,    0,  237,    0,  331,    0,    0,    0,    0,
    0,  313,    0,  176,    0,    0,    0,    0,   58,    0,
   61,  120,  242,    0,    0,  245,    0,    0,  297,    0,
    0,  309,  310,  258,    0,    7,   96,  241,    0,    7,
   94,   15,    0,    0,    0,    0,    0,   40,   83,    0,
    7,   81,   35,    0,    0,   18,    0,    0,  128,    0,
    0,  269,  270,    0,   47,   32,  373,    0,  325,    0,
    0,    0,    0,    0,  354,  358,  360,  359,    0,    0,
  355,  357,    0,    0,  175,  246,   67,    0,   73,    0,
    0,    0,    0,    0,  244,  322,    0,    0,    0,    0,
    0,  251,    0,    0,    0,    0,    0,    0,    0,   41,
    0,    0,    0,   89,    0,   89,    0,  115,    0,    0,
    0,    0,  273,    0,    0,    0,  130,  328,    0,  338,
  337,    0,  353,    0,    0,    0,    0,    0,  134,  123,
  299,    0,  296,  318,  319,  253,    0,    0,    0,   13,
   16,    0,    0,   76,    0,    0,   84,    0,    0,    0,
    0,    0,    0,   85,    0,    0,    0,    0,    0,    0,
  271,    0,  282,    0,    0,    0,  177,    0,  134,   74,
    0,    0,    0,    0,    0,    0,  101,   95,    0,    7,
   79,   34,   33,   82,    0,   87,    0,   92,   93,    7,
   86,    7,    0,    0,    0,    0,  287,    0,  336,  356,
    0,  152,  153,  154,  151,  150,  149,  144,   62,  133,
    0,    0,    0,    0,  147,    0,  298,    0,    7,    0,
    0,    7,   77,   17,    0,   88,    7,    0,    0,    0,
    0,  109,    0,    0,    0,   59,    0,    0,    0,  137,
  138,  148,    0,    0,    0,   14,    0,    0,    0,    0,
   56,    0,    0,  108,    7,  285,    0,    0,    0,  161,
    0,    0,    0,   97,    0,   80,  113,    0,    0,    0,
    0,  136,    0,    0,    0,    7,   78,  112,    0,  160,
    0,    0,  139,  164,    0,    0,   37,    0,    0,  162,
    0,    0,    0,  157,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    7,  141,  140,    7,    0,    0,    0,
    7,  142,   45,    0,   44,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyDgoto']  = array(             1,
   67,  298,  299,  300,  167,  301,   71,   72,  514,  560,
  557,  595,  452,  244,  644,  466,   73,   74,  149,  152,
  125,  146,  269,  457,  519,  602,  412,  249,  463,   75,
  707,  143,  708,  270,   76,   77,  137,  389,  529,   78,
  213,  429,  547,  498,  591,   79,  214,  431,  501,  500,
  399,  525,  610,  530,  531,  355,  356,  150,   80,  630,
  631,  658,  679,  632,  633,  681,  711,  726,  634,  635,
  701,  677,  693,  636,  245,  276,  345,  425,  114,  494,
  232,   81,   82,  121,   83,  280,  160,   84,  123,   85,
   86,  357,   87,  116,   88,  362,  445,  512,   89,  535,
  401,  536,  416,   90,  439,  508,  553,   91,   92,  366,
   93,  363,  364,  277,  281,  296,  489,  272,   94,   95,
   96,   97,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yySindex'] = array(            0,
 3678,    2, 6356,   -5,   -5, 6356, 6356, 6356, 6356, 6356,
 6356, 6356,   36,   30,   53,    0,    0,    0,    0,    0,
    0,    0, 6356, 4983,   87,   95,   99,  109,  126, 5198,
 5326,   38, 5436,  -55,    0,  -12,  -20, -223, -212,  -97,
  208,  224,  229,    0,    0,  238,  259,    0,    0,    0,
    0,    0,    0, 6356, 6356, 6356, 6356, 6356, 6356,    0,
 6356,    0,   47,    0,    0,    0,    0,    0,    0,    0,
    0, 9662,    0,  989,  -64,    0,    0,    0,    0,    0,
 -184,    0,    0,    0,  270,  293,  302,    0,    0,   34,
   -8,   -9,    0,  108,   91,  123,  128, 6356, 4755,    0,
    0,    0,  270,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   22,  364,    0,    0,   58,   -8,   -9, 5541,
    0, 6356,  373,10951,   46,  111, 6356, 6356, 6356,  147,
 6356,    0, 9704,    0, 9840,    0,  198,    0,10951,  372,
 1317,    0, 6356,    0,  120,  391,    0,  -17,   94,    0,
  379,  104,    0,    0,   -5,   -5,   -5,  -33, 5672, 1188,
    0,   32,   32,  171,    0,    0, 1172, 9867, 6356, 1357,
  -26,   27, 6356, 6356, 6356, 6356, 6356, 6356, 6356, 6356,
 6356, 6356, 6356, 6356, 6356,   36, 6356, 6356, 6356, 6356,
 6356, 6356, 6356, 6356, 6356, 6356, 6356, 6356,    0, 6356,
 6356, 6356, 6356, 6356, 6356, 6356, 6356, 6356, 6356, 6356,
  467,   45,  204,  206,    0,    0, 5777,    0, 5777,   18,
 6356, 6356,   47,   -8, 6356, 6356, 6356, 6356, 9932,   -4,
 5777,    0,   18,   -8,    0, 9961, 9990, 5777, 6356,    0,
  488,10033,10951,  464,  486,  213,  905,  482,  103,10125,
    0,    0,    0,    0,    0, 1503,10096,  506,    0, 6356,
    0,    0,  -20,    0,   97,  242,    0,    0,  202,    0,
    0,  287,  511,  518,    0,  320,    0,   -5, 5598,  536,
  534,    0,  -46,    0,    0,    0,    0,    0,    0, 6461,
   -5,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,10243,    0,    0,    0, 5718, 6157, 4755, 6932,
 7199, 1571, 1571, 1571, 1571,  122,  122,   49,   49,    0,
10289, 3449, 3882, 4317,  122,  122,   32,   32,   32,  171,
  171,  171, 4755, 4755, 4755, 4755, 4755, 4755, 4755, 4755,
 4755, 4755, 4755,  266, 6356,    0,    0,   -8,   -9,  231,
  233,   -5,    0,  989,  539,  541, 5777,  551,    0, 6356,
    0,  553,   -2,    0,10951,  508,10354,10951,10951,10951,
10951,    0,  561,    0,    0, 3782,  568,10951, 6356, 4113,
 6356, 6356,   -5,   11,   97,  306, 4217,   -6,  573,  280,
    0,    0,10390,    0,  245,  578,   97,   97,    0,    0,
    0,  562,   -5,  563,   -5,    0,    0,  -33,  -33,  564,
    0,    0, 5884,    0, 6013,    0,  321,   98,  544,10456,
  513,    0, 6356,    0,   -5, 4755,   -8,  342,    0,  342,
    0,    0,    0, 6120,  612,    0,10496, 5777,    0, 6356,
 6356,    0,    0,    0,  303,    0,    0,    0,10562,    0,
    0,    0,  600,10951,  308,   -5,  308,    0,    0,  602,
    0,    0,    0,  614,  618,    0,  374,  638,    0,  377,
   97,    0,    0,   97,    0,    0,    0,  331,    0, 6356,
   -5,10951,   -5, 8842,    0,    0,    0,    0,  593, 6356,
    0,    0, 6057,   36,    0,    0,    0,  337,    0,  643,
  574,   -5,    0,  989,    0,    0,  650,  343,  605,10661,
   18,    0, 3678, -143,  641, 1607, 6356,   -5,  664,    0,
  665,   97, 1938,    0,  158,    0, -101,    0,  668,  666,
   -1,  342,    0,  362,  677,  675,    0,    0, 4755,    0,
    0, 6225,    0,10757,  364,  342,  597,  342,    0,    0,
    0,   18,    0,    0,    0,    0,  145,  681, 4983,    0,
    0,  669,  682,    0, 4548, 4548,    0,  671,  243,  673,
 6356,  403,  -74,    0,  601,  374,  676,  418,  420,   97,
    0,   97,    0,   -5,10951,  609,    0,  643,    0,    0,
  289,  553,  696,  683,  437, 6356,    0,    0, 4652,    0,
    0,    0,    0,    0,  689,    0, 5134,    0,    0,    0,
    0,    0,   40,   97,  688,  716,    0,  404,    0,    0,
  411,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  456,  130,  433,  459,    0,  436,    0, 6356,    0,  711,
10824,    0,    0,    0, 2042,    0,    0, 3678, 2373,  715,
  470,    0,   97,  656,   97,    0,    0,  739,  479,    0,
    0,    0,  481,10866, 3678,    0, 4983, 2477,  728, 3678,
    0,   97,  727,    0,    0,    0,  730,  487,  737,    0,
   38,  744,  731,    0,  753,    0,    0,   97, 2808,   97,
    0,    0,  756,  509,   97,    0,    0,    0,  484,    0,
  759,   97,    0,    0, 3678,  781,    0,  489,   97,    0,
  783,  342,  786,    0,  374,  522,  342,  793,  794,  529,
  -15,  717,  797,    0,    0,    0,    0,  719, 2912, 3243,
    0,    0,    0, 3347,    0,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyRindex'] = array(            0,
  135,    0,  135,    0,    0,  135,  135,  135,  135,  135,
  135,  135,    0, 8336,    0,    0,    0, 6507,    0,    0,
    0,    0,  135,  135,    0,    0,    0,    0,    0,  135,
  135,  540,  135,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  135,  135,  135,  135,  135,  135,    0,
  135,    0,   10,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, 7827,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 8394, 7368,    0,    0,    0, 7564,
 6804,    0,    0,    0,    0,    0,    0,  135,  774,  -36,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 6637,    0, 8431,    0,    0, 8127, 7864,    0,  135,
    0,  135,    0,  173,    0,    0,  135,  -21,  135,    0,
  135,    0,    0,    0,    0,    0,    0,    0,    0,11018,
 9533,    0,  135,    0,    0,    0,    0,    0,    0,    0,
  201,    0,    0,    0,    0,    0,    0,  335,  113,    0,
    0, 8868, 8978, 8544,    0,    0,  135,    0,  135,    0,
    0,    0,  135,  135,  135,  135,  135,  135,  135,  135,
  135,  135,  135,  135,  135,    0,  135,  135,  135,  135,
  135,  135,  135,  135,  135,  135,  135,  135,    0,  135,
  135,  135,  135,  135,  135,  135,  135,  135,  135,  135,
 5088,    0,    0,    0,    0,    0,  178,    0,  178,    0,
  163,  135,   19, 6904,  135,  135,  135,  135,    0,    0,
  178,    0,    0, 7993,    0,    0,    0,  178,  135,    0,
    0,    0,   12,    0,   57,11018, 9533,    0,    0,    0,
    0,    0,    0,    0,    0,  135,    0,    0,    0,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  368,    0,
  798,    0,  -16,    0,    0,    0,    0,    0,    0,  135,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  483, 1193, 2090,  407,
 2050,  734, 1076, 1180, 1511, 6533, 8005, 9234, 9245,    0,
    0, 1826, 1946, 1615, 8138, 9408, 9119, 9145, 9156, 8694,
 8721, 8814, 2123, 2381, 2394, 2498, 2525, 2816, 2829, 2933,
 2960, 3251, 3264,   51,  135,    0,    0, 7000,    0, -102,
  721,    0, 9560, 7296,    0,  805,  178,    0,    0,  135,
    0, 7463, 7101,    0,  754,    0,    0,  419,  649,  772,
 1097,    0,    0,    0,    0,  135,    0,  207,  135,  135,
  -21,  135,    0,    0,    0,    0,  135,    0,    0,    0,
    0,    0,    0,    0,  -24,    0,    0,    0,    0,    0,
    0,  218,    0,    0,    0,    0,    0,  335,  335,    0,
    0,    0,  135,    0,  230,    0,    0,    0,10924,    0,
    0,    0,  135,    0,    0, 3368, 7267,    0,    0,    0,
    0,    0,    0,  135,    0,    0,    0,  178,    0,  163,
  135,    0,    0,    0, 8251,    0,    0,    0,    0,    0,
    0,    0,    0,   92,  809,    0,  809,    0,    0,    0,
    0,    0,    0,  316,  -52,    0,   44,    0,    0,    0,
  812,    0,    0,    0,    0,    0,    0,    0,    0,  135,
    0,  381,    0,  388,    0,    0,    0,    0,    0,  135,
    0,    0,  547,    0,    0,    0,    0,  733,    0,  743,
    0,    0, 9587, 9497,    0,    0,    0, 7730,    0,    0,
    0,    0,  296, 1068,    0,  135,  256,    0,    0,    0,
    0,    0,  135,    0,    0,    0,    0,    0,    0,  813,
    0,    0,    0,  431,    0,  798,    0,    0, 3395,    0,
    0,  135,    0,    0, 8431,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  555,    0,  135,    0,
    0,    0,    0,    0,  135,  135,    0,    0,    0,    0,
  135,    0,    0,    0,    0,   50,  438,    0,    0,    0,
    0,  827,    0,    0,  451,    0,    0,  746,    0,    0,
  142, 7463,    0,    0,    0,  135,    0,    0,  135,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  453,    0,    0,  455,    0,    0,
  142,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0, -205,    0,    0,    0,  135,    0,    0,
    0,    0,    0,    0,  135,    0,    0,  454,  135,  463,
    0,    0,    0,    0,    0,    0,   84,  811,    0,    0,
    0,    0,    0,    0, -147,    0,  135,  135,    0, 1084,
    0,    0,  477,    0,    0,    0,    0,    0,    0,    0,
  540,    0,    0,    0,    0,    0,    0,    0,  135,    0,
  174,    0,    0,    0,    0,    0,    0,    0,  621,    0,
    0,    0,    0,    0,  603,    0,    0,  726,    0,    0,
    0,    0,    0,    0,   44,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  135,  135,
    0,    0,    0,  135,    0,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyGindex'] = array(            0,
    0,    1,  871,  872, -141,    0,    0,    3,    0,    0,
    0,    0,    0, -342,    0,    0,   42,  211,    0,    0,
    0,    0,    0,    0,  417,  309,  220,    0,    0,  -13,
    0,    0,    0,  473,    0,    0,  196,    0,  168,    0,
    0,    0,    0,    0,  295,    0,    0,    0,    0,  339,
  153, -402,  281,    0,  311, -119,    0,  626,  742,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  257,
    0,    0,    0,    0,    0,  485,    0,    0, -179,    0,
  347,  521,    0,    0,    0,    0,  586,    0,    0,  156,
   16,    0, -190,    0,   28, -228,    0,    0,   -7,    0,
    0,    0,  358,    0,  304,    0,    0,   37,   35,  458,
    0,    0,    0,  491,    0,    0,    0,    0,    0,    0,
    0,    0,
  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyTable'] = array(           113,
  256,   68,   63,  240,  374,   99,  320,  305,  105,  106,
  107,  108,  109,  110,  111,  148,  268,  352,   63,  268,
   66,  347,  352,  574,  126,  124,  223,  145,  115,  361,
   63,   63,  133,  135,  268,  139,  578,  167,  453,  347,
  117,   98,  361,  725,  418,  323,   63,  119,  456,  118,
  611,  464,  170,   63,  324,  170,  161,  162,  163,  164,
  165,  166,  527,  168,  292,  306,  295,  142,  198,  120,
  170,   63,   89,  196,  140,  136,  352,  651,  197,  352,
   63,  114,  221,  151,  105,  198,  174,  114,  440,  239,
  196,  193,  122,  194,  195,  197,  293,  168,  294,  358,
  229,  143,  215,  216,  240,  260,  352,  724,  352,  363,
  365,  373,  368,  370,  222,  168,  465,  292,  377,  295,
  441,  569,  236,  573,  237,  146,  127,  158,  224,  242,
  243,  139,  169,  250,  128,  169,  153,  263,  129,  397,
  360,  398,  158,  387,  159,  257,  386,  266,  130,  293,
  169,  294,  264,  330,  103,  234,  558,  559,  198,  103,
  103,  279,  267,  196,  193,  131,  194,  195,  197,  169,
  246,  303,  113,  659,  563,  307,  308,  309,  310,  311,
  312,  313,  314,  315,  316,  317,  318,  319,  660,  321,
  322,  323,  324,  325,  326,  327,  328,  329,  330,  331,
  332,  115,  333,  334,  335,  336,  337,  338,  339,  340,
  341,  342,  343,  117,  101,  101,  166,  155,  117,  139,
  119,  139,  118,  365,  367,  571,  572,  368,  369,  370,
  371,  166,  155,  139,  156,  363,  365,  435,  368,  370,
  139,  378,  404,  141,  131,  403,  349,  155,  348,   66,
  165,  154,  571,  572,  349,  314,  348,  400,  353,  131,
  353,  129,  393,  156,  349,  165,  348,  349,  157,  348,
  284,  100,  353,   20,   89,   89,  129,  158,  282,  353,
  283,  284,  556,  285,  286,  287,  147,  100,  352,   20,
  352,  352,  420,  352,  352,  352,  167,   20,  159,  100,
  144,   20,   20,  103,  513,  577,  417,  212,  516,  217,
  103,  103,  103,  103,  545,  100,  323,   20,  507,  523,
  361,  274,  359,  592,   20,  324,  288,  406,  186,  268,
  405,  282,  218,  283,  284,  246,  285,  286,  287,  247,
  112,  219,   20,  290,  291,  186,  650,  426,  226,  346,
  114,   20,  352,  352,  352,  174,  114,  174,  261,  139,
  410,  361,  437,  409,  225,  268,  271,  273,  275,  363,
  365,  538,  368,  370,  409,  329,  447,  400,  329,  288,
  451,  449,  227,  243,  454,  427,  220,  462,  228,  400,
  400,  363,  365,  230,  368,  370,  290,  291,  353,   16,
   17,  395,  486,  231,  487,  488,  184,  185,  335,   22,
  233,  335,  238,  629,  497,  482,  499,  484,  186,  363,
  365,  334,  368,  370,  334,  493,  241,  354,  333,  354,
  254,  333,  258,  103,  363,  365,  139,  368,  370,  265,
  139,  354,  365,  510,  593,  594,  103,  195,  354,  259,
  195,  248,  396,   48,   49,   50,   51,   52,  645,  364,
  608,  609,  364,  400,  195,  195,  400,  186,  648,  195,
  649,  288,  145,  163,  288,  503,  364,  364,  106,  353,
  113,  106,  539,  570,  571,  572,  363,  365,  411,  368,
  370,  332,  544,  107,  332,  286,  107,  665,  286,  195,
  668,  421,  253,  110,  344,  670,  110,  103,  350,  115,
  351,  364,  363,  365,  400,  368,  370,  111,  579,  243,
  111,  117,  381,  197,  102,  104,  197,  379,  119,  382,
  118,  195,  499,  689,  590,  656,  383,  459,  103,  103,
  197,  197,  385,  364,  585,  349,  392,  348,  402,  472,
  473,  407,  363,  365,  705,  368,  370,  408,  103,  597,
  103,  424,  411,  103,  103,  601,  601,  354,  605,  571,
  572,  432,  400,  607,  400,  197,  414,  415,   91,  433,
  103,  428,  729,  430,  434,  730,  349,  225,  348,  734,
  225,  436,  438,  411,  411,   98,   98,   98,  641,  643,
  442,  444,  455,  458,  225,  225,  400,  197,  448,  225,
  460,  103,  467,  268,  468,  477,  470,  471,  275,  275,
   43,  476,  474,  534,  480,  485,  537,  622,  623,  624,
  625,  626,  627,  628,  490,  495,  103,  492,  103,  225,
  664,   89,   89,   89,  504,  400,  496,  400,  354,  170,
  171,  172,  505,   43,   43,  511,   43,  103,  517,   43,
   43,  518,  522,   43,  400,   43,  411,  684,  195,  195,
  195,  225,  524,  103,  567,  520,  526,  532,  528,   43,
  400,  533,  400,  195,   43,  543,  548,  400,  546,  366,
  551,  411,  366,  411,  400,  552,  549,  554,  716,  561,
  540,  400,  541,  720,  565,  566,  366,  366,  575,  576,
  363,  365,  411,  368,  370,  580,   43,  581,  582,  589,
  596,  550,  599,  612,  615,   42,  616,  598,  411,  604,
  195,  606,  617,  620,  618,  638,  614,  564,  640,  103,
  639,  366,  364,   43,  197,   43,   43,  646,  653,  622,
  623,  624,  625,  626,  627,  628,  654,  655,   42,   42,
  195,   42,  657,  661,   42,   42,  652,  663,   42,  666,
   42,  217,  364,  366,  217,  672,  673,  217,  675,   91,
   91,   91,  678,  680,   42,  682,  686,  688,  696,   42,
  690,  217,  217,  691,  411,  692,  217,  622,  623,  624,
  625,  626,  627,  619,  695,  674,  197,  676,  225,  225,
  225,  697,  369,  703,  239,  369,  702,  239,  706,  709,
  712,   42,  715,  713,  687,  717,  217,  217,  719,  369,
  369,  239,  239,  721,  722,  723,  197,  728,  283,  727,
  698,  731,  700,   69,   53,  116,  315,  704,   42,   75,
   42,   42,  281,  104,  710,   71,  102,  217,  217,  363,
  365,  714,  368,  370,  369,   70,  239,  284,   72,  135,
  225,   69,   70,  521,  603,  475,  694,   43,   43,   43,
   43,   43,  718,  621,  588,   43,  613,  647,  394,  262,
  662,  587,  478,  583,    0,  637,  369,  509,  239,  479,
  225,    0,   99,   99,   99,    0,    0,   43,   43,   43,
   43,   43,   43,   43,   43,   43,   43,    0,   43,   43,
   43,   43,   43,   43,   43,   43,   43,   43,    0,   43,
    0,    0,    0,   43,   43,   43,   43,   43,   43,   43,
   43,   43,   43,   43,    0,   43,   43,   43,   43,   43,
   43,   43,    0,   43,   43,    0,   43,   43,   43,   43,
   43,   43,    0,    0,    0,  211,   43,   43,   43,   43,
   43,    0,  366,    0,    0,   43,   43,   43,   43,   43,
   43,   43,   42,   42,   42,   42,   42,    0,   43,    0,
   42,    0,    0,   43,    0,  217,  217,  217,    0,    0,
    0,    0,  366,    0,    0,    0,    0,    0,    0,    0,
  217,  217,   42,   42,   42,   42,   42,   42,   42,   42,
   42,   42,    0,   42,   42,   42,   42,   42,   42,   42,
   42,   42,   42,    0,   42,  239,  239,  239,   42,   42,
   42,   42,   42,   42,   42,   42,   42,   42,   42,  211,
   42,   42,   42,   42,   42,   42,   42,  217,   42,   42,
    0,   42,   42,   42,   42,   42,   42,  100,    0,    0,
    0,   42,   42,   42,   42,   42,    0,    0,    0,    0,
   42,   42,   42,   42,   42,   42,   42,  217,    0,    0,
    0,    0,    0,   42,    0,  369,    0,  239,   42,    0,
  100,  100,    0,  100,    0,    0,  100,  100,    0,    0,
  100,    0,  100,  218,    0,    0,  218,    0,    0,  218,
    0,    0,    0,    0,    0,  369,  100,  239,    0,    0,
    0,  100,    0,  218,  218,    0,    0,  371,  218,    0,
  371,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  371,  371,    0,    0,    0,    0,
    0,    0,    0,  100,    0,    0,    0,    0,  218,  218,
  200,  201,  202,  203,  204,  205,  206,  207,  208,  209,
  210,    0,    0,    0,    0,    0,    0,    0,    0,  371,
  100,    0,  100,  100,    0,    0,    0,    0,    0,  218,
  218,    0,    0,    0,   57,   65,    0,   63,   90,    0,
   66,   61,    0,    0,   55,    0,   56,  215,    0,    0,
  215,  371,    0,  215,    0,    0,    0,    0,  384,    0,
   62,    0,    0,  199,    0,   59,  199,  215,  215,    0,
    0,    0,  215,    0,    0,    0,    0,    0,    0,    0,
  199,  199,    0,    0,  200,  201,  202,  203,  204,  205,
  206,  207,  208,  209,  210,    0,    0,   64,    0,    0,
    0,    0,  215,  215,    0,    0,    0,    0,  292,    0,
  295,    0,    0,    0,    0,  199,    0,    0,    0,    0,
    0,    0,    0,    0,   60,    0,  297,   58,    0,    0,
    0,    0,    0,  215,  215,    0,    0,    0,    0,    0,
  293,    0,  294,    0,    0,    0,    0,  199,    0,    0,
    0,    0,    0,    0,  100,  100,  100,  100,  100,    0,
    0,    0,  100,    0,    0,    0,    0,  218,  218,  218,
  363,  365,    0,  368,  370,    0,    0,    0,    0,    0,
    0,    0,  218,  218,  100,  100,  100,  100,  100,  100,
  100,  100,  100,  100,    0,  100,  100,    0,    0,  100,
  100,  100,  100,  100,  100,  255,  100,  211,    0,    0,
  100,  100,  100,  100,  100,  100,  100,  100,  100,  100,
  100,    0,  100,  100,  100,  100,  100,  100,  100,  218,
  100,  100,    0,  100,  100,  100,  100,  100,  100,   90,
   90,   90,    0,  100,  100,  100,  100,  100,    0,    0,
  371,    0,  100,  100,  100,  100,  100,  100,  100,  218,
    2,    0,    0,    0,    0,  100,    3,    0,    0,    0,
  100,  215,  215,  215,    0,    0,    0,  292,    0,  295,
  371,    0,  304,    0,  199,  199,  215,  215,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,  293,
   21,  294,    0,    0,   22,   23,   24,   25,    0,   26,
    0,   27,  282,   28,  283,  284,   29,  285,  286,  287,
   30,   31,   32,  215,   33,   34,    0,   35,   36,   37,
   38,   39,   40,    0,    0,    0,  199,   41,   42,   43,
   44,   45,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,  215,    0,   57,   65,    0,   63,   53,
  288,   66,   61,    0,   54,   55,  199,   56,  216,    0,
    0,  216,    0,    0,  216,    0,  289,  290,  291,    0,
    0,   62,    0,    0,    0,    0,   59,    0,  216,  216,
    0,    0,    0,  216,    0,    0,    0,    0,    0,    0,
    0,    0,  200,  201,  202,  203,  204,  205,  206,  207,
  208,  209,  210,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,  216,  216,    0,    0,  198,    0,    0,
    0,    0,  196,  193,    0,  194,  195,  197,    0,    0,
    0,    0,    0,    0,    0,   60,    0,  390,   58,    0,
  191,    0,  192,    0,  216,  216,    0,    0,    0,   57,
   65,    0,   63,    0,    0,   66,   61,    0,    0,   55,
    0,   56,  201,    0,    0,  201,    0,    0,  201,    0,
    0,  282,    0,  283,  284,   62,  285,  286,  287,    0,
   59,    0,  201,  201,    0,    0,    0,  201,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   64,    0,    0,    0,    0,  201,  201,  288,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  290,  291,    0,   60,
    0,    0,   58,    0,    0,    0,    0,    0,  201,  201,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    2,    0,    0,    0,    0,    0,    3,    0,    0,
    0,    0,  216,  216,  216,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  216,  216,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,   32,  216,   33,   34,    0,   35,   36,
   37,   38,   39,   40,    0,    0,    0,    0,   41,   42,
   43,   44,   45,  182,  183,  184,  185,   46,   47,   48,
   49,   50,   51,   52,  216,    2,  200,  186,    0,  200,
   53,    3,    0,    0,    0,   54,  201,  201,  201,    0,
    0,    0,    0,  200,  200,    0,    0,    0,  200,    0,
    0,  201,  201,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,    0,    0,  200,   22,
   23,   24,   25,  562,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,   32,  201,   33,
   34,    0,   35,   36,   37,   38,   39,   40,    0,  200,
  200,    0,   41,   42,   43,   44,   45,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,   52,  201,    0,
   57,   65,    0,   63,   53,    0,   66,   61,    0,   54,
   55,    0,   56,    0,    0,    0,  202,    0,    0,  202,
    0,    0,    0,    0,    0,    0,   62,    0,    0,    0,
    0,   59,    0,  202,  202,    0,    0,    0,  202,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   64,    0,    0,    0,    0,  202,  202,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   60,    0,    0,   58,    0,    0,    0,    0,    0,  202,
  202,    0,    0,    0,   57,   65,    0,   63,    0,    0,
   66,   61,    0,    0,   55,    0,   56,  200,  200,  200,
  196,    0,    0,  196,    0,    0,    0,    0,    0,    0,
   62,    0,  200,  200,    0,   59,    0,  196,  196,    0,
    0,    0,  196,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  198,    0,    0,  198,    0,    0,    0,   64,    0,    0,
    0,    0,  196,    0,    0,    0,    0,  198,  198,  200,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  180,   60,    0,  180,   58,    0,    0,
    0,    0,    0,    0,  196,    0,    0,    0,    0,  200,
  180,  180,  198,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,
    0,    0,    3,    0,    0,    0,    0,  202,  202,  202,
    0,    0,    0,    0,  198,  180,    0,    0,    0,    0,
    0,    0,  202,  202,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,    0,    0,
   16,   17,   18,   19,   20,    0,   21,  180,    0,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
  568,    0,   29,    0,    0,    0,   30,   31,   32,  202,
   33,   34,    0,   35,   36,   37,   38,   39,   40,    0,
    0,    0,    0,   41,   42,   43,   44,   45,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   52,  202,
    2,    0,    0,    0,    0,   53,    3,    0,    0,    0,
   54,  196,  196,  196,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  196,  196,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,    0,
   21,  198,  198,  198,   22,   23,   24,   25,    0,   26,
    0,   27,  669,   28,    0,    0,   29,    0,    0,    0,
   30,   31,   32,  196,   33,   34,    0,   35,   36,   37,
   38,   39,   40,    0,  180,  180,  180,   41,   42,   43,
   44,   45,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,  196,    0,   57,   65,    0,   63,   53,
    0,   66,   61,  198,   54,   55,    0,   56,    0,    0,
    0,  181,    0,    0,  181,    0,    0,    0,    0,    0,
    0,   62,    0,    0,  182,    0,   59,  182,  181,  181,
    0,    0,    0,  198,    0,    0,  180,    0,    0,    0,
    0,  182,  182,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,  181,    0,    0,  180,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  182,    0,    0,    0,
    0,    0,    0,    0,    0,   60,    0,  671,   58,    0,
    0,    0,    0,    0,    0,  181,    0,    0,    0,   57,
   65,    0,   63,    0,    0,   66,   61,    0,  182,   55,
    0,   56,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   62,    0,    0,  183,    0,
   59,  183,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  183,  183,    0,    0,    0,
    0,    0,    0,    0,    0,  184,    0,    0,  184,    0,
    0,    0,   64,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  184,  184,    0,    0,    0,    0,    0,    0,
  183,    0,    0,    0,    0,    0,    0,    0,    0,   60,
    0,    0,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  184,    0,    0,
    0,    0,  183,    0,    0,    0,    0,    0,    0,    0,
    0,    2,    0,    0,    0,    0,    0,    3,    0,    0,
    0,    0,  181,  181,  181,    0,    0,    0,    0,  184,
    0,    0,    0,    0,    0,  182,  182,  182,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,   32,  181,   33,   34,    0,   35,   36,
   37,   38,   39,   40,    0,    0,    0,  182,   41,   42,
   43,   44,   45,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,   52,  181,    2,    0,    0,    0,    0,
   53,    3,    0,    0,    0,   54,    0,  182,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  183,
  183,  183,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,  184,  184,  184,   22,
   23,   24,   25,    0,   26,  685,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,   32,    0,   33,
   34,    0,   35,   36,   37,   38,   39,   40,    0,    0,
    0,  183,   41,   42,   43,   44,   45,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,   52,    0,    0,
   57,   65,    0,   63,   53,    0,   66,   61,  184,   54,
   55,  183,   56,    0,    0,    0,  185,    0,    0,  185,
    0,    0,    0,    0,    0,    0,   62,    0,    0,  186,
    0,   59,  186,  185,  185,    0,    0,    0,  184,    0,
    0,    0,    0,    0,    0,    0,  186,  186,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   64,    0,    0,    0,    0,  185,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  186,    0,    0,    0,    0,    0,    0,    0,    0,
   60,    0,  699,   58,    0,    0,    0,    0,    0,    0,
  185,    0,    0,    0,   57,   65,    0,   63,    0,    0,
   66,   61,    0,  186,   55,    0,   56,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   62,    0,    0,  187,    0,   59,  187,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  187,  187,    0,    0,    0,    0,    0,    0,    0,    0,
  188,    0,    0,  188,    0,    0,    0,   64,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  188,  188,    0,
    0,    0,    0,    0,    0,  187,    0,    0,    0,    0,
    0,    0,    0,    0,   60,    0,  732,   58,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  188,    0,    0,    0,    0,  187,    0,    0,
    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,
    0,    0,    3,    0,    0,    0,    0,  185,  185,  185,
    0,    0,    0,    0,  188,    0,    0,    0,    0,    0,
  186,  186,  186,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,    0,    0,
   16,   17,   18,   19,   20,    0,   21,    0,    0,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
    0,    0,   29,    0,    0,    0,   30,   31,   32,  185,
   33,   34,    0,   35,   36,   37,   38,   39,   40,    0,
    0,    0,  186,   41,   42,   43,   44,   45,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   52,  185,
    2,    0,    0,    0,    0,   53,    3,    0,    0,    0,
   54,    0,  186,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  187,  187,  187,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,    0,
   21,  188,  188,  188,   22,   23,   24,   25,    0,   26,
    0,   27,    0,   28,    0,    0,   29,    0,    0,    0,
   30,   31,   32,    0,   33,   34,    0,   35,   36,   37,
   38,   39,   40,    0,    0,    0,  187,   41,   42,   43,
   44,   45,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,    0,    0,   57,   65,    0,   63,   53,
    0,   66,   61,  188,   54,   55,  187,   56,    0,    0,
    0,  189,    0,    0,  189,    0,    0,    0,    0,    0,
    0,   62,    0,    0,  190,    0,   59,  190,  189,  189,
    0,    0,    0,  188,    0,    0,    0,    0,    0,    0,
    0,  190,  190,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,  189,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  190,    0,    0,    0,
    0,    0,    0,    0,    0,   60,    0,  733,   58,    0,
    0,    0,    0,    0,    0,  189,    0,    0,    0,   57,
   65,    0,   63,    0,    0,   66,   61,    0,  190,   55,
    0,   56,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   62,    0,    0,  173,    0,
   59,  173,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  173,  173,    0,    0,    0,
    0,    0,    0,    0,    0,  171,    0,    0,  171,    0,
    0,    0,   64,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  171,  171,    0,    0,    0,    0,    0,    0,
  173,    0,    0,    0,    0,    0,    0,    0,    0,   60,
    0,  735,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  198,  190,  171,    0,    0,
  196,  193,  173,  194,  195,  197,    0,    0,    0,    0,
    0,    2,    0,    0,    0,    0,    0,    3,  191,    0,
  192,    0,  189,  189,  189,    0,    0,    0,    0,  171,
    0,    0,    0,    0,    0,  190,  190,  190,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,  189,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,   32,  189,   33,   34,    0,   35,   36,
   37,   38,   39,   40,    0,    0,    0,  190,   41,   42,
   43,   44,   45,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,   52,  189,    2,    0,    0,    0,    0,
   53,    3,    0,    0,    0,   54,    0,  190,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  173,
  173,  173,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,  171,  171,  171,   22,
   23,   24,   25,    0,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,   32,    0,   33,
   34,    0,   35,   36,   37,   38,   39,   40,    0,    0,
    0,  173,   41,   42,   43,   44,   45,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,   52,    0,    0,
   57,   65,    0,   63,   53,    0,   66,   61,  171,   54,
   55,  173,   56,    0,    0,    0,    0,  178,  179,  180,
  181,  182,  183,  184,  185,    0,   62,    0,    0,    0,
    0,   59,    0,    0,    0,  186,    0,    0,  171,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   64,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   60,    0,    0,   58,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   57,   65,    0,   63,    0,    0,
   66,   61,    0,    0,   55,    0,   56,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  446,
   62,    0,    0,    0,    0,   59,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   64,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   60,    0,    0,   58,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  198,  190,
    0,    0,    0,  196,  193,    0,  194,  195,  197,    0,
    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,
    0,  191,    3,  192,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,    0,    0,
   16,   17,   18,   19,   20,    0,   21,    0,    0,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
    0,    0,   29,    0,    0,    0,   30,   31,   32,    0,
   33,   34,    0,   35,   36,   37,   38,   39,   40,    0,
    0,    0,    0,   41,   42,   43,   44,   45,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   52,    0,
    2,    0,    0,    0,    0,   53,    3,    0,    0,    0,
   54,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,    0,
   21,    0,    0,    0,   22,   23,   24,   25,    0,   26,
    0,   27,    0,   28,    0,    0,   29,    0,    0,    0,
   30,   31,    0,    0,   33,   34,    0,   35,   36,   37,
   38,    0,    0,    0,    0,    0,    0,   41,   42,   43,
    0,    0,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,    0,    0,   57,   65,    0,   63,   53,
    0,   66,   61,    0,   54,   55,    0,   56,    0,    0,
  178,  179,  180,  181,  182,  183,  184,  185,    0,    0,
  450,   62,    0,    0,    0,    0,   59,    0,  186,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   60,    0,    0,   58,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   57,
   65,    0,   63,    0,    0,   66,   61,    0,    0,   55,
    0,   56,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  461,   62,    0,    0,    0,    0,
   59,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   64,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   60,
    0,    0,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  198,    0,    0,    0,    0,  196,  193,
    0,  194,  195,  197,    0,    0,    0,    0,    0,    0,
    0,    2,    0,    0,    0,    0,  191,    3,  192,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,    0,    0,   33,   34,    0,   35,   36,
   37,   38,    0,    0,    0,    0,    0,    0,   41,   42,
   43,    0,    0,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,   52,    0,    2,    0,    0,    0,    0,
   53,    3,    0,    0,    0,   54,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,    0,    0,    0,   22,
   23,   24,   25,    0,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,    0,    0,   33,
   34,    0,   35,   36,   37,   38,    0,    0,    0,    0,
    0,    0,   41,   42,   43,    0,    0,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,   52,    0,    0,
   57,   65,    0,   63,   53,    0,   66,   61,    0,   54,
   55,    0,   56,    0,    0,  178,  179,  180,  181,  182,
  183,  184,  185,    0,    0,  600,   62,    0,    0,    0,
    0,   59,    0,  186,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   64,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   60,    0,    0,   58,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   57,   65,    0,   63,    0,    0,
   66,   61,    0,    0,   55,    0,   56,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  642,
   62,    0,    0,    0,    0,   59,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   64,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   60,    0,    0,   58,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  198,  190,    0,    0,    0,  196,  193,    0,  194,
  195,  197,    0,    0,    0,    0,    2,    0,    0,    0,
    0,    0,    3,    0,  191,    0,  192,  187,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,  189,    0,
   16,   17,   18,   19,   20,    0,   21,    0,    0,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
    0,    0,   29,    0,    0,    0,   30,   31,  188,    0,
   33,   34,    0,   35,   36,   37,   38,    0,    0,    0,
    0,    0,    0,   41,   42,   43,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   52,    0,
    2,    0,    0,    0,    0,   53,    3,    0,    0,    0,
   54,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,    0,
   21,    0,    0,    0,   22,   23,   24,   25,    0,   26,
    0,   27,    0,   28,    0,    0,   29,    0,    0,    0,
   30,   31,    0,    0,   33,   34,    0,   35,   36,   37,
   38,    0,    0,    0,    0,    0,    0,   41,   42,   43,
    0,    0,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,    0,    0,   57,   65,    0,   63,   53,
    0,   66,   61,    0,   54,   55,    0,   56,    0,    0,
    0,  176,  177,  178,  179,  180,  181,  182,  183,  184,
  185,   62,    0,    0,    0,    0,   59,    0,    0,    0,
    0,  186,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   64,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   60,    0,    0,   58,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  172,  172,    0,  172,    0,    0,  172,  172,    0,    0,
  172,    0,  172,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  172,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  198,  190,    0,    0,    0,  196,  193,    0,  194,  195,
  197,    0,    0,  172,    0,    0,    0,    0,    0,    0,
    0,  608,  609,  191,    0,  192,  187,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  172,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  189,    0,    0,
   57,   65,    0,   63,    0,    0,   66,   61,    0,    0,
   55,    2,   56,    0,    0,    0,    0,    3,    0,    0,
    0,    0,    0,    0,    0,    0,  132,  188,    0,    0,
    0,   59,    0,    0,    0,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,   64,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,    0,    0,   33,   34,    0,   35,   36,
   37,   38,    0,   58,    0,    0,    0,    0,   41,   42,
   43,    0,    0,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,   52,  172,  172,  172,  172,  172,    0,
   53,    0,  172,    0,    0,   54,    0,    0,   57,   65,
    0,   63,    0,    0,   66,   61,    0,    0,   55,    0,
   56,    0,    0,    0,  172,  172,  172,  172,  172,  172,
  172,  172,  172,  172,  134,  172,    0,    0,    0,   59,
  172,  172,  172,  172,  172,  173,  174,  175,    0,    0,
  172,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,
    0,   64,    0,    0,    0,    0,    0,    0,    0,    0,
  186,    0,    0,    0,  172,  172,    0,    0,    0,    0,
    0,    0,  172,  172,  172,  172,  172,  172,  172,    0,
    0,   58,    0,    0,    0,  172,    2,    0,    0,    0,
  172,    0,    3,    0,    0,    0,    0,    0,   57,   65,
    0,   63,    0,    0,   66,   61,    0,    0,   55,    0,
   56,    0,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,  138,   14,    0,    0,    0,   59,
   16,   17,   18,   19,   20,    0,    0,    0,    0,    0,
   22,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   64,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   42,   43,    0,    0,    0,    0,
    0,    0,   46,   47,   48,   49,   50,   51,   52,    0,
    0,   58,    0,    0,    0,   53,    0,    0,    0,    0,
   54,    0,    0,   57,   65,    0,   63,    0,    0,   66,
   61,  235,    0,   55,    2,   56,    0,    0,    0,    0,
    3,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   59,    0,    0,    0,    0,    0,
    0,    0,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,    0,    0,    0,    0,   16,   17,
   18,   19,   20,    0,  198,  190,   64,    0,   22,  196,
  193,    0,  194,  195,  197,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  191,    0,  192,
  187,    0,    0,    0,    0,    0,   58,    0,    0,    0,
    0,    0,   42,   43,    0,    0,    0,    0,    0,    0,
   46,   47,   48,   49,   50,   51,   52,    0,    0,    0,
    0,  189,    0,   53,    2,    0,    0,    0,   54,    0,
    3,    0,    0,    0,   57,   65,    0,   63,    0,  278,
   66,   61,    0,    0,   55,    0,   56,    0,    0,    0,
    0,  188,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,    0,   59,    0,    0,   16,   17,
   18,   19,   20,    0,    0,    0,    0,    0,   22,    0,
    0,    0,    0,    0,  198,  190,    0,    0,    0,  196,
  193,    0,  194,  195,  197,    0,    0,   64,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  191,    0,  192,
  187,    0,   42,   43,    0,    0,    0,    0,    0,    0,
   46,   47,   48,   49,   50,   51,   52,   58,    0,    2,
    0,    0,    0,   53,    0,    3,    0,    0,   54,   57,
   65,  189,   63,    0,  352,   66,   61,    0,    0,   55,
    0,   56,    0,    0,    0,    0,    0,    4,    5,    6,
    7,    8,    9,   10,   11,   12,   13,    0,   14,    0,
   59,  188,    0,   16,   17,   18,   19,   20,    0,    0,
    0,    0,    0,   22,    0,    0,    0,    0,    0,  173,
  174,  175,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   64,    0,  176,  177,  178,  179,  180,  181,
  182,  183,  184,  185,    0,    0,    0,   42,   43,    0,
    0,    0,    0,    0,  186,   46,   47,   48,   49,   50,
   51,   52,   58,    0,    0,    0,    0,    0,   53,    0,
    0,    0,    0,   54,    0,    0,   57,   65,    0,   63,
    0,  481,   66,   61,    0,    0,   55,    0,   56,    0,
    2,    0,    0,    0,    0,    0,    3,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   59,    0,    0,
    0,  413,    0,    0,    0,    0,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
    0,    0,    0,    0,   16,   17,   18,   19,   20,   64,
  174,  175,    0,    0,   22,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  176,  177,  178,  179,  180,  181,
  182,  183,  184,  185,    0,    0,    0,    0,    0,   58,
    0,    0,    0,    0,  186,    0,    0,    0,   42,   43,
    0,    0,    0,    0,    0,    0,   46,   47,   48,   49,
   50,   51,   52,    0,    0,    2,    0,    0,    0,   53,
    0,    3,    0,    0,   54,   57,   65,    0,   63,    0,
  483,   66,   61,    0,    0,   55,    0,   56,    0,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,    0,   59,    0,    0,   16,
   17,   18,   19,   20,    0,    0,    0,    0,    0,   22,
    0,    0,    0,  198,  190,    0,    0,    0,  196,  193,
    0,  194,  195,  197,    0,    0,    0,    0,   64,    0,
    0,    0,    0,    0,    0,    0,  191,    0,  192,    0,
    0,    0,    0,   42,   43,    0,    0,    0,    0,    0,
    0,   46,   47,   48,   49,   50,   51,   52,   58,    0,
    0,    0,    2,    0,   53,    0,    0,    0,    3,   54,
  189,    0,   57,   65,    0,   63,    0,  502,   66,   61,
    0,    0,   55,    0,   56,    0,    0,    0,    0,    0,
    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
  188,   14,    0,   59,    0,    0,   16,   17,   18,   19,
   20,    0,    0,  198,  190,    0,   22,    0,  196,  193,
    0,  194,  195,  197,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   64,  191,    0,  192,  187,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   42,   43,    0,    0,    0,    0,    0,    0,   46,   47,
   48,   49,   50,   51,   52,   58,    0,    0,    0,    0,
  189,   53,    0,    0,    0,    0,   54,   57,   65,    0,
   63,    0,  584,   66,   61,    0,    0,   55,    0,   56,
    0,    2,    0,    0,    0,    0,    0,    3,    0,    0,
  188,    0,    0,    0,    0,    0,    0,    0,   59,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,    0,    0,    0,    0,   16,   17,   18,   19,   20,
   64,    0,    0,    0,    0,   22,    0,    0,    0,    0,
    0,    0,    0,  176,  177,  178,  179,  180,  181,  182,
  183,  184,  185,    0,    0,    0,    0,    0,    0,    0,
   58,    0,    0,  186,    0,    0,    0,    0,    0,   42,
   43,    0,    0,    0,    0,    0,    0,   46,   47,   48,
   49,   50,   51,   52,    0,    0,    0,    0,    2,    0,
   53,    0,    0,    0,    3,   54,    0,    0,   57,   65,
    0,   63,    0,    0,   66,   61,    0,    0,   55,    0,
   56,    0,    0,    0,    0,    0,    4,    5,    6,    7,
    8,    9,   10,   11,   12,   13,    0,   14,    0,   59,
  175,    0,   16,   17,   18,   19,   20,    0,    0,    0,
    0,    0,   22,  176,  177,  178,  179,  180,  181,  182,
  183,  184,  185,    0,    0,    0,    0,    0,    0,    0,
    0,   64,    0,  186,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   42,   43,    0,    0,
    0,    0,    0,    0,   46,   47,   48,   49,   50,   51,
   52,   58,    0,    2,    0,    0,    0,   53,    0,    3,
    0,    0,   54,   57,   65,    0,   63,    0,    0,   66,
   61,    0,    0,   55,    0,   56,    0,    0,    0,    0,
    0,    4,    5,    6,    7,    8,    9,   10,   11,   12,
   13,    0,   14,    0,   59,    0,    0,   16,   17,   18,
   19,   20,    0,    0,    0,    0,    0,   22,    0,    0,
    0,    0,    0,  274,  274,    0,  240,  274,  274,  274,
  274,  274,  274,  274,    0,    0,   64,    0,    0,    0,
    0,    0,    0,    0,  274,  274,  274,    0,  274,  274,
  220,   42,   43,  220,    0,    0,  220,    0,    0,   46,
   47,   48,   49,   50,   51,   52,   58,    0,    0,    0,
  220,  220,   53,    0,    0,  220,    0,   54,    0,  274,
  274,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    2,    0,    0,    0,    0,    0,
    3,    0,    0,    0,    0,  220,  220,    0,    0,    0,
  274,  274,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,    0,    0,  220,  220,   16,   17,
   18,   19,   20,    0,    0,    0,    0,    0,   22,    0,
    0,    0,    0,  247,  247,    0,  247,  247,  247,  247,
  247,  247,  247,  247,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  247,  247,  247,    0,  247,  247,
    0,    0,   42,   43,    0,    0,    0,    0,    0,    0,
   46,   47,   48,   49,   50,   51,   52,    0,    0,    2,
    0,    0,    0,   53,    0,    3,    0,    0,   54,  247,
  247,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    4,    5,    6,
    7,    8,    9,   10,   11,   12,   13,    0,   14,    0,
  247,  247,    0,   16,   17,   18,  419,   20,  274,  274,
  274,    0,    0,   22,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  274,  274,  274,  274,  274,  274,  274,
  274,  274,  274,    0,  220,  220,  220,    0,    0,    0,
    0,    0,    0,  274,    0,    0,    0,   42,   43,  220,
  220,  220,  220,  220,  220,   46,   47,   48,   49,   50,
   51,   52,    0,    0,    0,    0,    0,    0,   53,    0,
  274,    0,    0,   54,    0,    0,    0,    0,    0,    0,
  306,  306,    0,  301,  306,  306,  306,  306,  306,  306,
  306,    0,    0,    0,    0,    0,  220,    0,    0,    0,
  274,  306,  306,  306,  306,  306,  306,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  246,    0,
    0,    0,    0,    0,    0,    0,  220,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  306,  306,  247,  247,
  247,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  247,  247,  247,  247,  247,  247,  247,
  247,  247,  247,    0,    0,    0,    0,  306,  306,    0,
    0,    0,    0,  247,    0,    0,    0,    0,    0,    0,
  307,  307,    0,  302,  307,  307,  307,  307,  307,  307,
  307,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  247,  307,  307,  307,  307,  307,  307,    0,  198,  190,
    0,    0,    0,  196,  193,    0,  194,  195,  197,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  247,  191,    0,  192,    0,    0,  307,  307,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  246,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  189,    0,  307,  307,    0,
    0,    0,    0,    0,    0,    0,  301,  301,    0,  301,
  301,  301,  301,  301,  301,  301,  301,    0,    0,    0,
    0,    0,    0,    0,    0,  188,    0,  301,  301,  301,
  301,  301,  301,    0,    0,  306,  306,  306,    0,  306,
  306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
  306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
  306,  306,  301,  301,    0,    0,    0,    0,    0,    0,
  306,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  301,  301,    0,    0,  306,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  316,  316,    0,
  316,  316,  316,  316,  316,  316,  316,  316,    0,    0,
    0,    0,    0,    0,    0,    0,  306,  306,  316,  316,
  316,  316,  316,  316,    0,  307,  307,  307,    0,  307,
  307,  307,  307,  307,  307,  307,  307,  307,  307,  307,
  307,  307,  307,  307,  307,  307,  307,  307,  307,  307,
  307,  307,    0,  316,  316,    0,    0,    0,    0,    0,
  307,    0,    0,    0,    0,    0,    0,    0,    0,  177,
  178,  179,  180,  181,  182,  183,  184,  185,    0,    0,
    0,    0,    0,    0,  316,  316,    0,  307,  186,    0,
    0,    0,    0,    0,    0,  198,  190,    0,    0,    0,
  196,  193,    0,  194,  195,  197,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  307,  307,  191,    0,
  192,  301,  301,  301,    0,  301,  301,  301,  301,  301,
  301,  301,  301,  301,  301,  301,  301,  301,  301,  301,
  301,  301,  301,  301,  301,  301,  301,  301,    0,    0,
    0,    0,  189,    0,    0,    0,  301,    0,    0,    0,
    0,    0,    0,  302,  302,    0,  302,  302,  302,  302,
  302,  302,  302,  302,    0,    0,    0,    0,    0,    0,
    0,    0,  188,  301,  302,  302,  302,  302,  302,  302,
    0,    0,  291,  291,    0,    0,  119,  291,  291,  119,
  291,  291,  291,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  301,  301,    0,  291,    0,  291,  291,  302,
  302,    0,  316,  316,  316,    0,  316,  316,  316,  316,
  316,  316,  316,  316,  316,  316,  316,  316,  316,  316,
  316,  316,  316,  316,  316,  316,  316,  316,  316,  291,
  302,  302,    0,    0,    0,    0,    0,  316,    0,    0,
    0,    0,    0,    0,  308,  308,    0,    0,  308,  308,
  308,  308,  308,  308,  308,    0,    0,    0,    0,  291,
    0,    0,    0,    0,  316,  308,  308,  308,  308,  308,
  308,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  316,  316,    0,    0,    0,    0,    0,
  308,  308,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  178,  179,  180,
  181,  182,  183,  184,  185,    0,    0,    0,    0,    0,
    0,  308,  308,    0,    0,  186,    0,    0,    0,  300,
  300,    0,    0,  300,  300,  300,  300,  300,  300,  300,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  300,  300,  300,  300,  300,  300,    0,    0,  302,  302,
  302,    0,  302,  302,  302,  302,  302,  302,  302,  302,
  302,  302,  302,  302,  302,  302,  302,  302,  302,  302,
  302,  302,  302,  302,  302,  300,  300,  291,  291,  291,
    0,    0,    0,  302,    0,    0,    0,    0,    0,    0,
    0,    0,  291,  291,  291,  291,  291,  291,  291,  291,
  291,  291,  293,  293,    0,    0,  300,  300,    0,    0,
  302,    0,  291,    0,    0,    0,    0,    0,    0,    0,
  295,  295,    0,    0,  295,  295,  295,  295,  295,  295,
  295,    0,    0,    0,    0,    0,    0,    0,    0,  302,
  302,  295,  295,  295,  295,  295,  295,    0,    0,  308,
  308,  308,    0,  308,  308,  308,  308,  308,  308,  308,
  308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
  308,  308,  308,  308,  308,  308,  295,  295,    0,    0,
    0,    0,    0,    0,  308,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  295,  295,    0,
    0,  308,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  308,  308,    0,    0,  300,  300,  300,    0,  300,  300,
  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
  300,  300,  300,  300,  300,  300,  300,  300,  300,  300,
  300,    0,    0,    0,    0,    0,    0,    0,    0,  300,
    0,    0,    0,    0,    0,    0,  294,  294,    0,    0,
  294,  294,  294,  294,  294,  294,  294,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  300,  294,  294,  294,
  294,  294,  294,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  300,  300,    0,    0,    0,
    0,    0,  294,  294,    0,  295,  295,  295,    0,  295,
  295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
  295,  295,  295,  295,  295,  295,  295,  295,  295,  295,
  295,  295,    0,  294,  294,    0,    0,    0,    0,    0,
  295,    0,    0,  291,  291,    0,    0,  291,  291,  291,
  291,  291,  291,  291,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  291,  291,  291,  295,  291,  291,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  306,  306,    0,  306,  306,  306,  306,  306,  306,  306,
  306,    0,    0,    0,    0,    0,    0,  295,    0,  291,
  291,  306,  306,  306,    0,  306,  306,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  291,  291,    0,    0,    0,    0,  306,  306,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  306,  306,    0,
    0,  294,  294,  294,    0,  294,  294,  294,  294,  294,
  294,  294,  294,  294,  294,  294,  294,  294,  294,  294,
  294,  294,  294,  294,  294,  294,  294,  294,    0,    0,
    0,    0,    0,    0,    0,    0,  294,    0,    0,  307,
  307,    0,  307,  307,  307,  307,  307,  307,  307,  307,
    0,    0,  222,    0,    0,  222,    0,    0,  222,    0,
  307,  307,  307,  294,  307,  307,    0,    0,    0,    0,
    0,    0,  222,  222,    0,    0,    0,  222,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  294,    0,  307,  307,    0,  291,  291,
  291,    0,    0,    0,    0,    0,    0,  222,  222,    0,
    0,    0,    0,  291,  291,  291,  291,  291,  291,  291,
  291,  291,  291,  293,  293,    0,  307,  307,    0,    0,
    0,    0,    0,  291,    0,  306,  306,  306,  222,  222,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  306,  306,  306,  306,  306,  306,  306,  306,  306,  306,
  291,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  306,    0,    0,  250,  250,    0,  250,  250,  250,  250,
  250,  250,  250,  250,    0,  219,    0,    0,  219,    0,
  291,  219,    0,    0,  250,  250,  250,  306,  250,  250,
    0,    0,    0,    0,    0,  219,  219,    0,    0,    0,
  219,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  306,  306,    0,  250,
  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  219,  219,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  250,  250,    0,    0,  307,  307,  307,    0,    0,    0,
    0,  219,  219,    0,    0,    0,  222,  222,  222,  307,
  307,  307,  307,  307,  307,  307,  307,  307,  307,    0,
    0,  222,  222,  222,  222,  222,  222,  249,  249,  307,
  249,  249,  249,  249,  249,  249,  249,  249,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  249,  249,
  249,    0,  249,  249,    0,    0,  307,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  222,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  249,  249,  307,  307,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  222,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  254,  254,  249,  249,  254,  254,  254,  254,
  254,  254,  254,    0,    0,    0,    0,    0,  250,  250,
  250,    0,    0,  254,  254,  254,    0,  254,  254,  219,
  219,  219,    0,  250,  250,  250,  250,  250,  250,  250,
  250,  250,  250,    0,  219,  219,  219,  219,  219,  219,
    0,    0,    0,  250,    0,    0,    0,    0,  254,  254,
  276,  276,    0,    0,  276,  276,  276,  276,  276,  276,
  276,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  250,  276,  276,  276,    0,  276,  276,    0,    0,  254,
  254,  219,    0,    0,    0,    0,    0,  257,  257,    0,
    0,  257,  257,  257,  257,  257,  257,  257,    0,    0,
  250,    0,    0,    0,    0,    0,  276,  276,  257,  257,
  257,  219,  257,  257,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  249,  249,  249,    0,    0,  276,  276,    0,
    0,    0,    0,  257,  257,    0,    0,  249,  249,  249,
  249,  249,  249,  249,  249,  249,  249,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  249,    0,    0,
    0,    0,    0,    0,  257,  257,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  249,    0,    0,    0,    0,    0,
  213,  213,    0,    0,  213,  213,  213,  213,  213,  213,
  213,    0,    0,    0,    0,    0,    0,  254,  254,  254,
    0,  213,  213,  213,  249,  213,  213,    0,    0,    0,
    0,    0,  254,  254,  254,  254,  254,  254,  254,  254,
  254,  254,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  254,    0,    0,    0,  213,  213,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  276,  276,  276,    0,  254,
    0,    0,    0,    0,    0,    0,    0,  213,  213,    0,
  276,  276,  276,  276,  276,  276,  276,  276,  276,  276,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  254,
  276,    0,  257,  257,  257,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  257,  257,  257,
  257,  257,  257,  257,  257,  257,  257,  276,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  257,    0,    0,
  206,  206,    0,    0,  206,  206,  206,  206,  206,  206,
  206,    0,    0,    0,    0,    0,    0,  276,    0,    0,
    0,  206,  206,  206,  257,  206,  206,  207,  207,    0,
    0,  207,  207,  207,  207,  207,  207,  207,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  207,  207,
  207,    0,  207,  207,  257,    0,  206,  206,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  213,  213,  213,    0,    0,
    0,    0,    0,  207,  207,    0,    0,  206,  206,    0,
  213,  213,  213,  213,  213,  213,  213,  213,  213,  213,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  207,  207,    0,    0,    0,    0,
  208,  208,    0,    0,  208,  208,  208,  208,  208,  208,
  208,    0,    0,    0,    0,    0,    0,  213,    0,    0,
    0,  208,  208,  208,    0,  208,  208,    0,  198,  190,
    0,    0,    0,  196,  193,    0,  194,  195,  197,    0,
    0,    0,    0,    0,    0,    0,    0,  213,    0,    0,
    0,  191,    0,  192,  187,  211,  208,  208,  211,    0,
  211,  211,  211,  211,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  211,  211,  211,    0,  211,
  211,    0,    0,    0,    0,  189,    0,  208,  208,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  206,  206,  206,    0,    0,
  211,  211,    0,    0,    0,  188,    0,    0,    0,    0,
  206,  206,  206,  206,  206,  206,  206,  206,  206,  206,
    0,    0,  207,  207,  207,    0,    0,    0,    0,    0,
    0,  211,  211,    0,    0,    0,    0,  207,  207,  207,
  207,  207,  207,  207,  207,  207,  207,    0,    0,    0,
    0,    0,    0,    0,    0,  212,    0,  206,  212,    0,
  212,  212,  212,  212,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  212,  212,  212,    0,  212,
  212,    0,    0,    0,  207,    0,    0,  206,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  212,  212,    0,    0,  207,  208,  208,  208,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  208,  208,  208,  208,  208,  208,  208,  208,  208,  208,
    0,  212,  212,  173,  174,  175,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,    0,  211,
  211,  211,    0,    0,    0,    0,    0,  208,  186,    0,
    0,    0,    0,    0,  211,  211,  211,  211,  211,  211,
  211,  211,  211,  211,    0,    0,  204,    0,    0,  204,
    0,  204,  204,  204,  204,    0,    0,  208,    0,    0,
    0,    0,    0,    0,    0,    0,  204,  204,  204,    0,
  204,  204,  205,    0,    0,  205,    0,  205,  205,  205,
  205,  211,    0,  203,    0,  542,  203,    0,  203,  203,
  203,  203,  205,  205,  205,    0,  205,  205,    0,    0,
    0,  204,  204,  203,  203,  203,    0,  203,  203,    0,
    0,  211,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  205,  205,  212,
  212,  212,  204,  204,    0,    0,    0,    0,  203,  203,
    0,    0,    0,    0,  212,  212,  212,  212,  212,  212,
  212,  212,  212,  212,    0,    0,    0,    0,  205,  205,
    0,  209,    0,    0,  209,    0,    0,  209,    0,  203,
  203,    0,  210,    0,    0,  210,    0,    0,  210,    0,
    0,  209,  209,  209,    0,  209,  209,    0,    0,    0,
    0,  212,  210,  210,  210,    0,  210,  210,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  209,  209,    0,    0,
    0,  212,    0,    0,    0,    0,    0,  210,  210,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  209,  209,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  210,  210,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  204,  204,  204,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  204,  204,  204,  204,  204,
  204,  204,  204,  204,  204,    0,  205,  205,  205,    0,
    0,    0,    0,    0,    0,    0,    0,  203,  203,  203,
    0,  205,  205,  205,  205,  205,  205,  205,  205,  205,
  205,    0,  203,  203,  203,  203,  203,  203,  203,  203,
  203,  203,  204,    0,    0,  221,    0,    0,  221,    0,
    0,  221,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  221,  221,    0,  205,    0,
  221,    0,  204,    0,    0,    0,    0,    0,    0,  203,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  209,  209,  209,  205,    0,
  221,  221,    0,    0,    0,    0,  210,  210,  210,  203,
  209,  209,  209,  209,  209,  209,  209,  209,  209,  209,
    0,  210,  210,  210,  210,  210,  210,  210,  210,  210,
  210,  221,  221,  291,  291,    0,    0,  122,  291,  291,
  122,  291,  291,  291,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  291,  209,  291,  291,
    0,    0,    0,    0,    0,    0,    0,    0,  210,  291,
  291,    0,    0,    0,  291,  291,    0,  291,  291,  291,
    0,    0,    0,    0,    0,    0,    0,  209,    0,    0,
  291,    0,  291,    0,  291,  291,  290,  290,  210,    0,
  118,  290,  290,  118,  290,  290,  290,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  290,
  291,  290,  290,  290,  290,    0,  291,  121,  290,  290,
  121,  290,  290,  290,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  290,    0,  290,  290,
    0,    0,    0,  290,    0,    0,  291,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  221,
  221,  221,    0,    0,    0,    0,    0,    0,    0,    0,
  290,    0,    0,  290,  221,  221,  221,  221,  221,  221,
    0,    0,    0,    0,    0,    0,    0,    0,  198,  190,
    0,    0,    0,  196,  193,    0,  194,  195,  197,    0,
  290,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  199,  191,    0,  192,  187,    0,    0,    0,    0,    0,
    0,  221,    0,    0,    0,    0,    0,    0,    0,    0,
  198,  190,    0,    0,    0,  196,  193,    0,  194,  195,
  197,    0,    0,    0,    0,  189,    0,    0,  291,  291,
  291,  221,  251,  191,    0,  192,  187,    0,    0,    0,
    0,    0,    0,  291,  291,  291,  291,  291,  291,  291,
  291,  291,  291,  293,  293,  188,    0,    0,    0,    0,
    0,    0,    0,  291,  291,  291,  291,  189,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  291,
  291,  291,  291,  291,  291,  291,  291,  291,  291,  293,
  293,  290,  290,  290,    0,    0,    0,  188,    0,  291,
    0,    0,    0,    0,    0,    0,  290,  290,  290,  290,
  290,  290,  290,  290,  290,  290,    0,    0,  290,  290,
  290,    0,    0,    0,    0,    0,  290,    0,    0,    0,
    0,    0,    0,  290,  290,  290,  290,  290,  290,  290,
  290,  290,  290,    0,    0,    0,  198,  190,    0,    0,
    0,  196,  193,  290,  194,  195,  197,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  252,  191,
    0,  192,  187,  198,  190,    0,    0,  302,  196,  193,
    0,  194,  195,  197,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  173,  174,  175,  191,    0,  192,  187,
    0,    0,    0,  189,    0,    0,    0,    0,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  186,    0,
  189,    0,    0,  188,    0,  173,  174,  175,  198,  190,
    0,    0,  372,  196,  193,    0,  194,  195,  197,    0,
  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,
  188,  191,    0,  192,  187,    0,    0,  198,  190,    0,
  186,  375,  196,  193,    0,  194,  195,  197,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  191,    0,  192,  187,    0,  189,  198,  190,    0,    0,
  376,  196,  193,    0,  194,  195,  197,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  191,
    0,  192,  187,    0,  189,  188,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  198,
  190,    0,    0,  380,  196,  193,    0,  194,  195,  197,
    0,    0,    0,  189,  188,    0,    0,    0,    0,    0,
    0,    0,  191,    0,  192,  187,    0,    0,    0,    0,
    0,  173,  174,  175,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  188,    0,    0,  176,  177,  178,  179,
  180,  181,  182,  183,  184,  185,  189,    0,  173,  174,
  175,    0,  198,  190,    0,    0,  186,  196,  193,    0,
  194,  195,  197,  176,  177,  178,  179,  180,  181,  182,
  183,  184,  185,    0,  391,  191,  188,  192,  187,    0,
    0,  198,  190,  186,    0,  388,  196,  193,    0,  194,
  195,  197,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  191,    0,  192,  187,    0,  189,
    0,    0,    0,  173,  174,  175,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,  189,  188,
    0,    0,  173,  174,  175,    0,    0,    0,  186,    0,
    0,    0,    0,    0,    0,    0,    0,  176,  177,  178,
  179,  180,  181,  182,  183,  184,  185,    0,  188,    0,
    0,  173,  174,  175,    0,    0,    0,  186,    0,    0,
    0,    0,    0,    0,    0,    0,  176,  177,  178,  179,
  180,  181,  182,  183,  184,  185,    0,    0,    0,  198,
  190,    0,    0,    0,  196,  193,  186,  194,  195,  197,
    0,    0,    0,    0,  173,  174,  175,    0,    0,    0,
    0,    0,  191,    0,  192,  187,    0,    0,    0,  176,
  177,  178,  179,  180,  181,  182,  183,  184,  185,    0,
    0,    0,    0,    0,    0,  198,  190,    0,    0,  186,
  196,  193,    0,  194,  195,  197,  189,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  423,    0,  191,    0,
  192,  187,    0,    0,    0,    0,    0,  173,  174,  175,
    0,    0,    0,    0,    0,    0,  188,  422,    0,    0,
    0,    0,  176,  177,  178,  179,  180,  181,  182,  183,
  184,  185,  189,    0,    0,    0,  173,  174,  175,    0,
  198,  190,  186,    0,    0,  196,  193,    0,  194,  195,
  197,  176,  177,  178,  179,  180,  181,  182,  183,  184,
  185,    0,  188,  191,    0,  192,  187,    0,    0,    0,
    0,  186,    0,    0,    0,    0,  198,  190,    0,    0,
    0,  196,  193,    0,  194,  195,  197,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  189,    0,  191,
    0,  192,  187,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  188,  443,    0,
    0,    0,    0,  189,    0,    0,    0,    0,    0,    0,
    0,    0,  198,  190,    0,    0,    0,  196,  193,    0,
  194,  195,  197,    0,  173,  174,  175,    0,    0,    0,
    0,    0,    0,  188,  469,  191,    0,  192,  187,  176,
  177,  178,  179,  180,  181,  182,  183,  184,  185,    0,
    0,    0,  198,  190,    0,    0,    0,  196,  193,  186,
  194,  195,  197,    0,    0,    0,    0,    0,    0,  189,
  173,  174,  175,    0,    0,  191,    0,  192,  187,    0,
    0,    0,    0,    0,    0,  176,  177,  178,  179,  180,
  181,  182,  183,  184,  185,    0,    0,    0,    0,  188,
  491,    0,    0,    0,    0,  186,    0,    0,    0,  189,
    0,    0,    0,    0,    0,    0,    0,    0,  198,  190,
    0,    0,  515,  196,  193,    0,  194,  195,  197,    0,
    0,    0,    0,    0,    0,  173,  174,  175,    0,  188,
  506,  191,    0,  192,  187,    0,    0,    0,    0,    0,
  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  186,  173,  174,  175,    0,  189,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  176,  177,  178,  179,
  180,  181,  182,  183,  184,  185,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  188,  186,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  198,  190,    0,
    0,    0,  196,  193,    0,  194,  195,  197,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  173,  174,  175,
  191,    0,  192,  187,    0,    0,    0,    0,    0,    0,
    0,    0,  176,  177,  178,  179,  180,  181,  182,  183,
  184,  185,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  186,    0,  189,    0,    0,  173,  174,  175,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  176,  177,  178,  179,  180,  181,  182,  183,
  184,  185,    0,    0,  188,  555,    0,    0,    0,    0,
    0,    0,  186,  198,  190,    0,    0,    0,  196,  193,
    0,  194,  195,  197,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  191,    0,  192,  187,
    0,    0,    0,  173,  174,  175,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,    0,  586,
  189,    0,    0,    0,    0,    0,    0,    0,  186,    0,
  198,  190,    0,    0,  667,  196,  193,    0,  194,  195,
  197,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  188,    0,    0,  191,    0,  192,  187,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  198,  190,    0,    0,  683,  196,  193,    0,
  194,  195,  197,    0,    0,    0,    0,  189,    0,    0,
    0,    0,  173,  174,  175,  191,    0,  192,  187,    0,
    0,    0,    0,    0,    0,    0,    0,  176,  177,  178,
  179,  180,  181,  182,  183,  184,  185,  188,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  186,    0,  189,
  275,  275,    0,    0,    0,  275,  275,    0,  275,  275,
  275,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  275,    0,  275,  275,  198,  190,  188,
    0,    0,  196,  193,    0,  194,  195,  197,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  191,    0,  192,  187,    0,    0,    0,  275,  173,  174,
  175,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  176,  177,  178,  179,  180,  181,  182,
  183,  184,  185,    0,  189,    0,    0,  275,  275,    0,
    0,    0,    0,  186,  290,  290,    0,    0,    0,  290,
  290,    0,  290,  290,  290,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  188,    0,    0,  290,    0,  290,
  290,    0,    0,    0,    0,  173,  174,  175,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  176,  177,  178,  179,  180,  181,  182,  183,  184,  185,
    0,  290,    0,    0,    0,    0,    0,    0,    0,    0,
  186,    0,    0,    0,    0,    0,    0,  173,  174,  175,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  290,  176,  177,  178,  179,  180,  181,  182,  183,
  184,  185,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  186,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  275,  275,  275,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  275,  275,  275,  275,  275,  275,  275,  275,  275,  275,
    0,    0,  173,  174,  175,    0,    0,    0,    0,    0,
  275,    0,    0,    0,    0,    0,    0,  176,  177,  178,
  179,  180,  181,  182,  183,  184,  185,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  186,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  290,
  290,  290,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  290,  290,  290,  290,  290,  290,
  290,  290,  290,  290,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  290,
  );
 $GLOBALS['_PHP_PARSER_STRUCTURE']['yyCheck'] = array(            13,
  142,    1,   36,   40,  233,    3,  186,   34,    6,    7,
    8,    9,   10,   11,   12,   36,   41,   34,   36,   44,
  123,  212,   39,  125,   24,   23,   36,   40,   13,  220,
   36,   36,   30,   31,   59,   33,   38,   59,  381,  230,
   13,   40,  233,   59,   91,   36,   36,   13,   38,   13,
  125,   58,   41,   36,   36,   44,   54,   55,   56,   57,
   58,   59,  465,   61,   91,   39,   93,  123,   37,   40,
   59,   36,  125,   42,   33,   38,   93,   38,   47,   96,
   36,   38,   91,  307,   41,   37,   36,   38,   91,   44,
   42,   43,   40,   45,   46,   47,  123,   41,  125,  219,
   98,  307,  287,  288,   59,  123,  123,  123,  125,  257,
  258,  231,  260,  261,  123,   59,  123,   91,  238,   93,
  123,  524,  120,  526,  122,  331,   40,   44,   92,  127,
  128,  129,   41,  131,   40,   44,  349,   44,   40,   43,
  123,   45,   59,   41,   61,  143,   44,   44,   40,  123,
   59,  125,   59,   41,  302,  119,  300,  301,   37,    4,
    5,  159,   59,   42,   43,   40,   45,   46,   47,  123,
  129,  169,  186,   44,  517,  173,  174,  175,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,   59,  187,
  188,  189,  190,  191,  192,  193,  194,  195,  196,  197,
  198,  186,  200,  201,  202,  203,  204,  205,  206,  207,
  208,  209,  210,  186,    4,    5,   44,   44,   41,  217,
  186,  219,  186,  221,  222,  327,  328,  225,  226,  227,
  228,   59,   59,  231,   61,  257,  258,  357,  260,  261,
  238,  239,   41,   33,   44,   44,  212,   40,  212,  352,
   44,  349,  327,  328,  220,   93,  220,  265,  217,   59,
  219,   44,  260,   40,  230,   59,  230,  233,   40,  233,
   41,  305,  231,  307,  327,  328,   59,   40,  305,  238,
  307,  308,  511,  310,  311,  312,  307,  305,  305,  307,
  307,  308,  290,  310,  311,  312,   41,  307,   40,  305,
  313,  307,  307,  148,  446,  307,  353,  372,  450,   40,
  155,  156,  157,  158,  494,  305,  307,  307,  438,  461,
  511,  355,  305,  552,  307,  307,  353,   41,  297,  354,
   44,  305,   40,  307,  308,  372,  310,  311,  312,  129,
  305,   40,  307,  370,  371,  297,  307,  345,  258,  305,
  307,  307,  369,  370,  371,  305,  307,  307,  148,  357,
   41,  552,  360,   44,  257,  155,  156,  157,  158,  257,
  258,   41,  260,  261,   44,   41,  376,  385,   44,  353,
  380,  379,  260,  381,  382,  349,  353,  387,  261,  397,
  398,  257,  258,  372,  260,  261,  370,  371,  357,  303,
  304,  305,  305,   40,  307,  308,  285,  286,   41,  313,
  353,   44,   40,  125,  428,  413,  430,  415,  297,  257,
  258,   41,  260,  261,   44,  423,  316,  217,   41,  219,
   59,   44,  313,  278,  257,  258,  434,  260,  261,   61,
  438,  231,  440,  441,  300,  301,  291,   41,  238,   59,
   44,  305,  356,  357,  358,  359,  360,  361,  600,   41,
   58,   59,   44,  471,   58,   59,  474,  297,  610,   63,
  612,   41,  331,  332,   44,  434,   58,   59,   41,  438,
  494,   44,  480,  326,  327,  328,  257,  258,  278,  260,
  261,   41,  490,   41,   44,   41,   44,  639,   44,   93,
  642,  291,  305,   41,   38,  647,   44,  352,  305,  494,
  305,   93,  257,  258,  522,  260,  261,   41,  532,  517,
   44,  494,   59,   41,    4,    5,   44,   40,  494,   44,
  494,  125,  546,  675,  548,  125,  324,  385,  383,  384,
   58,   59,   61,  125,  542,  511,   41,  511,  307,  397,
  398,   41,  257,  258,  696,  260,  261,   40,  403,  559,
  405,  296,  352,  408,  409,  565,  566,  357,  326,  327,
  328,  352,  580,  571,  582,   93,   41,   44,  125,   41,
  425,  351,  724,  351,   44,  727,  552,   41,  552,  731,
   44,   41,   40,  383,  384,  300,  301,  302,  596,  599,
   93,   41,  383,  384,   58,   59,  614,  125,   41,   63,
  305,  456,   40,  403,  335,  405,  372,   40,  408,  409,
    0,   59,   61,  471,   61,  305,  474,  339,  340,  341,
  342,  343,  344,  345,   91,  425,  481,  125,  483,   93,
  638,  326,  327,  328,  434,  653,  305,  655,  438,   64,
   65,   66,   41,   33,   34,  353,   36,  502,   59,   39,
   40,  354,   61,   43,  672,   45,  456,  667,  262,  263,
  264,  125,   59,  518,  522,  456,   59,   40,  305,   59,
  688,  305,  690,  277,   64,   93,   44,  695,  352,   41,
   41,  481,   44,  483,  702,  353,  123,   93,  712,   59,
  481,  709,  483,  717,   41,   41,   58,   59,   41,   44,
  257,  258,  502,  260,  261,  354,   96,   41,   44,  123,
   40,  502,   41,  123,  307,    0,  307,   59,  518,   59,
  324,   59,  580,  125,  582,   40,   61,  518,  302,  584,
   58,   93,  324,  123,  262,  125,  126,   59,   61,  339,
  340,  341,  342,  343,  344,  345,   41,  354,   33,   34,
  354,   36,  307,  331,   39,   40,  614,  332,   43,   59,
   45,   38,  354,  125,   41,   61,  307,   44,  123,  326,
  327,  328,   44,  305,   59,  305,   59,   61,   58,   64,
   61,   58,   59,  307,  584,   59,   63,  339,  340,  341,
  342,  343,  344,  584,   61,  653,  324,  655,  262,  263,
  264,   59,   41,  305,   41,   44,   61,   44,  335,   61,
   40,   96,   40,  335,  672,   40,   93,   94,  307,   58,
   59,   58,   59,   41,   41,  307,  354,   41,   41,  123,
  688,  123,  690,  123,  305,   41,   93,  695,  123,   41,
  125,  126,   41,   41,  702,  123,  302,  124,  125,  257,
  258,  709,  260,  261,   93,  123,   93,   41,  123,   59,
  324,    1,    1,  457,  566,  403,  681,  257,  258,  259,
  260,  261,  715,  589,  546,  265,  576,  607,  263,  148,
  634,  545,  408,  536,   -1,  592,  125,  440,  125,  409,
  354,   -1,  300,  301,  302,   -1,   -1,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,  299,
  300,  301,  302,  303,  304,  305,  306,  307,   -1,  309,
   -1,   -1,   -1,  313,  314,  315,  316,  317,  318,  319,
  320,  321,  322,  323,   -1,  325,  326,  327,  328,  329,
  330,  331,   -1,  333,  334,   -1,  336,  337,  338,  339,
  340,  341,   -1,   -1,   -1,   61,  346,  347,  348,  349,
  350,   -1,  324,   -1,   -1,  355,  356,  357,  358,  359,
  360,  361,  257,  258,  259,  260,  261,   -1,  368,   -1,
  265,   -1,   -1,  373,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  299,  300,  301,  302,  303,  304,
  305,  306,  307,   -1,  309,  262,  263,  264,  313,  314,
  315,  316,  317,  318,  319,  320,  321,  322,  323,   61,
  325,  326,  327,  328,  329,  330,  331,  324,  333,  334,
   -1,  336,  337,  338,  339,  340,  341,    0,   -1,   -1,
   -1,  346,  347,  348,  349,  350,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  354,   -1,   -1,
   -1,   -1,   -1,  368,   -1,  324,   -1,  324,  373,   -1,
   33,   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,
   43,   -1,   45,   38,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,  354,   59,  354,   -1,   -1,
   -1,   64,   -1,   58,   59,   -1,   -1,   41,   63,   -1,
   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   93,   94,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   33,   34,   -1,   36,  125,   -1,
   39,   40,   -1,   -1,   43,   -1,   45,   38,   -1,   -1,
   41,  125,   -1,   44,   -1,   -1,   -1,   -1,  324,   -1,
   59,   -1,   -1,   41,   -1,   64,   44,   58,   59,   -1,
   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   -1,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,   91,   -1,
   93,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,  257,  258,  259,  260,  261,   -1,
   -1,   -1,  265,   -1,   -1,   -1,   -1,  262,  263,  264,
  257,  258,   -1,  260,  261,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,  302,
  303,  304,  305,  306,  307,   59,  309,   61,   -1,   -1,
  313,  314,  315,  316,  317,  318,  319,  320,  321,  322,
  323,   -1,  325,  326,  327,  328,  329,  330,  331,  324,
  333,  334,   -1,  336,  337,  338,  339,  340,  341,  326,
  327,  328,   -1,  346,  347,  348,  349,  350,   -1,   -1,
  324,   -1,  355,  356,  357,  358,  359,  360,  361,  354,
  259,   -1,   -1,   -1,   -1,  368,  265,   -1,   -1,   -1,
  373,  262,  263,  264,   -1,   -1,   -1,   91,   -1,   93,
  354,   -1,   96,   -1,  262,  263,  277,  278,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,  123,
  309,  125,   -1,   -1,  313,  314,  315,  316,   -1,  318,
   -1,  320,  305,  322,  307,  308,  325,  310,  311,  312,
  329,  330,  331,  324,  333,  334,   -1,  336,  337,  338,
  339,  340,  341,   -1,   -1,   -1,  324,  346,  347,  348,
  349,  350,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  354,   -1,   33,   34,   -1,   36,  368,
  353,   39,   40,   -1,  373,   43,  354,   45,   38,   -1,
   -1,   41,   -1,   -1,   44,   -1,  369,  370,  371,   -1,
   -1,   59,   -1,   -1,   -1,   -1,   64,   -1,   58,   59,
   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  266,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   93,   94,   -1,   -1,   37,   -1,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,
   60,   -1,   62,   -1,  124,  125,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,
   -1,   45,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,
   -1,  305,   -1,  307,  308,   59,  310,  311,  312,   -1,
   64,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   93,   94,  353,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  370,  371,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,  331,  324,  333,  334,   -1,  336,  337,
  338,  339,  340,  341,   -1,   -1,   -1,   -1,  346,  347,
  348,  349,  350,  283,  284,  285,  286,  355,  356,  357,
  358,  359,  360,  361,  354,  259,   41,  297,   -1,   44,
  368,  265,   -1,   -1,   -1,  373,  262,  263,  264,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,  277,  278,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,   -1,   -1,   93,  313,
  314,  315,  316,  317,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,  331,  324,  333,
  334,   -1,  336,  337,  338,  339,  340,  341,   -1,  124,
  125,   -1,  346,  347,  348,  349,  350,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  354,   -1,
   33,   34,   -1,   36,  368,   -1,   39,   40,   -1,  373,
   43,   -1,   45,   -1,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   64,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   93,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   39,   40,   -1,   -1,   43,   -1,   45,  262,  263,  264,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,  277,  278,   -1,   64,   -1,   58,   59,   -1,
   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,   58,   59,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   41,  123,   -1,   44,  126,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,  354,
   58,   59,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,
   -1,   -1,  265,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,  125,   93,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,
  303,  304,  305,  306,  307,   -1,  309,  125,   -1,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
  323,   -1,  325,   -1,   -1,   -1,  329,  330,  331,  324,
  333,  334,   -1,  336,  337,  338,  339,  340,  341,   -1,
   -1,   -1,   -1,  346,  347,  348,  349,  350,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  354,
  259,   -1,   -1,   -1,   -1,  368,  265,   -1,   -1,   -1,
  373,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
  309,  262,  263,  264,  313,  314,  315,  316,   -1,  318,
   -1,  320,  321,  322,   -1,   -1,  325,   -1,   -1,   -1,
  329,  330,  331,  324,  333,  334,   -1,  336,  337,  338,
  339,  340,  341,   -1,  262,  263,  264,  346,  347,  348,
  349,  350,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,  354,   -1,   33,   34,   -1,   36,  368,
   -1,   39,   40,  324,  373,   43,   -1,   45,   -1,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   41,   -1,   64,   44,   58,   59,
   -1,   -1,   -1,  354,   -1,   -1,  324,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   93,   -1,   -1,  354,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   -1,  125,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   41,   -1,
   64,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   44,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,  331,  324,  333,  334,   -1,  336,  337,
  338,  339,  340,  341,   -1,   -1,   -1,  324,  346,  347,
  348,  349,  350,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  354,  259,   -1,   -1,   -1,   -1,
  368,  265,   -1,   -1,   -1,  373,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,  262,  263,  264,  313,
  314,  315,  316,   -1,  318,  319,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,  333,
  334,   -1,  336,  337,  338,  339,  340,  341,   -1,   -1,
   -1,  324,  346,  347,  348,  349,  350,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,   -1,   -1,
   33,   34,   -1,   36,  368,   -1,   39,   40,  324,  373,
   43,  354,   45,   -1,   -1,   -1,   41,   -1,   -1,   44,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   41,
   -1,   64,   44,   58,   59,   -1,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   39,   40,   -1,  125,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   41,   -1,   64,   44,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,
   -1,   -1,  265,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,
  303,  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
   -1,   -1,  325,   -1,   -1,   -1,  329,  330,  331,  324,
  333,  334,   -1,  336,  337,  338,  339,  340,  341,   -1,
   -1,   -1,  324,  346,  347,  348,  349,  350,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,  354,
  259,   -1,   -1,   -1,   -1,  368,  265,   -1,   -1,   -1,
  373,   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
  309,  262,  263,  264,  313,  314,  315,  316,   -1,  318,
   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,   -1,
  329,  330,  331,   -1,  333,  334,   -1,  336,  337,  338,
  339,  340,  341,   -1,   -1,   -1,  324,  346,  347,  348,
  349,  350,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,   -1,   -1,   33,   34,   -1,   36,  368,
   -1,   39,   40,  324,  373,   43,  354,   45,   -1,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,   59,   -1,   -1,   41,   -1,   64,   44,   58,   59,
   -1,   -1,   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,  125,  126,   -1,
   -1,   -1,   -1,   -1,   -1,  125,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   -1,  125,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   41,   -1,
   64,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   41,   -1,   -1,   44,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   93,   -1,   -1,
   42,   43,  125,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,  259,   -1,   -1,   -1,   -1,   -1,  265,   60,   -1,
   62,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,  125,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   94,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,  331,  324,  333,  334,   -1,  336,  337,
  338,  339,  340,  341,   -1,   -1,   -1,  324,  346,  347,
  348,  349,  350,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  354,  259,   -1,   -1,   -1,   -1,
  368,  265,   -1,   -1,   -1,  373,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,  262,  263,  264,  313,
  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,  333,
  334,   -1,  336,  337,  338,  339,  340,  341,   -1,   -1,
   -1,  324,  346,  347,  348,  349,  350,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,   -1,   -1,
   33,   34,   -1,   36,  368,   -1,   39,   40,  324,  373,
   43,  354,   45,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   59,   -1,   -1,   -1,
   -1,   64,   -1,   -1,   -1,  297,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,
   -1,   60,  265,   62,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,
  303,  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
   -1,   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,
  333,  334,   -1,  336,  337,  338,  339,  340,  341,   -1,
   -1,   -1,   -1,  346,  347,  348,  349,  350,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,   -1,
  259,   -1,   -1,   -1,   -1,  368,  265,   -1,   -1,   -1,
  373,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,  318,
   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,   -1,
  329,  330,   -1,   -1,  333,  334,   -1,  336,  337,  338,
  339,   -1,   -1,   -1,   -1,   -1,   -1,  346,  347,  348,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,   -1,   -1,   33,   34,   -1,   36,  368,
   -1,   39,   40,   -1,  373,   43,   -1,   45,   -1,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   58,   59,   -1,   -1,   -1,   -1,   64,   -1,  297,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   -1,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  259,   -1,   -1,   -1,   -1,   60,  265,   62,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,   -1,   -1,  333,  334,   -1,  336,  337,
  338,  339,   -1,   -1,   -1,   -1,   -1,   -1,  346,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,   -1,  259,   -1,   -1,   -1,   -1,
  368,  265,   -1,   -1,   -1,  373,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,  313,
  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,   -1,   -1,  333,
  334,   -1,  336,  337,  338,  339,   -1,   -1,   -1,   -1,
   -1,   -1,  346,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,   -1,   -1,
   33,   34,   -1,   36,  368,   -1,   39,   40,   -1,  373,
   43,   -1,   45,   -1,   -1,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   58,   59,   -1,   -1,   -1,
   -1,   64,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  123,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,
   -1,   -1,  265,   -1,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   94,   -1,
  303,  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
   -1,   -1,  325,   -1,   -1,   -1,  329,  330,  124,   -1,
  333,  334,   -1,  336,  337,  338,  339,   -1,   -1,   -1,
   -1,   -1,   -1,  346,  347,  348,   -1,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,   -1,
  259,   -1,   -1,   -1,   -1,  368,  265,   -1,   -1,   -1,
  373,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,  318,
   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,   -1,
  329,  330,   -1,   -1,  333,  334,   -1,  336,  337,  338,
  339,   -1,   -1,   -1,   -1,   -1,   -1,  346,  347,  348,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,   -1,   -1,   33,   34,   -1,   36,  368,
   -1,   39,   40,   -1,  373,   43,   -1,   45,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,
   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,
   33,   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,
   43,  259,   45,   -1,   -1,   -1,   -1,  265,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,  124,   -1,   -1,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   96,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,   -1,   -1,  333,  334,   -1,  336,  337,
  338,  339,   -1,  126,   -1,   -1,   -1,   -1,  346,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,  257,  258,  259,  260,  261,   -1,
  368,   -1,  265,   -1,   -1,  373,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   59,  298,   -1,   -1,   -1,   64,
  303,  304,  305,  306,  307,  262,  263,  264,   -1,   -1,
  313,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,   -1,
   -1,  126,   -1,   -1,   -1,  368,  259,   -1,   -1,   -1,
  373,   -1,  265,   -1,   -1,   -1,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   59,  298,   -1,   -1,   -1,   64,
  303,  304,  305,  306,  307,   -1,   -1,   -1,   -1,   -1,
  313,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,  361,   -1,
   -1,  126,   -1,   -1,   -1,  368,   -1,   -1,   -1,   -1,
  373,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,   39,
   40,   41,   -1,   43,  259,   45,   -1,   -1,   -1,   -1,
  265,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,   -1,   -1,  303,  304,
  305,  306,  307,   -1,   37,   38,   96,   -1,  313,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,  126,   -1,   -1,   -1,
   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,   -1,   -1,   -1,
   -1,   94,   -1,  368,  259,   -1,   -1,   -1,  373,   -1,
  265,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   38,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,  124,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   64,   -1,   -1,  303,  304,
  305,  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,  126,   -1,  259,
   -1,   -1,   -1,  368,   -1,  265,   -1,   -1,  373,   33,
   34,   94,   36,   -1,   38,   39,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,   -1,
   64,  124,   -1,  303,  304,  305,  306,  307,   -1,   -1,
   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,  347,  348,   -1,
   -1,   -1,   -1,   -1,  297,  355,  356,  357,  358,  359,
  360,  361,  126,   -1,   -1,   -1,   -1,   -1,  368,   -1,
   -1,   -1,   -1,  373,   -1,   -1,   33,   34,   -1,   36,
   -1,   38,   39,   40,   -1,   -1,   43,   -1,   45,   -1,
  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   64,   -1,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
   -1,   -1,   -1,   -1,  303,  304,  305,  306,  307,   96,
  263,  264,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,  126,
   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,  347,  348,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,  361,   -1,   -1,  259,   -1,   -1,   -1,  368,
   -1,  265,   -1,   -1,  373,   33,   34,   -1,   36,   -1,
   38,   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,   64,   -1,   -1,  303,
  304,  305,  306,  307,   -1,   -1,   -1,   -1,   -1,  313,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   -1,
   -1,   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,  361,  126,   -1,
   -1,   -1,  259,   -1,  368,   -1,   -1,   -1,  265,  373,
   94,   -1,   33,   34,   -1,   36,   -1,   38,   39,   40,
   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
  124,  298,   -1,   64,   -1,   -1,  303,  304,  305,  306,
  307,   -1,   -1,   37,   38,   -1,  313,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   96,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,  361,  126,   -1,   -1,   -1,   -1,
   94,  368,   -1,   -1,   -1,   -1,  373,   33,   34,   -1,
   36,   -1,   38,   39,   40,   -1,   -1,   43,   -1,   45,
   -1,  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   96,   -1,   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  126,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,  361,   -1,   -1,   -1,   -1,  259,   -1,
  368,   -1,   -1,   -1,  265,  373,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,   -1,
   45,   -1,   -1,   -1,   -1,   -1,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,   -1,  298,   -1,   64,
  264,   -1,  303,  304,  305,  306,  307,   -1,   -1,   -1,
   -1,   -1,  313,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  347,  348,   -1,   -1,
   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
  361,  126,   -1,  259,   -1,   -1,   -1,  368,   -1,  265,
   -1,   -1,  373,   33,   34,   -1,   36,   -1,   -1,   39,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,   -1,   64,   -1,   -1,  303,  304,  305,
  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   38,  347,  348,   41,   -1,   -1,   44,   -1,   -1,  355,
  356,  357,  358,  359,  360,  361,  126,   -1,   -1,   -1,
   58,   59,  368,   -1,   -1,   63,   -1,  373,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,   -1,   -1,
  265,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,   -1,   -1,  124,  125,  303,  304,
  305,  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   -1,
   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,  361,   -1,   -1,  259,
   -1,   -1,   -1,  368,   -1,  265,   -1,   -1,  373,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,   -1,
  124,  125,   -1,  303,  304,  305,  306,  307,  262,  263,
  264,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,  297,   -1,   -1,   -1,  347,  348,  277,
  278,  279,  280,  281,  282,  355,  356,  357,  358,  359,
  360,  361,   -1,   -1,   -1,   -1,   -1,   -1,  368,   -1,
  324,   -1,   -1,  373,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,
  354,   58,   59,   60,   61,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  372,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  324,   58,   59,   60,   61,   62,   63,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  354,   60,   -1,   62,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  372,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   94,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   40,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,   -1,   58,   59,   60,
   61,   62,   63,   -1,   -1,  262,  263,  264,   -1,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  125,   -1,   -1,  324,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   40,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  353,  354,   58,   59,
   60,   61,   62,   63,   -1,  262,  263,  264,   -1,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,  324,  297,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  353,  354,   60,   -1,
   62,  262,  263,  264,   -1,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,   -1,   -1,
   -1,   -1,   94,   -1,   -1,   -1,  297,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  324,   58,   59,   60,   61,   62,   63,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  353,  354,   -1,   60,   -1,   62,   63,   93,
   94,   -1,  262,  263,  264,   -1,  266,  267,  268,  269,
  270,  271,  272,  273,  274,  275,  276,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   94,
  124,  125,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,  124,
   -1,   -1,   -1,   -1,  324,   58,   59,   60,   61,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  353,  354,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,  297,   -1,   -1,   -1,   37,
   38,   -1,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   61,   62,   63,   -1,   -1,  262,  263,
  264,   -1,  266,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   93,   94,  262,  263,  264,
   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  287,  288,   -1,   -1,  124,  125,   -1,   -1,
  324,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  353,
  354,   58,   59,   60,   61,   62,   63,   -1,   -1,  262,
  263,  264,   -1,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  353,  354,   -1,   -1,  262,  263,  264,   -1,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  324,   58,   59,   60,
   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  353,  354,   -1,   -1,   -1,
   -1,   -1,   93,   94,   -1,  262,  263,  264,   -1,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,  324,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   93,
   94,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,  262,  263,  264,   -1,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   37,
   38,   -1,   40,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,
   58,   59,   60,  324,   62,   63,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  354,   -1,   93,   94,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,   -1,  124,  125,   -1,   -1,
   -1,   -1,   -1,  297,   -1,  262,  263,  264,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,   -1,   38,   -1,   -1,   41,   -1,
  354,   44,   -1,   -1,   58,   59,   60,  324,   62,   63,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  353,  354,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,  262,  263,  264,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,  277,  278,  279,  280,  281,  282,   37,   38,  297,
   40,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,  324,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   94,  353,  354,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,  124,  125,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   58,   59,   60,   -1,   62,   63,  262,
  263,  264,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   93,   94,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  324,   58,   59,   60,   -1,   62,   63,   -1,   -1,  124,
  125,  324,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
  354,   -1,   -1,   -1,   -1,   -1,   93,   94,   58,   59,
   60,  354,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   93,   94,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   58,   59,   60,  354,   62,   63,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  297,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,
  297,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  324,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,
   -1,   58,   59,   60,  324,   62,   63,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,  354,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   93,   94,   -1,   -1,  124,  125,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,  324,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,
   -1,   60,   -1,   62,   63,   38,   93,   94,   41,   -1,
   43,   44,   45,   46,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   94,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   93,   94,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   38,   -1,  324,   41,   -1,
   43,   44,   45,   46,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,  324,   -1,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,  354,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  124,  125,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,  324,  297,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   38,   -1,   -1,   41,
   -1,   43,   44,   45,   46,   -1,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   38,   -1,   -1,   41,   -1,   43,   44,   45,
   46,  324,   -1,   38,   -1,  354,   41,   -1,   43,   44,
   45,   46,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   93,   94,   58,   59,   60,   -1,   62,   63,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,  262,
  263,  264,  124,  125,   -1,   -1,   -1,   -1,   93,   94,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,  124,  125,
   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,  124,
  125,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,  324,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,  324,   -1,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,  324,   -1,
   63,   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  354,   -1,
   93,   94,   -1,   -1,   -1,   -1,  262,  263,  264,  354,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  124,  125,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,  324,   62,   63,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,   37,
   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,
   94,   -1,   60,   -1,   62,   63,   37,   38,  354,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
  124,   62,   63,   37,   38,   -1,   94,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,   94,   -1,   -1,  124,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,  124,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   94,   -1,   -1,  262,  263,
  264,  354,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,  287,  288,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  297,  262,  263,  264,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,  262,  263,  264,   -1,   -1,   -1,  124,   -1,  297,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,  297,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,
   -1,   62,   63,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  262,  263,  264,   60,   -1,   62,   63,
   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,
   94,   -1,   -1,  124,   -1,  262,  263,  264,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   46,   47,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  124,   60,   -1,   62,   63,   -1,   -1,   37,   38,   -1,
  297,   41,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   94,   37,   38,   -1,   -1,
   41,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,
   -1,   62,   63,   -1,   94,  124,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   38,   -1,   -1,   41,   42,   43,   -1,   45,   46,   47,
   -1,   -1,   -1,   94,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   94,   -1,  262,  263,
  264,   -1,   37,   38,   -1,   -1,  297,   42,   43,   -1,
   45,   46,   47,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   59,   60,  124,   62,   63,   -1,
   -1,   37,   38,  297,   -1,   41,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   94,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   94,  124,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,  297,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,  124,   -1,
   -1,  262,  263,  264,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   37,
   38,   -1,   -1,   -1,   42,   43,  297,   45,   46,   47,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,  297,
   42,   43,   -1,   45,   46,   47,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   94,   -1,   -1,   -1,  262,  263,  264,   -1,
   37,   38,  297,   -1,   -1,   42,   43,   -1,   45,   46,
   47,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,  124,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,  297,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   46,   47,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  125,   60,   -1,   62,   63,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,  297,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   94,
  262,  263,  264,   -1,   -1,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  124,
  125,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  297,  262,  263,  264,   -1,   94,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  124,  297,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  297,   -1,   94,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   -1,   -1,  297,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   94,   -1,   -1,
   -1,   -1,  262,  263,  264,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   94,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   60,   -1,   62,   63,   37,   38,  124,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   -1,   -1,   94,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   94,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,  297,   37,   38,   -1,   -1,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  297,
  );

  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyFinal'] = 1;
//t$GLOBALS['_PHP_PARSER_STRUCTURE']['yyRule'] = array(
//t   "\$accept :  top_statement_list ",
//t    "top_statement_list :  top_statement_list   top_statement ",
//t    "top_statement_list :",
//t    "top_statement :  statement ",
//t    "top_statement :  function_declaration_statement ",
//t    "top_statement :  class_declaration_statement ",
//t    "inner_statement_list :  inner_statement_list   inner_statement ",
//t    "inner_statement_list :",
//t    "inner_statement :  statement ",
//t    "inner_statement :  function_declaration_statement ",
//t    "inner_statement :  class_declaration_statement ",
//t    "statement :  unticked_statement ",
//t    "unticked_statement : '{'  inner_statement_list  '}'",
//t    "unticked_statement :  T_IF  '('  expr  ')'  statement   elseif_list   else_single ",
//t    "unticked_statement :  T_IF  '('  expr  ')' ':'  inner_statement_list   new_elseif_list   new_else_single   T_ENDIF  ';'",
//t    "unticked_statement :  T_WHILE  '('  expr  ')'  while_statement ",
//t    "unticked_statement :  T_DO   statement   T_WHILE  '('  expr  ')' ';'",
//t    "unticked_statement :  T_FOR  '('  for_expr  ';'  for_expr  ';'  for_expr  ')'  for_statement ",
//t    "unticked_statement :  T_SWITCH  '('  expr  ')'  switch_case_list ",
//t    "unticked_statement :  T_BREAK  ';'",
//t    "unticked_statement :  T_BREAK   expr  ';'",
//t    "unticked_statement :  T_CONTINUE  ';'",
//t    "unticked_statement :  T_CONTINUE   expr  ';'",
//t    "unticked_statement :  T_RETURN  ';'",
//t    "unticked_statement :  T_RETURN   expr_without_variable  ';'",
//t    "unticked_statement :  T_RETURN   variable  ';'",
//t    "unticked_statement :  T_GLOBAL   global_var_list  ';'",
//t    "unticked_statement :  T_STATIC   static_var_list  ';'",
//t    "unticked_statement :  T_ECHO   echo_expr_list  ';'",
//t    "unticked_statement :  T_INLINE_HTML ",
//t    "unticked_statement :  expr  ';'",
//t    "unticked_statement :  T_USE   use_filename  ';'",
//t    "unticked_statement :  T_UNSET  '('  unset_variables  ')' ';'",
//t    "unticked_statement :  T_FOREACH  '('  variable   T_AS   foreach_variable   foreach_optional_arg  ')'  foreach_statement ",
//t    "unticked_statement :  T_FOREACH  '('  expr_without_variable   T_AS   w_variable   foreach_optional_arg  ')'  foreach_statement ",
//t    "unticked_statement :  T_DECLARE  '('  declare_list  ')'  declare_statement ",
//t    "unticked_statement : ';'",
//t    "unticked_statement :  T_TRY  '{'  inner_statement_list  '}'  T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'  additional_catches ",
//t   "\$\$1 :",
//t    "unticked_statement :  T_THROW \$\$1  expr  ';'",
//t    "foreach_variable :  w_variable ",
//t    "foreach_variable : '&'  w_variable ",
//t    "additional_catches :  non_empty_additional_catches ",
//t    "additional_catches :",
//t    "non_empty_additional_catches :  non_empty_additional_catches   T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'",
//t    "non_empty_additional_catches :  T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'",
//t    "unset_variables :  unset_variable ",
//t    "unset_variables :  unset_variables  ','  unset_variable ",
//t    "unset_variable :  variable ",
//t    "use_filename :  T_CONSTANT_ENCAPSED_STRING ",
//t    "use_filename : '('  T_CONSTANT_ENCAPSED_STRING  ')'",
//t    "function_declaration_statement :  unticked_function_declaration_statement ",
//t    "class_declaration_statement :  unticked_class_declaration_statement ",
//t    "is_reference :",
//t    "is_reference : '&'",
//t   "\$\$2 :",
//t    "unticked_function_declaration_statement :  T_FUNCTION   is_reference   T_STRING \$\$2 '('  parameter_list  ')' '{'  inner_statement_list  '}'",
//t   "\$\$3 :",
//t   "\$\$4 :",
//t    "unticked_class_declaration_statement :  class_entry_type \$\$3  T_STRING   extends_from \$\$4  implements_list  '{'  class_statement_list  '}'",
//t   "\$\$5 :",
//t   "\$\$6 :",
//t    "unticked_class_declaration_statement :  interface_entry \$\$5  T_STRING   interface_extends_list \$\$6 '{'  class_statement_list  '}'",
//t    "class_entry_type :  T_CLASS ",
//t    "class_entry_type :  T_ABSTRACT   T_CLASS ",
//t    "class_entry_type :  T_FINAL   T_CLASS ",
//t    "extends_from :",
//t    "extends_from :  T_EXTENDS   fully_qualified_class_name ",
//t    "interface_entry :  T_INTERFACE ",
//t    "interface_extends_list :",
//t    "interface_extends_list :  T_EXTENDS   interface_list ",
//t    "implements_list :",
//t    "implements_list :  T_IMPLEMENTS   interface_list ",
//t    "interface_list :  fully_qualified_class_name ",
//t    "interface_list :  interface_list  ','  fully_qualified_class_name ",
//t    "foreach_optional_arg :",
//t    "foreach_optional_arg :  T_DOUBLE_ARROW   w_variable ",
//t    "for_statement :  statement ",
//t    "for_statement : ':'  inner_statement_list   T_ENDFOR  ';'",
//t    "foreach_statement :  statement ",
//t    "foreach_statement : ':'  inner_statement_list   T_ENDFOREACH  ';'",
//t    "declare_statement :  statement ",
//t    "declare_statement : ':'  inner_statement_list   T_ENDDECLARE  ';'",
//t    "declare_list :  T_STRING  '='  static_scalar ",
//t    "declare_list :  declare_list  ','  T_STRING  '='  static_scalar ",
//t    "switch_case_list : '{'  case_list  '}'",
//t    "switch_case_list : '{' ';'  case_list  '}'",
//t    "switch_case_list : ':'  case_list   T_ENDSWITCH  ';'",
//t    "switch_case_list : ':' ';'  case_list   T_ENDSWITCH  ';'",
//t    "case_list :",
//t    "case_list :  case_list   T_CASE   expr   case_separator   inner_statement_list ",
//t    "case_list :  case_list   T_DEFAULT   case_separator   inner_statement_list ",
//t    "case_separator : ':'",
//t    "case_separator : ';'",
//t    "while_statement :  statement ",
//t    "while_statement : ':'  inner_statement_list   T_ENDWHILE  ';'",
//t    "elseif_list :",
//t    "elseif_list :  elseif_list   T_ELSEIF  '('  expr  ')'  statement ",
//t    "new_elseif_list :",
//t    "new_elseif_list :  new_elseif_list   T_ELSEIF  '('  expr  ')' ':'  inner_statement_list ",
//t    "else_single :",
//t    "else_single :  T_ELSE   statement ",
//t    "new_else_single :",
//t    "new_else_single :  T_ELSE  ':'  inner_statement_list ",
//t    "parameter_list :  non_empty_parameter_list ",
//t    "parameter_list :",
//t    "non_empty_parameter_list :  optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  optional_class_type  '&'  T_VARIABLE ",
//t    "non_empty_parameter_list :  optional_class_type  '&'  T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  optional_class_type   T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type  '&'  T_VARIABLE ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type  '&'  T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type   T_VARIABLE  '='  static_scalar ",
//t    "optional_class_type :",
//t    "optional_class_type :  T_STRING ",
//t    "function_call_parameter_list :  non_empty_function_call_parameter_list ",
//t    "function_call_parameter_list :",
//t    "non_empty_function_call_parameter_list :  expr_without_variable ",
//t    "non_empty_function_call_parameter_list :  variable ",
//t    "non_empty_function_call_parameter_list : '&'  w_variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ','  expr_without_variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ','  variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ',' '&'  w_variable ",
//t    "global_var_list :  global_var_list  ','  global_var ",
//t    "global_var_list :  global_var ",
//t    "global_var :  T_VARIABLE ",
//t    "global_var : '\$'  r_variable ",
//t    "global_var : '\$' '{'  expr  '}'",
//t    "static_var_list :  static_var_list  ','  T_VARIABLE ",
//t    "static_var_list :  static_var_list  ','  T_VARIABLE  '='  static_scalar ",
//t    "static_var_list :  T_VARIABLE ",
//t    "static_var_list :  T_VARIABLE  '='  static_scalar ",
//t    "class_statement_list :  class_statement_list   class_statement ",
//t    "class_statement_list :",
//t   "\$\$7 :",
//t    "class_statement :  variable_modifiers   class_variable_declaration \$\$7 ';'",
//t    "class_statement :  class_constant_declaration  ';'",
//t   "\$\$8 :",
//t   "\$\$9 :",
//t    "class_statement :  method_modifiers   T_FUNCTION \$\$8  is_reference   T_STRING \$\$9 '('  parameter_list  ')'  method_body ",
//t    "method_body : ';'",
//t    "method_body : '{'  inner_statement_list  '}'",
//t    "variable_modifiers :  non_empty_member_modifiers ",
//t    "variable_modifiers :  T_VAR ",
//t    "method_modifiers :",
//t    "method_modifiers :  non_empty_member_modifiers ",
//t    "non_empty_member_modifiers :  member_modifier ",
//t    "non_empty_member_modifiers :  non_empty_member_modifiers   member_modifier ",
//t    "member_modifier :  T_PUBLIC ",
//t    "member_modifier :  T_PROTECTED ",
//t    "member_modifier :  T_PRIVATE ",
//t    "member_modifier :  T_STATIC ",
//t    "member_modifier :  T_ABSTRACT ",
//t    "member_modifier :  T_FINAL ",
//t    "class_variable_declaration :  class_variable_declaration  ','  T_VARIABLE ",
//t   "\$\$10 :",
//t    "class_variable_declaration :  class_variable_declaration  ','  T_VARIABLE \$\$1 '='  static_scalar ",
//t    "class_variable_declaration :  T_VARIABLE ",
//t   "\$\$11 :",
//t    "class_variable_declaration :  T_VARIABLE \$\$1 '='  static_scalar ",
//t   "\$\$12 :",
//t    "class_constant_declaration :  class_constant_declaration  ','  T_STRING \$\$1 '='  static_scalar ",
//t   "\$\$13 :",
//t    "class_constant_declaration :\$\$1  T_CONST   T_STRING  '='  static_scalar ",
//t    "echo_expr_list :  echo_expr_list  ','  expr ",
//t    "echo_expr_list :  expr ",
//t    "for_expr :",
//t    "for_expr :  non_empty_for_expr ",
//t    "non_empty_for_expr :  non_empty_for_expr  ','  expr ",
//t    "non_empty_for_expr :  expr ",
//t    "expr_without_variable :  T_LIST  '('  assignment_list  ')' '='  expr ",
//t   "\$\$14 :",
//t    "expr_without_variable :  variable  '='\$\$1  expr ",
//t   "\$\$15 :",
//t    "expr_without_variable :  variable  '=' '&'\$\$1  variable ",
//t   "\$\$16 :",
//t    "expr_without_variable :  variable  '=' '&'  T_NEW \$\$1  class_name_reference   ctor_arguments ",
//t    "expr_without_variable :  T_NEW   class_name_reference   ctor_arguments ",
//t    "expr_without_variable :  T_CLONE   expr ",
//t    "expr_without_variable :  variable   T_PLUS_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MINUS_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MUL_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_DIV_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_CONCAT_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MOD_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_AND_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_OR_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_XOR_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_SL_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_SR_EQUAL   expr ",
//t    "expr_without_variable :  rw_variable   T_INC ",
//t    "expr_without_variable :  T_INC   rw_variable ",
//t    "expr_without_variable :  rw_variable   T_DEC ",
//t    "expr_without_variable :  T_DEC   rw_variable ",
//t    "expr_without_variable :  expr   T_BOOLEAN_OR   expr ",
//t    "expr_without_variable :  expr   T_BOOLEAN_AND   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_OR   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_AND   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_XOR   expr ",
//t    "expr_without_variable :  expr  '|'  expr ",
//t    "expr_without_variable :  expr  '&'  expr ",
//t    "expr_without_variable :  expr  '^'  expr ",
//t    "expr_without_variable :  expr  '.'  expr ",
//t    "expr_without_variable :  expr  '+'  expr ",
//t    "expr_without_variable :  expr  '-'  expr ",
//t    "expr_without_variable :  expr  '*'  expr ",
//t    "expr_without_variable :  expr  '/'  expr ",
//t    "expr_without_variable :  expr  '%'  expr ",
//t    "expr_without_variable :  expr   T_SL   expr ",
//t    "expr_without_variable :  expr   T_SR   expr ",
//t    "expr_without_variable : '+'  expr ",
//t    "expr_without_variable : '-'  expr ",
//t    "expr_without_variable : '!'  expr ",
//t    "expr_without_variable : '~'  expr ",
//t    "expr_without_variable :  expr   T_IS_IDENTICAL   expr ",
//t    "expr_without_variable :  expr   T_IS_NOT_IDENTICAL   expr ",
//t    "expr_without_variable :  expr   T_IS_EQUAL   expr ",
//t    "expr_without_variable :  expr   T_IS_NOT_EQUAL   expr ",
//t    "expr_without_variable :  expr  '<'  expr ",
//t    "expr_without_variable :  expr   T_IS_SMALLER_OR_EQUAL   expr ",
//t    "expr_without_variable :  expr  '>'  expr ",
//t    "expr_without_variable :  expr   T_IS_GREATER_OR_EQUAL   expr ",
//t    "expr_without_variable :  expr   T_INSTANCEOF   class_name_reference ",
//t    "expr_without_variable : '('  expr  ')'",
//t    "expr_without_variable :  expr  '?'  expr  ':'  expr ",
//t    "expr_without_variable :  internal_functions_in_yacc ",
//t    "expr_without_variable :  T_INT_CAST   expr ",
//t    "expr_without_variable :  T_DOUBLE_CAST   expr ",
//t    "expr_without_variable :  T_STRING_CAST   expr ",
//t    "expr_without_variable :  T_ARRAY_CAST   expr ",
//t    "expr_without_variable :  T_OBJECT_CAST   expr ",
//t    "expr_without_variable :  T_BOOL_CAST   expr ",
//t    "expr_without_variable :  T_UNSET_CAST   expr ",
//t    "expr_without_variable :  T_EXIT   exit_expr ",
//t    "expr_without_variable : '@'  expr ",
//t    "expr_without_variable :  scalar ",
//t    "expr_without_variable :  T_ARRAY  '('  array_pair_list  ')'",
//t    "expr_without_variable : '`'  encaps_list  '`'",
//t    "expr_without_variable :  T_PRINT   expr ",
//t   "\$\$17 :",
//t    "function_call :  T_STRING \$\$1 '('  function_call_parameter_list  ')'",
//t    "function_call :  class_constant  '('  function_call_parameter_list  ')'",
//t   "\$\$18 :",
//t    "function_call :  static_member  '('\$\$1  function_call_parameter_list  ')'",
//t    "function_call :  variable_without_objects  '('  function_call_parameter_list  ')'",
//t    "fully_qualified_class_name :  T_STRING ",
//t    "class_name_reference :  T_STRING ",
//t    "class_name_reference :  dynamic_class_name_reference ",
//t    "dynamic_class_name_reference :  base_variable   T_OBJECT_OPERATOR   object_property   dynamic_class_name_variable_properties ",
//t    "dynamic_class_name_reference :  base_variable ",
//t    "dynamic_class_name_variable_properties :  dynamic_class_name_variable_properties   dynamic_class_name_variable_property ",
//t    "dynamic_class_name_variable_properties :",
//t    "dynamic_class_name_variable_property :  T_OBJECT_OPERATOR   object_property ",
//t    "exit_expr :",
//t    "exit_expr : '(' ')'",
//t    "exit_expr : '('  expr  ')'",
//t    "ctor_arguments :",
//t    "ctor_arguments : '('  function_call_parameter_list  ')'",
//t    "common_scalar :  T_LNUMBER ",
//t    "common_scalar :  T_DNUMBER ",
//t    "common_scalar :  T_CONSTANT_ENCAPSED_STRING ",
//t    "common_scalar :  T_LINE ",
//t    "common_scalar :  T_FILE ",
//t    "common_scalar :  T_CLASS_C ",
//t    "common_scalar :  T_FUNC_C ",
//t    "common_scalar :  T_METHOD_C ",
//t    "static_scalar :  common_scalar ",
//t    "static_scalar :  T_STRING ",
//t    "static_scalar : '+'  static_scalar ",
//t    "static_scalar : '-'  static_scalar ",
//t    "static_scalar :  T_ARRAY  '('  static_array_pair_list  ')'",
//t    "static_scalar :  static_class_constant ",
//t    "static_class_constant :  T_STRING   T_PAAMAYIM_NEKUDOTAYIM   T_STRING ",
//t    "scalar :  T_STRING ",
//t    "scalar :  T_STRING_VARNAME ",
//t    "scalar :  class_constant ",
//t    "scalar :  common_scalar ",
//t    "scalar : '\"'  encaps_list  '\"'",
//t    "scalar : '\\''  encaps_list  '\\''",
//t    "scalar :  T_START_HEREDOC   encaps_list   T_END_HEREDOC ",
//t    "static_array_pair_list :",
//t    "static_array_pair_list :  non_empty_static_array_pair_list   possible_comma ",
//t    "possible_comma :",
//t    "possible_comma : ','",
//t    "non_empty_static_array_pair_list :  non_empty_static_array_pair_list  ','  static_scalar   T_DOUBLE_ARROW   static_scalar ",
//t    "non_empty_static_array_pair_list :  non_empty_static_array_pair_list  ','  static_scalar ",
//t    "non_empty_static_array_pair_list :  static_scalar   T_DOUBLE_ARROW   static_scalar ",
//t    "non_empty_static_array_pair_list :  static_scalar ",
//t    "expr :  r_variable ",
//t    "expr :  expr_without_variable ",
//t    "r_variable :  variable ",
//t    "w_variable :  variable ",
//t    "rw_variable :  variable ",
//t    "variable :  base_variable_with_function_calls   T_OBJECT_OPERATOR   object_property   method_or_not   variable_properties ",
//t    "variable :  base_variable_with_function_calls ",
//t    "variable_properties :  variable_properties   variable_property ",
//t    "variable_properties :",
//t    "variable_property :  T_OBJECT_OPERATOR   object_property   method_or_not ",
//t    "method_or_not : '('  function_call_parameter_list  ')'",
//t    "method_or_not :",
//t    "variable_without_objects :  reference_variable ",
//t    "variable_without_objects :  simple_indirect_reference   reference_variable ",
//t    "static_member :  fully_qualified_class_name   T_PAAMAYIM_NEKUDOTAYIM   variable_without_objects ",
//t    "base_variable_with_function_calls :  base_variable ",
//t    "base_variable_with_function_calls :  function_call ",
//t    "base_variable :  reference_variable ",
//t    "base_variable :  simple_indirect_reference   reference_variable ",
//t    "base_variable :  static_member ",
//t    "reference_variable :  reference_variable  '['  dim_offset  ']'",
//t    "reference_variable :  reference_variable  '{'  expr  '}'",
//t    "reference_variable :  compound_variable ",
//t    "compound_variable :  T_VARIABLE ",
//t    "compound_variable : '\$' '{'  expr  '}'",
//t    "dim_offset :",
//t    "dim_offset :  expr ",
//t    "object_property :  object_dim_list ",
//t    "object_property :  variable_without_objects ",
//t    "object_dim_list :  object_dim_list  '['  dim_offset  ']'",
//t    "object_dim_list :  object_dim_list  '{'  expr  '}'",
//t    "object_dim_list :  variable_name ",
//t    "variable_name :  T_STRING ",
//t    "variable_name : '{'  expr  '}'",
//t    "simple_indirect_reference : '\$'",
//t    "simple_indirect_reference :  simple_indirect_reference  '\$'",
//t    "assignment_list :  assignment_list  ','  assignment_list_element ",
//t    "assignment_list :  assignment_list_element ",
//t    "assignment_list_element :  variable ",
//t    "assignment_list_element :  T_LIST  '('  assignment_list  ')'",
//t    "assignment_list_element :",
//t    "array_pair_list :",
//t    "array_pair_list :  non_empty_array_pair_list   possible_comma ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr   T_DOUBLE_ARROW   expr ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr ",
//t    "non_empty_array_pair_list :  expr   T_DOUBLE_ARROW   expr ",
//t    "non_empty_array_pair_list :  expr ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr   T_DOUBLE_ARROW  '&'  w_variable ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ',' '&'  w_variable ",
//t    "non_empty_array_pair_list :  expr   T_DOUBLE_ARROW  '&'  w_variable ",
//t    "non_empty_array_pair_list : '&'  w_variable ",
//t    "encaps_list :  encaps_list   encaps_var ",
//t    "encaps_list :  encaps_list   T_STRING ",
//t    "encaps_list :  encaps_list   T_NUM_STRING ",
//t    "encaps_list :  encaps_list   T_ENCAPSED_AND_WHITESPACE ",
//t    "encaps_list :  encaps_list   T_CHARACTER ",
//t    "encaps_list :  encaps_list   T_BAD_CHARACTER ",
//t    "encaps_list :  encaps_list  '['",
//t    "encaps_list :  encaps_list  ']'",
//t    "encaps_list :  encaps_list  '{'",
//t    "encaps_list :  encaps_list  '}'",
//t    "encaps_list :  encaps_list   T_OBJECT_OPERATOR ",
//t    "encaps_list :",
//t    "encaps_var :  T_VARIABLE ",
//t    "encaps_var :  T_VARIABLE  '['  encaps_var_offset  ']'",
//t    "encaps_var :  T_VARIABLE   T_OBJECT_OPERATOR   T_STRING ",
//t    "encaps_var :  T_DOLLAR_OPEN_CURLY_BRACES   expr  '}'",
//t    "encaps_var :  T_DOLLAR_OPEN_CURLY_BRACES   T_STRING_VARNAME  '['  expr  ']' '}'",
//t    "encaps_var :  T_CURLY_OPEN   variable  '}'",
//t    "encaps_var_offset :  T_STRING ",
//t    "encaps_var_offset :  T_NUM_STRING ",
//t    "encaps_var_offset :  T_VARIABLE ",
//t    "internal_functions_in_yacc :  T_ISSET  '('  isset_variables  ')'",
//t    "internal_functions_in_yacc :  T_EMPTY  '('  variable  ')'",
//t   "\$\$19 :",
//t    "internal_functions_in_yacc :\$\$1  T_INCLUDE   expr ",
//t   "\$\$20 :",
//t    "internal_functions_in_yacc :\$\$2  T_INCLUDE_ONCE   expr ",
//t    "internal_functions_in_yacc :  T_EVAL  '('  expr  ')'",
//t   "\$\$21 :",
//t    "internal_functions_in_yacc :\$\$2  T_REQUIRE   expr ",
//t   "\$\$22 :",
//t    "internal_functions_in_yacc :\$\$2  T_REQUIRE_ONCE   expr ",
//t    "isset_variables :  variable ",
//t    "isset_variables :  isset_variables  ','  variable ",
//t    "class_constant :  fully_qualified_class_name   T_PAAMAYIM_NEKUDOTAYIM   T_STRING ",
//t  );
  $GLOBALS['_PHP_PARSER_STRUCTURE']['yyName'] =array(    
    "end-of-file",null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,"'!'","'\"'",null,"'\$'","'%'",
    "'&'","'\\''","'('","')'","'*'","'+'","','","'-'","'.'","'/'",null,
    null,null,null,null,null,null,null,null,null,"':'","';'","'<'","'='",
    "'>'","'?'","'@'",null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,"'['",null,"']'","'^'",null,"'`'",null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,"'{'","'|'","'}'","'~'",null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,"T_INCLUDE","T_INCLUDE_ONCE","T_EVAL","T_REQUIRE",
    "T_REQUIRE_ONCE","T_LOGICAL_OR","T_LOGICAL_XOR","T_LOGICAL_AND",
    "T_PRINT","T_PLUS_EQUAL","T_MINUS_EQUAL","T_MUL_EQUAL","T_DIV_EQUAL",
    "T_CONCAT_EQUAL","T_MOD_EQUAL","T_AND_EQUAL","T_OR_EQUAL",
    "T_XOR_EQUAL","T_SL_EQUAL","T_SR_EQUAL","T_BOOLEAN_OR",
    "T_BOOLEAN_AND","T_IS_EQUAL","T_IS_NOT_EQUAL","T_IS_IDENTICAL",
    "T_IS_NOT_IDENTICAL","T_IS_SMALLER_OR_EQUAL","T_IS_GREATER_OR_EQUAL",
    "T_SL","T_SR","T_INC","T_DEC","T_INT_CAST","T_DOUBLE_CAST",
    "T_STRING_CAST","T_ARRAY_CAST","T_OBJECT_CAST","T_BOOL_CAST",
    "T_UNSET_CAST","T_NEW","T_INSTANCEOF","T_EXIT","T_IF","T_ELSEIF",
    "T_ELSE","T_ENDIF","T_LNUMBER","T_DNUMBER","T_STRING",
    "T_STRING_VARNAME","T_VARIABLE","T_NUM_STRING","T_INLINE_HTML",
    "T_CHARACTER","T_BAD_CHARACTER","T_ENCAPSED_AND_WHITESPACE",
    "T_CONSTANT_ENCAPSED_STRING","T_ECHO","T_DO","T_WHILE","T_ENDWHILE",
    "T_FOR","T_ENDFOR","T_FOREACH","T_ENDFOREACH","T_DECLARE",
    "T_ENDDECLARE","T_AS","T_SWITCH","T_ENDSWITCH","T_CASE","T_DEFAULT",
    "T_BREAK","T_CONTINUE","T_FUNCTION","T_CONST","T_RETURN","T_TRY",
    "T_CATCH","T_THROW","T_USE","T_GLOBAL","T_STATIC","T_ABSTRACT",
    "T_FINAL","T_PRIVATE","T_PROTECTED","T_PUBLIC","T_VAR","T_UNSET",
    "T_ISSET","T_EMPTY","T_CLASS","T_INTERFACE","T_EXTENDS",
    "T_IMPLEMENTS","T_OBJECT_OPERATOR","T_DOUBLE_ARROW","T_LIST",
    "T_ARRAY","T_CLASS_C","T_METHOD_C","T_FUNC_C","T_LINE","T_FILE",
    "T_COMMENT","T_DOC_COMMENT","T_OPEN_TAG","T_OPEN_TAG_WITH_ECHO",
    "T_CLOSE_TAG","T_WHITESPACE","T_START_HEREDOC","T_END_HEREDOC",
    "T_DOLLAR_OPEN_CURLY_BRACES","T_CURLY_OPEN","T_PAAMAYIM_NEKUDOTAYIM",
    "T_CLONE",
  );
 ?>
