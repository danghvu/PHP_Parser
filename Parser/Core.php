<?php
 // created by jay 0.8 (c) 1998 Axel.Schreiner@informatik.uni-osnabrueck.de
 // modified by alan@akbkhome.com to try to generate php!
 // modified by cellog@users.sourceforge.net to fit PEAR CS
 // %token constants

 require_once 'PEAR.php';

   define('TOKEN_yyErrorCode', 256);

 // Class now

					// line 1 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"

?><?php
/*
   +----------------------------------------------------------------------+
   | Based on the Zend Engine                                             |
   +----------------------------------------------------------------------+
   | Copyright (c) 1998-2002 Zend Technologies Ltd. (http://www.zend.com) |
   +----------------------------------------------------------------------+
   | This source file is subject to version 2.00 of the Zend license,     |
   | that is bundled with this package in the file LICENSE, and is        | 
   | available through the world-wide-web at the following url:           |
   | http://www.zend.com/license/2_00.txt.                                |
   | If you did not receive a copy of the Zend license and are unable to  |
   | obtain it through the world-wide-web, please send a note to          |
   | license@zend.com so we can mail you a copy immediately.              |
   +----------------------------------------------------------------------+
   | Authors: Andi Gutmans <andi@zend.com>                                |
   |          Zeev Suraski <zeev@zend.com>                                |
   | native PHP version:  Greg Beaver <cellog@users.sourceforge.net>      |
   | native PHP version:  Alan Knowles <alan@akbkhome.com>                |
   +----------------------------------------------------------------------+
*/


//
// This does nothing on it's own - refer to PHP_Parser
// It's purely the code for the Parser, generated by phpJay
//
 

class PHP_Parser_Core {

    /**
     * Options, used to control how the parser collects
     * and distributes the data it finds.
     *
     * Currently, options are grouped into two categories:
     * - containers for data
     * - publishing of data
     *
     * Default action is to return arrays of parsed data
     * for use by other applications.  The first set of
     * options, container options, provide a means to
     * tell the parser to encapsulate data in objects
     * instead of in arrays.  The option tells the parser which
     * class to instantiate for each documentable element.  The
     * default value of false will prompt the usage of arrays
     * instead.
     *
     * The second set of options provide for intermediary
     * publishing of data while parsing, to allow other
     * classes to hook into functionality if they desire
     * @var array
     */
    private $_options = array();
    
    /**
     * @var boolean
     */
    private $_get_class = false;
    
    /**
     * Set up options for parsing
     *
     * @see $_options
     */
    function __construct($options = array())
    {
        $this->_options['classContainer'] =
        $this->_options['includeContainer'] =
        $this->_options['functionContainer'] =
        $this->_options['globalContainer'] =
        $this->_options['varContainer'] =
        $this->_options['constContainer'] =
        $this->_options['classConstContainer'] =
        $this->_options['methodContainer'] =
        $this->_options['publisher'] =
        $this->_options['publishMethod'] =
        $this->_options['publishMessageClass'] =
        $this->_options['publishClasses'] =
        $this->_options['publishClassMessage'] =
        $this->_options['publishIncludes'] =
        $this->_options['publishIncludeMessage'] =
        $this->_options['publishFunctions'] =
        $this->_options['publishFunctionMessage'] =
        $this->_options['publishGlobals'] =
        $this->_options['publishGlobalMessage'] =
        $this->_options['publishVars'] =
        $this->_options['publishVarMessage'] =
        $this->_options['publishClassConsts'] =
        $this->_options['publishClassConstMessage'] =
        $this->_options['publishMethods'] =
        $this->_options['publishMethodMessage'] =
        $this->_options['publishConsts'] =
        $this->_options['publishConstMessage'] =
        false;
        $this->_options = array_merge($this->_options, $options);
        if (!class_exists($this->_options['classContainer'])) {
            $this->_options['classContainer'] = false;
        }
        if (!class_exists($this->_options['includeContainer'])) {
            $this->_options['includeContainer'] = false;
        }
        if (!class_exists($this->_options['functionContainer'])) {
            $this->_options['functionContainer'] = false;
        }
        if (!class_exists($this->_options['globalContainer'])) {
            $this->_options['globalContainer'] = false;
        }
        if (!class_exists($this->_options['varContainer'])) {
            $this->_options['varContainer'] = false;
        }
        if (!class_exists($this->_options['constContainer'])) {
            $this->_options['constContainer'] = false;
        }
        if (!class_exists($this->_options['classConstContainer'])) {
            $this->_options['classConstContainer'] = false;
        }
        if (!class_exists($this->_options['methodContainer'])) {
            $this->_options['methodContainer'] = false;
        }
        if (!is_object($this->_options['publisher'])) {
            $this->_options['publisher'] = false;
        } else {
            if (!method_exists($this->_options['publisher'], $this->_options['publishMethod'])) {
                $this->_options['publishMethod'] = false;
                if (!method_exists($this->_options['publisher'], 'publish')) {
                    $this->_options['publisher'] = false;
                } else {
                    $this->_options['publishMethod'] = 'publish';
                }
            } else {
                if (!class_exists($this->_options['publishMessageClass'])) {
                    $this->_options['publishMessageClass'] = false;
                }
            }
        }
    }

    /**
     * array of classes => array(methods => ...., vars => ....)
     *
     * @var array
     * @access public 
     */

    public $classes = array();
    /**
     * array of includes
     *
     * @var array
     * @access public 
     */
    public $includes = array();

    /**
     * array of functions
     *
     * @var array
     * @access public 
     */
    public $functions = array();

    /**
     * array of global variables
     *
     * @var array
     * @access public 
     */
    public $globals = array();

    /**
     * array of super-global variables used in
     * non-procedural global code (page-level parameters)
     *
     * @var array
     * @access public 
     */
    public $filesuperglobals = array();
    
    /**
     * File Summary documentation (page-level DocBlock in phpDocumentor)
     * @var string
     * @access public
     */
    public $documentation;

    /**
     * array of global constants
     *
     * @var array
     * @access public 
     */
    public $constants = array();

    /**
     * global variable name of parser arrays
     * should match the build options  
     *
     * @var string
     * @access public 
     */
    private $yyGlobalName = '_PHP_PARSER';

    /**
     * Global Variable helper routine
     * @param string global variable name
     */
    private function _initGlobal($name)
    {
        if ($this->yyLex->globalSearch($name)) {
            $lc = $this->yyLex->getLastComment();
            if ($this->_options['globalContainer']) {
                $container = $this->_options['globalContainer'];
                $global = new $container;
                $global->setStartLine($this->yyLex->line);
                $global->setName($name);
                $global->setDocumentation($lc[0]);
            } else {
                $global = array('name' => $name,
                                'documentation' => $lc[0],
                                'line' => $this->yyLex->line);
            }
            $this->globals[$name] = $global;
        }
    }

    /**
     * Global Variable helper routine
     * @param string global variable name
     * @param string global variable initial value
     */
    private function _processGlobal($name, $value)
    {
        if (isset($this->globals[$name])) {
            // found a global variable we are documenting
            if ($this->_options['globalContainer']) {
                $this->globals[$name]->setValue($value);
            } else {
                $this->globals[$name]['value'] = $value;
            }
            // publish the newly parsed global variable, if global variables should be published
            if ($this->_options['publisher'] && $this->_options['publishGlobals']) {
                $publish = $this->_options['publishMethod'];
                $message = 'method';
                if ($this->_options['publishGlobalMessage']) {
                    $message = $this->_options['publishGlobalMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $const);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $const);
                }
            }
        }
    }
    
    /**
     * @param MsgServer_Msg
     */
    function handleMessage($message)
    {
        if ($message->getMsg() == 'file docs') {
            $this->documentation = $message->getData();
        }
    }
					// line 285 "-"

    /**
     * thrown for irrecoverable syntax errors and stack overflow.
     */
    
     var $yyErrorCode = 256;

    /**
     * Debugging
     */
     var $debug = false;

    /**
     * (syntax) error message.
     * Can be overwritten to control message format.
     * @param message text to be displayed.
     * @param expected vector of acceptable tokens, if available.
     */
    function raiseError ($message, $expected = null)
    {     
        if ($expected !== null ) {
            $m = "$message expecting";
            foreach($expected as $e) {
                $m .= " $e";
            }
        } else {
            $m = $message;
        }
        return PEAR::raiseError($message);  
    }



    /**
     * index-checked interface to yyName[].
     * @param token single character or %token value.
     * @return token name or [illegal] or [unknown].
     */
    function yyname ($token) {
        if ($token < 0 || $token >  count($GLOBALS[$this->yyGlobalName]['yyName'])) return "[illegal]";
        if (($name = $GLOBALS[$this->yyGlobalName]['yyName'][$token]) != null) return $name;
        return "[unknown]";
    }

    /**
     * computes list of expected tokens on error by tracing the tables.
     * @param state for which to compute the list.
     * @return list of token names.
     */
    function yyExpecting ($state) {
        $len = 0;
        $ok = array();//new boolean[YyNameClass.yyName.length];

        if (($n =  $GLOBALS[$this->yyGlobalName]['yySindex'][$state]) != 0) {
            $start = $n;
            if ($start < 0) { $start = 0; }       
            for ($token = $start;
                $token < count($GLOBALS[$this->yyGlobalName]['yyName']) && 
                        $n+$token < count($GLOBALS[$this->yyGlobalName]['yyTable']); $token++) {
                if (@$GLOBALS[$this->yyGlobalName]['yyCheck'][$n+$token] == $token && !@$ok[$token] && 
                        $GLOBALS[$this->yyGlobalName]['yyName'][$token] != null) {
                    $len++;
                    $ok[$token] = true;
                }
            } // end for
        }
        if (($n = $GLOBALS[$this->yyGlobalName]['yyRindex'][$state]) != 0) {
            $start = $n;
            if ($start < 0) { $start = 0; }       
            for ($token = $start;
                     $token < count($GLOBALS[$this->yyGlobalName]['yyName'])  && 
                     $n+$token <  count($GLOBALS[$this->yyGlobalName]['yyTable']); $token++) 
            {
               if (@$GLOBALS[$this->yyGlobalName]['yyCheck'][$n+$token] == $token && !@$ok[$token] 
                          && @$GLOBALS[$this->yyGlobalName]['yyName'][$token] != null) {
                    $len++;
                    $ok[$token] = true;
               }
            } // end for
        }
        $result = array();
        for ($n = $token = 0; $n < $len;  $token++) {
            if (@$ok[$token]) { $result[$n++] =$GLOBALS[$this->yyGlobalName]['yyName'][$token]; }
        }
        return $result;
    }


    /**
     * initial size and increment of the state/value stack [default 256].
     * This is not final so that it can be overwritten outside of invocations
     * of yyparse().
     */
    var $yyMax;

    /**
     * executed at the beginning of a reduce action.
     * Used as $$ = yyDefault($1), prior to the user-specified action, if any.
     * Can be overwritten to provide deep copy, etc.
     * @param first value for $1, or null.
     * @return first.
     */
    function yyDefault ($first) {
        return $first;
    }

    /**
     * the generated parser.
     * Maintains a state and a value stack, currently with fixed maximum size.
     * @param yyLex scanner.
     * @return result of the last reduction, if any.
     * @throws yyException on irrecoverable parse error.
     */
    function yyparse (&$yyLex) {
//t        $this->debug = true;
        $this->yyLex = &$yyLex;
        if (!$this->yyGlobalName) {
            echo "\n\nYou must define \$this->yyGlobalName to match the build option -g _XXXXX \n\n";
            exit;
        }
        if ($this->debug)
           echo "\tStarting jay:yyparse";
        //error_reporting(E_ALL);
        if ($this->yyMax <= 0) $this->yyMax = 256;			// initial size
        $this->yyState = 0;
        $this->yyStates = array();
        $this->yyVal = null;
        $this->yyVals = array();
        $yyTableCount = count($GLOBALS[$this->yyGlobalName]['yyTable']);
        $yyToken = -1;                 // current input
        $yyErrorFlag = 0;              // #tks to shift
        $tloop = 0;
    
        while (1) {//yyLoop: 
            //echo "yyLoop\n";
            //if ($this->debug) echo "\tyyLoop:\n";
            for ($yyTop = 0;; $yyTop++) {
                //if ($this->debug) echo ($tloop++) .">>>>>>yyLoop:yTop = {$yyTop}\n";
                $this->yyStates[$yyTop] = $this->yyState;
                $this->yyVals[$yyTop] = $this->yyVal;

                //yyDiscarded: 
                for (;;) {	// discarding a token does not change stack
                    //echo "yyDiscarded\n";
                    if ($this->debug) echo "\tIn main loop : State = {$this->yyState}\n";
                    if ($this->debug) echo "\tyydefred = {$GLOBALS[$this->yyGlobalName]['yyDefRed'][$this->yyState]}\n";
                    if (($yyN = $GLOBALS[$this->yyGlobalName]['yyDefRed'][$this->yyState]) == 0) {	
                        // else [default] reduce (yyN)
                        //if ($this->debug) echo "\tA:token is $yyToken\n";
                        if ($yyToken < 0) {
                            //if ($this->debug) echo "\tA:advance\n";
                            if ($yyLex->advance()) {
                               
                                $yyToken = $yyLex->token ;
                            } else {
                                $yyToken = 0;
                            }
                        }
                        if ($this->debug) {
                            echo "\tA:token is now " .
                            "{$GLOBALS[$this->yyGlobalName]['yyName'][$yyToken]} " .token_name($yyToken).  "\n";
                            var_dump($yyToken);
                        }
                        //if ($this->debug) echo "GOT TOKEN $yyToken";
                        //if ($this->debug) echo "Sindex:  {$GLOBALS[$this->yyGlobalName]['yySindex'][$this->yyState]}\n";

                        if (($yyN = $GLOBALS[$this->yyGlobalName]['yySindex'][$this->yyState]) != 0
                                  && ($yyN += $yyToken) >= 0
                                  && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $yyToken) {
                            $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];		// shift to yyN
                            $this->yyVal = $yyLex->value;
                            $yyToken = -1;
                            if ($yyErrorFlag > 0) $yyErrorFlag--;
                            continue 2; // goto!!yyLoop;
                        }
 
                       
              
                        if (($yyN = $GLOBALS[$this->yyGlobalName]['yyRindex'][$this->yyState]) != 0
                                && ($yyN += $yyToken) >= 0
                                && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $yyToken) {
                            $yyN = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];			// reduce (yyN)
                        } else {
                            switch ($yyErrorFlag) {
    
                                case 0:
                                    $info = $yyLex->parseError();
                                    $info .= ', Unexpected '.$this->yyName($yyToken).',';
                                    return $this->raiseError("$info syntax error",
                                                $this->yyExpecting($this->yyState));
                                
                                case 1: case 2:
                                    $yyErrorFlag = 3;
                                    do { 
                                        if (($yyN = @$GLOBALS[$this->yyGlobalName]['yySindex']
                                                [$this->yyStates[$yyTop]]) != 0
                                                && ($yyN += $this->yyErrorCode) >= 0 && $yyN < $yyTableCount
                                                && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $this->yyErrorCode) {
                                            $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];
                                            $this->yyVal = $yyLex->value;
                                            //vi /echo "goto yyLoop?\n";
                                            break 3; //continue yyLoop;
                                        }
                                    } while ($yyTop-- >= 0);
                                    $info = $yyLex->parseError();
                                    return $this->raiseError("$info irrecoverable syntax error");
    
                                case 3:
                                    if ($yyToken == 0) {
                                        $info =$yyLex->parseError();
                                        return $this->raiseError("$info irrecoverable syntax error at end-of-file");
                                    }
                                    $yyToken = -1;
                                    //echo "goto yyDiscarded?";  
                                    break 1; //continue yyDiscarded;		// leave stack alone
                            }
                        }
                    }    
                    $yyV = $yyTop + 1-$GLOBALS[$this->yyGlobalName]['yyLen'][$yyN];
                    //if ($this->debug) echo "\tyyV is $yyV\n";
                    $yyVal = $yyV > $yyTop ? null : $this->yyVals[$yyV];
                    //if ($this->debug) echo "\tyyVal is ". serialize($yyVal) ."\n";
                    if ($this->debug) echo "\tswitch($yyN)\n";
                   
                    $method = '_' .$yyN;
                    if (method_exists($this,$method)) {
                         $this->$method($yyTop);

                    }
                   
                    //if ($this->debug) echo "\tDONE switch\n";if ($this->debug) echo "\t--------------\n";
                    $yyTop -= $GLOBALS[$this->yyGlobalName]['yyLen'][$yyN];
                    //if ($this->debug) echo "\tyyTop is $yyTop\n";
                    $this->yyState = $this->yyStates[$yyTop];
                    //if ($this->debug) echo "\tyyState is {$this->yyState}\n";
                    $yyM = $GLOBALS[$this->yyGlobalName]['yyLhs'][$yyN];
                    //if ($this->debug) echo "\tyyM is now $yyM\n";



                    if ($this->yyState == 0 && $yyM == 0) {
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyFinal'];
                        if ($yyToken < 0) {
                            $yyToken =0;
                            if ($yyLex->advance()) {
                                $yyToken = $yyLex->token;
                            }
                        }
                        if ($this->debug) echo "\tTOKEN IS NOW $yyToken\n";
                        if ($yyToken == 0) {
                            return $yyVal;
                        }
                        //if ($this->debug) echo "\t>>>>> yyLoop(A)?\n";
                        continue 2; //continue yyLoop;
                    }
                    if (($yyN = $GLOBALS[$this->yyGlobalName]['yyGindex'][$yyM]) != 0 && ($yyN += $this->yyState) >= 0
                            && $yyN < $yyTableCount && $GLOBALS[$this->yyGlobalName]['yyCheck'][$yyN] == $this->yyState) {
                        //if ($this->debug) echo "\tyyState: using yyTable\n";
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyTable'][$yyN];
                    } else {
                        //if ($this->debug) echo "\tyyState: using yyDgoto\n";
                        $this->yyState = $GLOBALS[$this->yyGlobalName]['yyDgoto'][$yyM];
                    }  
                    //if ($this->debug) echo "\t>>>>> yyLoop(B)?\n";
                    continue 2;//continue yyLoop;
                }
            }
        }
    }


    function _24($yyTop)  					// line 470 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (isset($this->returns)) {
            $this->returns[] = $this->yyVals[-1+$yyTop];
        }
    }

    function _25($yyTop)  					// line 476 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (isset($this->returns)) {
            $this->returns[] = $this->yyVals[-1+$yyTop];
        }
    }

    function _38($yyTop)  					// line 497 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_get_class = true;
    }

    function _39($yyTop)  					// line 500 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_get_class = false;
        if (isset($this->throws)) {
            $this->throws[] = $this->yyVals[-1+$yyTop];
        }
    }

    function _47($yyTop)  					// line 531 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _48($yyTop)  					// line 535 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
    }

    function _51($yyTop)  					// line 552 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = false;
    }

    function _52($yyTop)  					// line 556 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = true;
    }

    function _53($yyTop)  					// line 564 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->functionLine = $this->yyLex->line; 
        $this->functionPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->functionComment = $lc[0];
        $this->functionCommentToken = $this->yyLex->lastCommentToken;
        $this->params = array();
        $this->referencedVars = array();
        $this->statics = array();
        $this->funcglobals = array();
        $this->superglobals = array();
        $this->returns = array();
        $this->throws = array();
        if ($this->_options['functionContainer']) {
            $container = $this->_options['functionContainer'];
            $this->functions[$this->yyVals[0+$yyTop]] = new $container;
            $this->functions[$this->yyVals[0+$yyTop]]->setReference($this->yyVals[-1+$yyTop]);
        } else {
        }
    }

    function _54($yyTop)  					// line 585 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['functionContainer']) {
            $container = $this->_options['functionContainer'];
            $this->functions[$this->yyVals[-7+$yyTop]] = new $container;
            $this->functions[$this->yyVals[-7+$yyTop]]->setName($this->yyVals[-7+$yyTop]);
            $this->functions[$this->yyVals[-7+$yyTop]]->setReference($this->yyVals[-8+$yyTop]);
            $this->functions[$this->yyVals[-7+$yyTop]]->setParams($this->params);
            $this->functions[$this->yyVals[-7+$yyTop]]->setReferencedVars($this->referencedVars);
            $this->functions[$this->yyVals[-7+$yyTop]]->setGlobals($this->funcglobals);
            $this->functions[$this->yyVals[-7+$yyTop]]->setSuperGlobals($this->superglobals);
            $this->functions[$this->yyVals[-7+$yyTop]]->setStatics($this->statics);
            $this->functions[$this->yyVals[-7+$yyTop]]->setThrows($this->throws);
            $this->functions[$this->yyVals[-7+$yyTop]]->setDocumentation($this->functionComment);
            $this->functions[$this->yyVals[-7+$yyTop]]->setStartLine($this->functionLine);
            $this->functions[$this->yyVals[-7+$yyTop]]->setEndLine($this->yyLex->line);
        } else {
            $this->functions[$this->yyVals[-7+$yyTop]] = array(
                'returnsReference' => $this->yyVals[-8+$yyTop],
                'params' => $this->params,
                'globals' => $this->funcglobals,
                'statics' => $this->statics,
                'referencedVars' => $this->referencedVars,
                'returns' => $this->returns,
                'throws' => $this->throws,
                'superglobals' => $this->superglobals,
                'startline' => $this->functionLine,
                'endline' => $this->yyLex->line,
                'documentation' => $this->functionComment,
                );
        }
        /* publish the newly parsed function, if functions should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishFunctions']) {
            $publish = $this->_options['publishMethod'];
            $message = 'function';
            if ($this->_options['publishFunctionMessage']) {
                $message = $this->_options['publishFunctionMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->functions[$this->yyVals[-7+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->functions[$this->yyVals[-7+$yyTop]]);
            }
        }
        unset($this->params);
        unset($this->returns);
        unset($this->referencedVars);
        unset($this->statics);
        unset($this->funcglobals);
        unset($this->superglobals);
        unset($this->throws);
    }

    function _55($yyTop)  					// line 643 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->classLine = $this->yyLex->line; 
        $this->classPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->classComment = $lc[0];
        $this->classCommentToken = $this->yyLex->lastCommentToken;
    }

    function _56($yyTop)  					// line 650 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->methods = array();
        $this->vars = array();
        $this->consts = array();
        $this->referencedVars = array();
        $this->implements = array();
    }

    function _57($yyTop)  					// line 661 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['classContainer']) {
            $container = $this->_options['classContainer'];
            $this->classes[$this->yyVals[-6+$yyTop]] = new $container;
            $this->classes[$this->yyVals[-6+$yyTop]]->setName($this->yyVals[-6+$yyTop]);
            $this->classes[$this->yyVals[-6+$yyTop]]->setExtends($this->yyVals[-5+$yyTop]);
            $this->classes[$this->yyVals[-6+$yyTop]]->setType($this->yyVals[-7+$yyTop]);
            $this->classes[$this->yyVals[-6+$yyTop]]->setMethods($this->methods);
            $this->classes[$this->yyVals[-6+$yyTop]]->setVars($this->vars);
            $this->classes[$this->yyVals[-6+$yyTop]]->setConsts($this->consts);
            $this->classes[$this->yyVals[-6+$yyTop]]->setImplements($this->implements);
            $this->classes[$this->yyVals[-6+$yyTop]]->setReferencedVars($this->referencedVars);
            $this->classes[$this->yyVals[-6+$yyTop]]->setDocumentation($this->classComment);
            $this->classes[$this->yyVals[-6+$yyTop]]->setStartLine($this->classLine);
            $this->classes[$this->yyVals[-6+$yyTop]]->setEndLine($this->yyLex->line);
        } else {
            /* use arrays if no class container is defined
*/
            $this->classes[$this->yyVals[-6+$yyTop]] = array(
                 'extends' => $this->yyVals[-5+$yyTop],
                 'type' => $this->yyVals[-7+$yyTop],
                 'methods' => $this->methods,
                 'vars' => $this->vars,
                 'consts' => $this->consts,
                 'implements' => $this->implements,
                 'referencedVars' => $this->referencedVars,
                 'startline' => $this->classLine,
                 'endline' => $this->yyLex->line,
                 'documentation' => $this->classComment,
                 );
        }
        /* publish the newly parsed class, if classes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClasses']) {
            $publish = $this->_options['publishMethod'];
            $message = 'class';
            if ($this->_options['publishClassMessage']) {
                $message = $this->_options['publishClassMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->classes[$this->yyVals[-6+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->classes[$this->yyVals[-6+$yyTop]]);
            }
        }
        unset($this->methods);
        unset($this->vars);
        unset($this->consts);
        unset($this->throws);
        unset($this->referencedVars);
        unset($this->implements);
    }

    function _58($yyTop)  					// line 720 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _59($yyTop)  					// line 724 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'abstract';
    }

    function _60($yyTop)  					// line 728 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'final';
    }

    function _61($yyTop)  					// line 732 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'interface';
    }

    function _62($yyTop)  					// line 739 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _63($yyTop)  					// line 743 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _66($yyTop)  					// line 755 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (isset($this->implements)) {
            $this->implements[] = $this->yyVals[0+$yyTop];
        }
    }

    function _67($yyTop)  					// line 761 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (isset($this->implements)) {
            $this->implements[] = $this->yyVals[0+$yyTop];
        }
    }

    function _99($yyTop)  					// line 857 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false, 'const' => true);
    }

    function _100($yyTop)  					// line 861 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-1+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-2+$yyTop], 'isReference' => true, 'const' => true);
    }

    function _101($yyTop)  					// line 865 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-3+$yyTop]] = array('default' => $this->yyVals[0+$yyTop], 'type' => $this->yyVals[-4+$yyTop], 'isReference' => true, 'const' => false);
    }

    function _102($yyTop)  					// line 869 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-1+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false, 'const' => true);
    }

    function _103($yyTop)  					// line 873 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => $this->yyVals[0+$yyTop], 'type' => $this->yyVals[-3+$yyTop], 'isReference' => false, 'const' => false);
    }

    function _104($yyTop)  					// line 877 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false, 'const' => false);
    }

    function _105($yyTop)  					// line 881 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-2+$yyTop], 'isReference' => true, 'const' => false);
    }

    function _106($yyTop)  					// line 885 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => $this->yyVals[0+$yyTop], 'type' => $this->yyVals[-4+$yyTop], 'isReference' => true, 'const' => false);
    }

    function _107($yyTop)  					// line 889 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[0+$yyTop]] = array('default' => null, 'type' => $this->yyVals[-1+$yyTop], 'isReference' => false, 'const' => true);
    }

    function _108($yyTop)  					// line 893 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->params[$this->yyVals[-2+$yyTop]] = array('default' => $this->yyVals[0+$yyTop], 'type' => $this->yyVals[-3+$yyTop], 'isReference' => false, 'const' => false);
    }

    function _109($yyTop)  					// line 901 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _110($yyTop)  					// line 905 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _112($yyTop)  					// line 913 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _115($yyTop)  					// line 923 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '&' . $this->yyVals[0+$yyTop];
    }

    function _116($yyTop)  					// line 927 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = $this->yyVals[-2+$yyTop];
            $this->defineValue = $this->yyVals[0+$yyTop];
        }
        $this->yyVal = $this->yyVals[-2+$yyTop] . ', ' . $this->yyVals[0+$yyTop];
    }

    function _117($yyTop)  					// line 935 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = $this->yyVals[-2+$yyTop];
            $this->defineValue = $this->yyVals[0+$yyTop];
        }
        $this->yyVal = $this->yyVals[-2+$yyTop] . ', ' . $this->yyVals[0+$yyTop];
    }

    function _118($yyTop)  					// line 943 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_grabDefine) {
            $this->defineName = $this->yyVals[-3+$yyTop];
            $this->defineValue = '&' . $this->yyVals[0+$yyTop];
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . ', &' . $this->yyVals[0+$yyTop];
    }

    function _121($yyTop)  					// line 960 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->funcglobals[] = $this->yyVals[0+$yyTop];
    }

    function _122($yyTop)  					// line 964 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->funcglobals[] = '$' . $this->yyVals[-1+$yyTop];
    }

    function _123($yyTop)  					// line 968 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->funcglobals[] = '${' . $this->yyVals[-1+$yyTop] . '}';
    }

    function _124($yyTop)  					// line 976 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[0+$yyTop], 'default' => null);
    }

    function _125($yyTop)  					// line 980 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[-2+$yyTop], 'default' => $this->yyVals[0+$yyTop]);
    }

    function _126($yyTop)  					// line 984 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[0+$yyTop], 'default' => null);
    }

    function _127($yyTop)  					// line 988 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->statics[] = array('name' => $this->yyVals[-2+$yyTop], 'default' => $this->yyVals[0+$yyTop]);
    }

    function _129($yyTop)  					// line 997 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _130($yyTop)  					// line 1005 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        foreach($this->yyVals[0+$yyTop] as $var) {
            $is_static = false;
            if (in_array('static', $this->yyVals[-1+$yyTop])) {
                $is_static = true;
                $z = array_flip($this->yyVals[-1+$yyTop]);
                unset($this->yyVals[-1+$yyTop][$z['static']]);
            }
            if ($this->_options['varContainer']) {
                $var->setAccess($this->yyVals[-1+$yyTop]);
                if ($is_static) {
                    $var->setStatic();
                }
            } else {
                $var['access'] = $this->yyVals[-1+$yyTop];
                $var['static'] = $is_static;
            }
            $this->vars[] = $var;
            /* publish the newly parsed var, if vars should be published
*/
            if ($this->_options['publisher'] && $this->_options['publishVars']) {
                $publish = $this->_options['publishMethod'];
                $message = 'var';
                if ($this->_options['publishVarMessage']) {
                    $message = $this->_options['publishVarMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $var);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $var);
                }
            }
        }
    }

    function _133($yyTop)  					// line 1044 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->methodLine = $this->yyLex->line; 
        $this->methodPos = $this->yyLex->pos;
        $lc = $this->yyLex->getLastComment();
        $this->methodComment = $lc[0];
        $this->methodCommentToken = $this->yyLex->lastCommentToken;
    }

    function _134($yyTop)  					// line 1052 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->throws = array();
        $this->params = array();
        $this->returns = array();
        $this->referencedVars = array();
        $this->statics = array();
        $this->funcglobals = array();
        $this->superglobals = array();
    }

    function _135($yyTop)  					// line 1062 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $is_static = false;
        if (in_array('static', $this->yyVals[-8+$yyTop])) {
            $is_static = true;
            $z = array_flip($this->yyVals[-8+$yyTop]);
            unset($this->yyVals[-8+$yyTop][$z['static']]);
        }
        if ($this->_options['methodContainer']) {
            $container = $this->_options['methodContainer'];
            $this->methods[$this->yyVals[-5+$yyTop]] = new $container;
            $this->methods[$this->yyVals[-5+$yyTop]]->setName($this->yyVals[-5+$yyTop]);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReference($this->yyVals[-6+$yyTop]);
            $this->methods[$this->yyVals[-5+$yyTop]]->setParams($this->params);
            $this->methods[$this->yyVals[-5+$yyTop]]->setReferencedVars($this->referencedVars);
            $this->methods[$this->yyVals[-5+$yyTop]]->setGlobals($this->funcglobals);
            $this->methods[$this->yyVals[-5+$yyTop]]->setSuperGlobals($this->superglobals);
            $this->methods[$this->yyVals[-5+$yyTop]]->setStatics($this->statics);
            $this->methods[$this->yyVals[-5+$yyTop]]->setStartLine($this->methodLine);
            $this->methods[$this->yyVals[-5+$yyTop]]->setEndLine($this->yyLex->line);
            $this->methods[$this->yyVals[-5+$yyTop]]->setDocumentation($this->methodComment);
            if ($is_static) {
                $this->methods[$this->yyVals[-5+$yyTop]]->setStaticMethod();
            }
            $this->methods[$this->yyVals[-5+$yyTop]]->setModifiers($this->yyVals[-8+$yyTop]);
        } else {
            $this->methods[$this->yyVals[-5+$yyTop]] = array(
                'modifiers' => $this->yyVals[-8+$yyTop],
                'static' => $is_static,
                'returnsReference' => $this->yyVals[-6+$yyTop],
                'params' => $this->params,
                'globals' => $this->funcglobals,
                'statics' => $this->statics,
                'referencedVars' => $this->referencedVars,
                'returns' => $this->returns,
                'superglobals' => $this->superglobals,
                'startline' => $this->methodLine,
                'endline' => $this->yyLex->line,
                'documentation' => $this->methodComment,
                );
        }
        /* publish the newly parsed method, if methods should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishMethodMessage']) {
                $message = $this->_options['publishMethodMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $this->methods[$this->yyVals[-5+$yyTop]]);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $this->methods[$this->yyVals[-5+$yyTop]]);
            }
        }
        unset($this->returns);
        unset($this->referencedVars);
        unset($this->statics);
        unset($this->funcglobals);
        unset($this->superglobals);
    }

    function _138($yyTop)  					// line 1135 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _139($yyTop)  					// line 1139 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = array('public');
    }

    function _140($yyTop)  					// line 1146 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = array('public');
    }

    function _141($yyTop)  					// line 1150 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[0+$yyTop];
    }

    function _142($yyTop)  					// line 1157 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = array($this->yyVals[0+$yyTop]);
    }

    function _143($yyTop)  					// line 1161 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
        $this->yyVal[] = $this->yyVals[0+$yyTop];
    }

    function _144($yyTop)  					// line 1169 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'public';
    }

    function _145($yyTop)  					// line 1173 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'protected';
    }

    function _146($yyTop)  					// line 1177 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'private';
    }

    function _147($yyTop)  					// line 1181 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'static';
    }

    function _148($yyTop)  					// line 1185 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'abstract';
    }

    function _149($yyTop)  					// line 1189 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'final';
    }

    function _150($yyTop)  					// line 1196 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop];
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[0+$yyTop]);
            $var->setStartLine($this->yyLex->line);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $this->yyVal[] = $var;
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal[] = array('name' => $this->yyVals[0+$yyTop],
                         'startline' => $this->_varLine,
                         'endline' => $this->yyLex->line,
                         'documentation' => $lc[0],
                         'default' => null);
        }
    }

    function _151($yyTop)  					// line 1218 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_varLine = $this->yyLex->line;
        
    }

    function _152($yyTop)  					// line 1222 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-5+$yyTop];
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[-3+$yyTop]);
            $var->setStartLine($this->_varLine);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $var->setDefault($this->yyVals[0+$yyTop]);
            $this->yyVal[] = $var;
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal[] = array('name' => $this->yyVals[-3+$yyTop],
                         'startline' => $this->yyLex->line,
                         'endline' => $this->yyLex->line,
                         'documentation' => $lc[0],
                         'default' => $this->yyVals[0+$yyTop]);
        }
    }

    function _153($yyTop)  					// line 1245 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[0+$yyTop]);
            $var->setStartLine($this->yyLex->line);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $this->yyVal = array($var);
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal = array(array('name' => $this->yyVals[0+$yyTop],
                             'startline' => $this->yyLex->line,
                             'endline' => $this->yyLex->line,
                             'documentation' => $lc[0],
                             'default' => null));
        }
    }

    function _154($yyTop)  					// line 1265 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_varLine = $this->yyLex->line;
    }

    function _155($yyTop)  					// line 1268 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['varContainer']) {
            $container = $this->_options['varContainer'];
            $var = new $container;
            $var->setName($this->yyVals[-3+$yyTop]);
            $var->setStartLine($this->_varLine);
            $var->setEndLine($this->yyLex->line);
            $lc = $this->yyLex->getLastComment();
            $var->setDocumentation($lc[0]);
            $var->setDefault($this->yyVals[0+$yyTop]);
            $this->yyVal = array($var);
        } else {
            $lc = $this->yyLex->getLastComment();
            $this->yyVal = array(array('name' => $this->yyVals[-3+$yyTop],
                             'startline' => $this->_varLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $lc[0],
                             'default' => $this->yyVals[0+$yyTop]));
        }
    }

    function _156($yyTop)  					// line 1292 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $lc = $this->yyLex->getLastComment();
        $this->constLine = $this->yyLex->line;
        $this->constComment = $lc[0];
    }

    function _157($yyTop)  					// line 1297 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['classConstContainer']) {
            $container = $this->_options['classConstContainer'];
            $const = new $container;
            $const->setStartLine($this->constLine);
            $const->setEndLine($this->yyLex->line);
            $const->setDocumentation($this->constComment);
            $const->setValue($this->yyVals[0+$yyTop]);
            $const->setName($this->yyVals[-3+$yyTop]);
        } else {
            $const = array('name' => $this->yyVals[-3+$yyTop],
                           'value' => $this->yyVals[0+$yyTop],
                           'startline' => $this->constLine,
                           'endline' => $this->yyLex->line,
                           'documentation' => $this->constComment);
        }
        $this->consts[$this->yyVals[-2+$yyTop]] = $const;
        /* publish the newly parsed class constant, if class constants should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClassConstants']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishClassConstantMessage']) {
                $message = $this->_options['publishClassConstantMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $const);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $const);
            }
        }
    }

    function _158($yyTop)  					// line 1333 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->constLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->constComment = $lc[0];
    }

    function _159($yyTop)  					// line 1338 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['classConstContainer']) {
            $container = $this->_options['classConstContainer'];
            $const = new $container;
            $const->setStartLine($this->constLine);
            $const->setEndLine($this->yyLex->line);
            $const->setDocumentation($this->constComment);
            $const->setValue($this->yyVals[0+$yyTop]);
            $const->setName($this->yyVals[-2+$yyTop]);
        } else {
            $const = array('name' => $this->yyVals[-2+$yyTop],
                           'value' => $this->yyVals[0+$yyTop],
                           'startline' => $this->constLine,
                           'endline' => $this->yyLex->line,
                           'documentation' => $this->constComment);
        }
        $this->consts[$this->yyVals[-2+$yyTop]] = $const;
        /* publish the newly parsed class constant, if class constants should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishClassConstants']) {
            $publish = $this->_options['publishMethod'];
            $message = 'method';
            if ($this->_options['publishClassConstantMessage']) {
                $message = $this->_options['publishClassConstantMessage'];
            }
            if ($this->_options['publishMessageClass']) {
                $pc = $this->_options['publishMessageClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $const);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $const);
            }
        }
    }

    function _166($yyTop)  					// line 1393 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'list(' . $this->yyVals[-3+$yyTop] . ') = ' . $this->yyVals[0+$yyTop];
    }

    function _167($yyTop)  					// line 1397 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_initGlobal($this->yyVals[-1+$yyTop]);
    }

    function _168($yyTop)  					// line 1400 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_in_global) {
            $this->_processGlobal($this->yyVals[-3+$yyTop], $this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . ' = '. $this->yyVals[0+$yyTop];
    }

    function _169($yyTop)  					// line 1407 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_initGlobal($this->yyVals[-2+$yyTop]);
    }

    function _170($yyTop)  					// line 1410 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_in_global) {
            $this->_processGlobal($this->yyVals[-4+$yyTop], '&' .$this->yyVals[0+$yyTop]);
        }
        $this->yyVal = $this->yyVals[-4+$yyTop] .' =& '.$this->yyVals[0+$yyTop];
    }

    function _171($yyTop)  					// line 1418 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->_initGlobal($this->yyVals[-3+$yyTop]);
    }

    function _172($yyTop)  					// line 1421 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_in_global) {
            $this->_processGlobal($this->yyVals[-6+$yyTop], '&new ' . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop]);
        }
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = $this->yyVals[-6+$yyTop] .' =& new '. $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
        }
    }

    function _173($yyTop)  					// line 1432 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = 'new '.$this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
        }
    }

    function _174($yyTop)  					// line 1440 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' += '.$this->yyVals[0+$yyTop];
    }

    function _175($yyTop)  					// line 1444 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' -= '.$this->yyVals[0+$yyTop];
    }

    function _176($yyTop)  					// line 1448 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' *= '.$this->yyVals[0+$yyTop];
    }

    function _177($yyTop)  					// line 1452 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' /= '.$this->yyVals[0+$yyTop];
    }

    function _178($yyTop)  					// line 1456 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' .= '.$this->yyVals[0+$yyTop];
    }

    function _179($yyTop)  					// line 1460 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' %= '.$this->yyVals[0+$yyTop];
    }

    function _180($yyTop)  					// line 1464 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' &= '.$this->yyVals[0+$yyTop];
    }

    function _181($yyTop)  					// line 1468 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' |= '.$this->yyVals[0+$yyTop];
    }

    function _182($yyTop)  					// line 1472 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' ^= '.$this->yyVals[0+$yyTop];
    }

    function _183($yyTop)  					// line 1476 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' <<= '.$this->yyVals[0+$yyTop];
    }

    function _184($yyTop)  					// line 1480 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' >>= '.$this->yyVals[0+$yyTop];
    }

    function _185($yyTop)  					// line 1484 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . '++';
    }

    function _186($yyTop)  					// line 1488 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '++' . $this->yyVals[0+$yyTop];
    }

    function _187($yyTop)  					// line 1492 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . '--';
    }

    function _188($yyTop)  					// line 1496 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '--' . $this->yyVals[0+$yyTop];
    }

    function _189($yyTop)  					// line 1500 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' || ' . $this->yyVals[0+$yyTop];
    }

    function _190($yyTop)  					// line 1504 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' && ' . $this->yyVals[0+$yyTop];
    }

    function _191($yyTop)  					// line 1508 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' or ' . $this->yyVals[0+$yyTop];
    }

    function _192($yyTop)  					// line 1512 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' and ' . $this->yyVals[0+$yyTop];
    }

    function _193($yyTop)  					// line 1516 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' xor ' . $this->yyVals[0+$yyTop];
    }

    function _194($yyTop)  					// line 1520 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' | '.$this->yyVals[0+$yyTop];
    }

    function _195($yyTop)  					// line 1524 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' & '.$this->yyVals[0+$yyTop];
    }

    function _196($yyTop)  					// line 1528 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' ^ '.$this->yyVals[0+$yyTop];
    }

    function _197($yyTop)  					// line 1532 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' . '.$this->yyVals[0+$yyTop];
    }

    function _198($yyTop)  					// line 1536 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' + '.$this->yyVals[0+$yyTop];
    }

    function _199($yyTop)  					// line 1540 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' - '.$this->yyVals[0+$yyTop];
    }

    function _200($yyTop)  					// line 1544 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' * '.$this->yyVals[0+$yyTop];
    }

    function _201($yyTop)  					// line 1548 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' / '.$this->yyVals[0+$yyTop];
    }

    function _202($yyTop)  					// line 1552 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' % '.$this->yyVals[0+$yyTop];
    }

    function _203($yyTop)  					// line 1556 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' << '.$this->yyVals[0+$yyTop];
    }

    function _204($yyTop)  					// line 1560 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' >> '.$this->yyVals[0+$yyTop];
    }

    function _205($yyTop)  					// line 1564 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = ' + ' . $this->yyVals[0+$yyTop];
    }

    function _206($yyTop)  					// line 1568 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = ' - ' . $this->yyVals[0+$yyTop];
    }

    function _207($yyTop)  					// line 1572 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '!' . $this->yyVals[0+$yyTop];
    }

    function _208($yyTop)  					// line 1576 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '~' . $this->yyVals[0+$yyTop];
    }

    function _209($yyTop)  					// line 1580 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' === '.$this->yyVals[0+$yyTop];
    }

    function _210($yyTop)  					// line 1584 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' !== '.$this->yyVals[0+$yyTop];
    }

    function _211($yyTop)  					// line 1588 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' == '.$this->yyVals[0+$yyTop];
    }

    function _212($yyTop)  					// line 1592 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _213($yyTop)  					// line 1596 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' < '.$this->yyVals[0+$yyTop];
    }

    function _214($yyTop)  					// line 1600 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' <= '.$this->yyVals[0+$yyTop];
    }

    function _215($yyTop)  					// line 1604 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' > '.$this->yyVals[0+$yyTop];
    }

    function _216($yyTop)  					// line 1608 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' >= '.$this->yyVals[0+$yyTop];
    }

    function _217($yyTop)  					// line 1612 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' instanceof '.$this->yyVals[0+$yyTop];
    }

    function _218($yyTop)  					// line 1616 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_get_class) {
            $this->yyVal = $this->yyVals[-1+$yyTop];
        } else {
            $this->yyVal = '(' . $this->yyVals[-1+$yyTop] . ')';
        }
    }

    function _219($yyTop)  					// line 1626 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . ' ? ' . $this->yyVals[-2+$yyTop] .' : '. $this->yyVals[0+$yyTop];
    }

    function _221($yyTop)  					// line 1631 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(int) ' . $this->yyVals[0+$yyTop];
    }

    function _222($yyTop)  					// line 1635 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(double) ' . $this->yyVals[0+$yyTop];
    }

    function _223($yyTop)  					// line 1639 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(string) ' . $this->yyVals[0+$yyTop];
    }

    function _224($yyTop)  					// line 1643 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(array) ' . $this->yyVals[0+$yyTop];
    }

    function _225($yyTop)  					// line 1647 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(object) ' . $this->yyVals[0+$yyTop];
    }

    function _226($yyTop)  					// line 1651 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(bool) ' . $this->yyVals[0+$yyTop];
    }

    function _227($yyTop)  					// line 1655 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(unset) ' . $this->yyVals[0+$yyTop];
    }

    function _228($yyTop)  					// line 1659 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _229($yyTop)  					// line 1663 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '@' . $this->yyVals[0+$yyTop];
    }

    function _231($yyTop)  					// line 1668 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
    }

    function _232($yyTop)  					// line 1672 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '`' . $this->yyVals[-1+$yyTop] . '`';
    }

    function _233($yyTop)  					// line 1676 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'print ' . $this->yyVals[0+$yyTop];
    }

    function _234($yyTop)  					// line 1683 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (strtolower($this->yyVals[0+$yyTop]) == 'define') {
            $this->defineLine = $this->yyLex->line;
            $lc = $this->yyLex->getLastComment();
            $this->defineComment = $lc[0];
            $this->_grabDefine = true;
            $this->defineName = '';
            $this->defineValue = '';
        }
    }

    function _235($yyTop)  					// line 1693 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_grabDefine && !empty($this->defineName)) {
            if ($this->_options['constContainer']) {
                $container = $this->_options['constContainer'];
                $const = new $container;
                $const->setStartLine($this->defineLine);
                $const->setEndLine($this->yyLex->line);
                $const->setDocumentation($this->defineComment);
                $const->setValue($this->defineValue);
                $const->setName($this->defineName);
            } else {
                $const = array('name' => $this->defineName,
                               'value' => $this->defineValue,
                               'startline' => $this->defineLine,
                               'endline' => $this->yyLex->line,
                               'documentation' => $this->defineComment);
            }
            $this->constants[$this->defineName] = $const;
            /* publish the newly parsed class constant, if class constants should be published
*/
            if ($this->_options['publisher'] && $this->_options['publishConstants']) {
                $publish = $this->_options['publishMethod'];
                $message = 'method';
                if ($this->_options['publishConstantMessage']) {
                    $message = $this->_options['publishConstantMessage'];
                }
                if ($this->_options['publishMessageClass']) {
                    $pc = $this->_options['publishMessageClass'];
                    $publisher = $this->_options['publisher'];
                    $message = new $pc($message, $const);
                    $publisher->$publish($pc);
                } else {
                    $publisher = $this->_options['publisher'];
                    $publisher->$publish($message, $const);
                }
            }
        }
        $this->_grabDefine = false;
    }

    function _242($yyTop)  					// line 1751 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    { $this->yyVal = $this->yyVals[0+$yyTop]; }

    function _246($yyTop)  					// line 1767 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _247($yyTop)  					// line 1771 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '()';
    }

    function _248($yyTop)  					// line 1775 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(' . $this->yyVals[-1+$yyTop] .')';
    }

    function _249($yyTop)  					// line 1783 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _250($yyTop)  					// line 1787 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _260($yyTop)  					// line 1811 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' << ' . $this->yyVals[0+$yyTop];
    }

    function _261($yyTop)  					// line 1815 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' >> ' . $this->yyVals[0+$yyTop];
    }

    function _262($yyTop)  					// line 1819 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' xor ' . $this->yyVals[0+$yyTop];
    }

    function _263($yyTop)  					// line 1823 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' | ' . $this->yyVals[0+$yyTop];
    }

    function _264($yyTop)  					// line 1827 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' & ' . $this->yyVals[0+$yyTop];
    }

    function _265($yyTop)  					// line 1831 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' ^ ' . $this->yyVals[0+$yyTop];
    }

    function _266($yyTop)  					// line 1835 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' . ' . $this->yyVals[0+$yyTop];
    }

    function _267($yyTop)  					// line 1839 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' + ' . $this->yyVals[0+$yyTop];
    }

    function _268($yyTop)  					// line 1843 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' - ' . $this->yyVals[0+$yyTop];
    }

    function _269($yyTop)  					// line 1847 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' * ' . $this->yyVals[0+$yyTop];
    }

    function _270($yyTop)  					// line 1851 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' / ' . $this->yyVals[0+$yyTop];
    }

    function _271($yyTop)  					// line 1855 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' % ' . $this->yyVals[0+$yyTop];
    }

    function _272($yyTop)  					// line 1859 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '~' . $this->yyVals[-1+$yyTop];
    }

    function _273($yyTop)  					// line 1863 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _276($yyTop)  					// line 1872 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '+' . $this->yyVals[0+$yyTop];
    }

    function _277($yyTop)  					// line 1876 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '-' . $this->yyVals[0+$yyTop];
    }

    function _278($yyTop)  					// line 1880 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'array(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _282($yyTop)  					// line 1890 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '+' . $this->yyVals[0+$yyTop];
    }

    function _283($yyTop)  					// line 1894 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '-' . $this->yyVals[0+$yyTop];
    }

    function _284($yyTop)  					// line 1898 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'array(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _286($yyTop)  					// line 1906 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . '::' . $this->yyVals[0+$yyTop];
    }

    function _291($yyTop)  					// line 1917 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '"' . $this->yyVals[-1+$yyTop] . '"';
    }

    function _292($yyTop)  					// line 1921 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = "'" . $this->yyVals[-1+$yyTop] . "'";
    }

    function _293($yyTop)  					// line 1925 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
    }

    function _294($yyTop)  					// line 1933 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _295($yyTop)  					// line 1937 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _296($yyTop)  					// line 1944 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _297($yyTop)  					// line 1948 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = ', ';
    }

    function _298($yyTop)  					// line 1955 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . ",\n" . $this->yyVals[-2+$yyTop] . ' => ' . $this->yyVals[0+$yyTop];
    }

    function _299($yyTop)  					// line 1959 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ",\n" . $this->yyVals[0+$yyTop];
    }

    function _300($yyTop)  					// line 1963 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ' => '. $this->yyVals[0+$yyTop];
    }

    function _316($yyTop)  					// line 2017 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . '::' . $this->yyVals[0+$yyTop];
    }

    function _320($yyTop)  					// line 2032 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _322($yyTop)  					// line 2040 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if (isset($this->superglobals)) {
            if ($this->yyVals[-3+$yyTop] == '$GLOBALS' ||
                $this->yyVals[-3+$yyTop] == '$_SERVER' ||
                $this->yyVals[-3+$yyTop] == '$_REQUEST' ||
                $this->yyVals[-3+$yyTop] == '$_ENV' ||
                $this->yyVals[-3+$yyTop] == '$_GET' ||
                $this->yyVals[-3+$yyTop] == '$_POST' ||
                $this->yyVals[-3+$yyTop] == '$_COOKIE' ||
                $this->yyVals[-3+$yyTop] == '$_FILES' ||
                $this->yyVals[-3+$yyTop] == '$_SESSION') {
                $this->_get_var = false;
                $this->superglobals[] = array('array' => $this->yyVals[-3+$yyTop],
                                              'var' => $this->yyVals[-1+$yyTop]);
            }
        } else {
            if ($this->yyVals[-3+$yyTop] == '$GLOBALS' ||
                $this->yyVals[-3+$yyTop] == '$_SERVER' ||
                $this->yyVals[-3+$yyTop] == '$_REQUEST' ||
                $this->yyVals[-3+$yyTop] == '$_ENV' ||
                $this->yyVals[-3+$yyTop] == '$_GET' ||
                $this->yyVals[-3+$yyTop] == '$_POST' ||
                $this->yyVals[-3+$yyTop] == '$_COOKIE' ||
                $this->yyVals[-3+$yyTop] == '$_FILES' ||
                $this->yyVals[-3+$yyTop] == '$_SESSION') {
                $this->_get_var = false;
                $this->filesuperglobals[] = array('array' => $this->yyVals[-3+$yyTop],
                                              'var' => $this->yyVals[-1+$yyTop]);
            }
        }
        $this->yyVal = $this->yyVals[-3+$yyTop] . '[' . $this->yyVals[-1+$yyTop] . ']';
    }

    function _323($yyTop)  					// line 2073 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . '{' . $this->yyVals[-1+$yyTop] . '}';
    }

    function _326($yyTop)  					// line 2083 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '${' . $this->yyVals[-1+$yyTop] . '}';
    }

    function _327($yyTop)  					// line 2090 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _334($yyTop)  					// line 2109 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    { $this->yyVal = $this->yyVals[0+$yyTop]; }

    function _335($yyTop)  					// line 2110 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    { $this->yyVal = $this->yyVals[-1+$yyTop]; }

    function _337($yyTop)  					// line 2116 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . '$';
    }

    function _344($yyTop)  					// line 2137 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop];
    }

    function _345($yyTop)  					// line 2144 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-4+$yyTop] . ",\n" . $this->yyVals[-2+$yyTop] . ' => '. $this->yyVals[0+$yyTop];
    }

    function _346($yyTop)  					// line 2148 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . ",\n" . $this->yyVals[0+$yyTop];
    }

    function _347($yyTop)  					// line 2152 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] .' => '.$this->yyVals[0+$yyTop];
    }

    function _349($yyTop)  					// line 2157 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-5+$yyTop] . ",\n" . $this->yyVals[-3+$yyTop] . ' => &' . $this->yyVals[0+$yyTop];
    }

    function _350($yyTop)  					// line 2161 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . ",\n&" . $this->yyVals[0+$yyTop];
    }

    function _351($yyTop)  					// line 2165 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . ' => &' . $this->yyVals[0+$yyTop];
    }

    function _352($yyTop)  					// line 2169 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '&' . $this->yyVals[0+$yyTop];
    }

    function _353($yyTop)  					// line 2176 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _354($yyTop)  					// line 2180 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _355($yyTop)  					// line 2184 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _356($yyTop)  					// line 2188 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _357($yyTop)  					// line 2192 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _358($yyTop)  					// line 2196 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _359($yyTop)  					// line 2200 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _360($yyTop)  					// line 2204 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _361($yyTop)  					// line 2208 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _362($yyTop)  					// line 2212 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _363($yyTop)  					// line 2216 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _364($yyTop)  					// line 2220 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = '';
    }

    function _366($yyTop)  					// line 2230 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-3+$yyTop] . '[' . $this->yyVals[-1+$yyTop] . ']';
    }

    function _367($yyTop)  					// line 2234 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yyVals[-1+$yyTop] . $this->yyVals[0+$yyTop];
    }

    function _368($yyTop)  					// line 2238 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yyVals[-1+$yyTop] . '}';
    }

    function _369($yyTop)  					// line 2242 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-5+$yyTop] . $this->yyVals[-4+$yyTop] . '[' . $this->yyVals[-2+$yyTop] . ']}';
    }

    function _370($yyTop)  					// line 2246 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = $this->yyVals[-2+$yyTop] . $this->yyVals[-1+$yyTop] . '}';
    }

    function _374($yyTop)  					// line 2261 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'isset(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _375($yyTop)  					// line 2265 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->yyVal = 'empty(' . $this->yyVals[-1+$yyTop] . ')';
    }

    function _376($yyTop)  					// line 2269 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _377($yyTop)  					// line 2274 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile($this->yyVals[0+$yyTop]);
            $include->setType('include');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => $this->yyVals[0+$yyTop],
                             'type' => 'include',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
    }

    function _378($yyTop)  					// line 2310 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _379($yyTop)  					// line 2315 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile($this->yyVals[0+$yyTop]);
            $include->setType('include_once');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => $this->yyVals[0+$yyTop],
                             'type' => 'include_once',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
    }

    function _381($yyTop)  					// line 2352 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _382($yyTop)  					// line 2357 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile($this->yyVals[0+$yyTop]);
            $include->setType('require');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => $this->yyVals[0+$yyTop],
                             'type' => 'require',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
    }

    function _383($yyTop)  					// line 2393 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        $this->includeLine = $this->yyLex->line;
        $lc = $this->yyLex->getLastComment();
        $this->includeComment = $lc[0];
    }

    function _384($yyTop)  					// line 2398 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
        if ($this->_options['includeContainer']) {
            $container = $this->_options['includeContainer'];
            $include = new $container;
            $include->setFile($this->yyVals[0+$yyTop]);
            $include->setType('require_once');
            $include->setStartLine($this->includeLine);
            $include->setEndLine($this->yyLex->line);
            $include->setDocumentation($this->includeComment);
        } else {
            $include = array('file' => $this->yyVals[0+$yyTop],
                             'type' => 'require_once',
                             'startline' => $this->includeLine,
                             'endline' => $this->yyLex->line,
                             'documentation' => $this->includeComment);
        }
        $this->includes[] = $include;
        /* publish the newly parsed include, if includes should be published
*/
        if ($this->_options['publisher'] && $this->_options['publishMethods']) {
            $publish = $this->_options['publishMethod'];
            $message = 'include';
            if ($this->_options['publishIncludeMessage']) {
                $message = $this->_options['publishIncludeMessage'];
            }
            if ($this->_options['publishIncludeClass']) {
                $pc = $this->_options['publishIncludeClass'];
                $publisher = $this->_options['publisher'];
                $message = new $pc($message, $include);
                $publisher->$publish($pc);
            } else {
                $publisher = $this->_options['publisher'];
                $publisher->$publish($message, $include);
            }
        }
    }

    function _387($yyTop)  					// line 2442 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"
    {
            $this->yyVal = $this->yyVals[-2+$yyTop] . '::' . $this->yyVals[-1+$yyTop];
        }
					// line 2281 "-"

					// line 2447 "C:/Web Pages/chiara/PHP_Parser5/Parser/Core5.jay"

}
					// line 2286 "-"

  $GLOBALS['_PHP_PARSER']['yyLhs']  = array(              -1,
    0,    0,    1,    1,    1,    5,    5,    6,    6,    6,
    2,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,    7,    7,    7,
    7,    7,    7,    7,    7,    7,    7,   31,    7,   30,
   30,   32,   32,   23,   23,   33,   22,   22,    3,    4,
   36,   36,   37,   34,   40,   43,   35,   39,   39,   39,
   39,   41,   41,   42,   42,   45,   45,   25,   25,   15,
   15,   26,   26,   28,   28,   27,   27,   16,   16,   16,
   16,   47,   47,   47,   48,   48,   13,   13,    9,    9,
   11,   11,   10,   10,   12,   12,   38,   38,   49,   49,
   49,   49,   49,   49,   49,   49,   49,   49,   50,   50,
   51,   51,   52,   52,   52,   52,   52,   52,   19,   19,
   53,   53,   53,   20,   20,   20,   20,   44,   44,   58,
   55,   55,   61,   62,   55,   63,   63,   56,   56,   60,
   60,   64,   64,   65,   65,   65,   65,   65,   65,   57,
   66,   57,   57,   67,   57,   68,   59,   70,   59,   21,
   21,   14,   14,   71,   71,   17,   73,   17,   74,   17,
   76,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   17,   17,   17,   17,   17,   17,   17,
   17,   17,   17,   85,   84,   84,   84,   29,   75,   75,
   88,   88,   91,   91,   92,   80,   80,   80,   77,   77,
   93,   93,   93,   93,   93,   93,   93,   69,   69,   95,
   95,   95,   95,   95,   95,   95,   95,   95,   95,   95,
   95,   95,   95,   94,   94,   94,   94,   94,   94,   46,
   46,   46,   46,   46,   46,   97,   81,   81,   81,   81,
   81,   81,   81,   96,   96,   99,   99,   98,   98,   98,
   98,    8,    8,   54,   24,   78,   18,   18,  102,  102,
  103,  101,  101,   87,   87,  106,  100,  100,   89,   89,
   89,  104,  104,  104,  108,  108,  107,  107,   90,   90,
  109,  109,  109,  110,  110,  105,  105,   72,   72,  111,
  111,  111,   82,   82,  112,  112,  112,  112,  112,  112,
  112,  112,   83,   83,   83,   83,   83,   83,   83,   83,
   83,   83,   83,   83,  113,  113,  113,  113,  113,  113,
  114,  114,  114,   79,   79,  116,   79,  117,   79,   79,
  118,   79,  119,   79,  115,  115,   86,
  );
  $GLOBALS['_PHP_PARSER']['yyLen'] = array(           2,
    2,    0,    1,    1,    1,    2,    0,    1,    1,    1,
    1,    3,    7,   10,    5,    7,    9,    5,    2,    3,
    2,    3,    2,    3,    3,    3,    3,    3,    1,    2,
    3,    5,    8,    8,    5,    1,   13,    0,    4,    1,
    0,    9,    8,    1,    3,    1,    1,    3,    1,    1,
    0,    1,    0,   10,    0,    0,    9,    1,    2,    2,
    1,    0,    2,    0,    2,    1,    3,    0,    2,    1,
    4,    1,    4,    1,    4,    3,    5,    3,    4,    4,
    5,    0,    5,    4,    1,    1,    1,    4,    0,    6,
    0,    7,    0,    2,    0,    3,    1,    0,    2,    3,
    5,    3,    4,    4,    5,    7,    5,    6,    0,    1,
    1,    0,    1,    1,    2,    3,    3,    4,    3,    1,
    1,    2,    4,    3,    5,    1,    3,    2,    0,    0,
    4,    2,    0,    0,   10,    1,    3,    1,    1,    0,
    1,    1,    2,    1,    1,    1,    1,    1,    1,    3,
    0,    6,    1,    0,    4,    0,    6,    0,    5,    3,
    1,    0,    1,    3,    1,    6,    0,    4,    0,    5,
    0,    7,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    2,    2,    2,    2,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    2,    2,    2,    2,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    5,    1,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    1,
    4,    3,    2,    0,    5,    4,    4,    1,    1,    1,
    4,    1,    2,    0,    2,    0,    2,    3,    0,    3,
    1,    1,    1,    1,    1,    1,    1,    1,    1,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    2,    3,    1,    1,    2,    2,    4,    1,    1,
    1,    2,    2,    4,    1,    3,    1,    1,    1,    1,
    3,    3,    3,    0,    2,    0,    1,    5,    3,    3,
    1,    1,    1,    1,    1,    1,    5,    1,    2,    0,
    3,    3,    0,    1,    2,    3,    1,    1,    1,    2,
    1,    4,    4,    1,    1,    4,    0,    1,    1,    1,
    4,    4,    1,    1,    3,    1,    2,    3,    1,    1,
    4,    0,    0,    2,    5,    3,    3,    1,    6,    4,
    4,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    2,    2,    2,    0,    1,    4,    3,    3,    6,    3,
    1,    1,    1,    4,    4,    0,    3,    0,    3,    4,
    0,    3,    0,    3,    1,    3,    3,
  );
  $GLOBALS['_PHP_PARSER']['yyDefRed'] = array(            2,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  251,  252,    0,  288,  325,
   29,  253,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   38,    0,    0,    0,    0,    0,
    0,    0,    0,  256,  257,  254,  255,  364,    0,    0,
    0,    0,    0,    7,    0,   36,    0,  364,  364,  364,
    1,    3,    4,    5,   11,    0,  303,    0,    0,   49,
   50,    0,  302,    0,  220,  230,  318,    0,    0,  317,
  290,    0,    0,    0,  321,  324,    0,    0,    0,    0,
    0,    0,    0,  306,  186,    0,  188,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  240,    0,    0,
    0,    0,  228,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   19,    0,   21,    0,   52,    0,   23,
    0,    0,    0,    7,    0,   47,    0,    0,  121,    0,
    0,  120,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   30,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   58,   61,    0,  185,  187,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  173,    0,    0,  247,    0,    0,    0,    0,
   28,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   20,   22,   53,   24,   25,    0,    0,    0,   31,
    0,  304,  122,    0,   26,    0,    0,   27,   46,    0,
   44,  385,    0,    0,    0,  340,    0,  339,    0,    0,
    0,    0,  354,    0,  355,  357,  358,  356,  363,  293,
    0,    0,  359,  361,  362,  360,  353,   12,    8,    9,
   10,    6,  218,    0,  232,  291,  292,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  217,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  387,  316,    0,    0,
   59,   60,    0,    0,    0,    0,    0,    0,    0,  334,
    0,  330,    0,    0,  333,    0,    0,    0,    0,    0,
    0,    0,  380,    0,  244,  248,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   39,   48,    0,  119,    0,    0,    0,    0,  127,
  280,  285,    0,    0,    0,    0,  374,  375,    0,    0,
    0,  305,  352,    0,  231,    0,  344,    0,    0,    0,
    0,    0,  326,    0,  171,    0,    0,    0,    0,   56,
  115,  236,    0,  237,    0,    0,  310,    0,    0,  322,
  323,  250,    0,    7,   89,  235,    0,    7,   87,   15,
    0,    0,    0,    0,   76,    0,    7,   74,   35,    0,
    0,   18,    0,    0,  123,    0,    0,  282,  283,    0,
   45,   32,  386,    0,  338,    0,    0,    0,    0,    0,
  367,  371,  373,  372,    0,    0,  368,  370,    0,    0,
  170,  238,   63,    0,    0,    0,    0,  335,    0,    0,
    0,    0,    0,  243,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   82,    0,   82,    0,    0,  110,
    0,    0,    0,    0,  286,    0,    0,    0,  125,  341,
    0,  351,  350,    0,  366,    0,    0,    0,    0,  118,
  312,    0,  309,  331,  332,  245,    0,    0,    0,   13,
   16,    0,    0,   69,    0,    0,   77,    0,    0,    0,
    0,    0,    0,   78,    0,    0,    0,    0,    0,    0,
    0,  284,    0,  295,    0,    0,    0,  172,   66,    0,
  129,    0,    0,    0,    0,    0,   94,   88,    0,    7,
   72,   34,   33,   75,    0,   80,    0,   85,   86,    7,
   79,  102,    7,    0,    0,    0,    0,    0,  300,    0,
  349,  369,    0,    0,  311,    0,    7,    0,    0,    7,
   70,   17,    0,   81,    7,    0,    0,    0,    0,    0,
  103,    0,    0,    0,   67,  147,  148,  149,  146,  145,
  144,  139,   57,  128,    0,    0,    0,    0,  142,    0,
    0,    0,   14,    0,    0,    0,    0,   54,  107,    0,
    0,  101,    7,  298,    0,    0,    0,  132,    0,    0,
  143,    0,    0,   90,    0,   73,  108,    0,    0,    0,
    0,    0,  156,    0,    0,    7,   71,  106,    0,    0,
    0,  131,    0,    0,    0,    0,    0,   37,    0,  155,
    0,    0,  134,    0,    0,    0,    0,    0,    0,    0,
  274,  258,  259,  279,    0,    0,    0,    0,    0,    0,
  276,  277,  272,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  152,    0,
    0,  273,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  269,  270,  271,    0,    0,    0,  278,    0,    0,
    0,    7,    0,    7,  136,  135,    0,    7,    0,   43,
    0,  137,   42,
  );
  $GLOBALS['_PHP_PARSER']['yyDgoto']  = array(             1,
   61,  289,  290,  291,  156,  292,   65,   66,  496,  540,
  537,  575,  440,  235,  612,  452,   67,   68,  141,  144,
  117,  138,  260,  403,  501,  582,  240,  449,   69,  688,
  135,  689,  261,   70,   71,  129,  380,  511,  206,   72,
  420,  529,  484,  604,  570,  516,  506,  590,  512,  513,
  347,  348,  142,   73,  634,  635,  656,  672,  636,  659,
  637,  709,  756,  638,  639,  691,  670,  683,  700,  640,
  236,  267,  336,  416,  107,  480,  223,   74,   75,  113,
   76,  271,  150,   77,  115,   78,   79,  108,   80,  353,
  433,  494,   81,  702,  703,  517,  704,  518,  407,   82,
  427,  490,  533,   83,   84,   85,  357,   86,  354,  355,
  268,  272,  287,  475,  263,   87,   88,   89,   90,
  );
  $GLOBALS['_PHP_PARSER']['yySindex'] = array(            0,
 3708,    9, 6166,   -1,   -1, 6166, 6166, 6166, 6166, 6166,
 6166, 6166,   35,   70,   95,    0,    0,    0,    0,    0,
    0,    0, 6166, 4741,  103,  138,  151,  170,  174, 5099,
 5202,   42, 5287,  -83,    0,  -23,  -16, -220,  184,  191,
  195,  197,  211,    0,    0,    0,    0,    0, 6166, 6166,
 6166, 6166, 6166,    0, 6166,    0,   -7,    0,    0,    0,
    0,    0,    0,    0,    0,10121,    0, 1347, -116,    0,
    0,  355,    0, -188,    0,    0,    0,  229,  234,    0,
    0, -202,  -53,  -15,    0,    0,   55,   49,   64,   68,
 6166,11641,    0,    0,    0,  229,    0,   85,   85,   85,
   85,   85,   85,   85,    0,  -19,  364,    0,   82,  -53,
  -15, 5437,    0, 6166,  368,11361,  105,  155, 6166, 6166,
 6166,  141, 6166,    0,10206,    0,10264,    0,  149,    0,
11361,  421, 2663,    0, 6166,    0,  186,  446,    0,  -18,
  203,    0,  458,  204,   -1,   -1,   -1,  -32, 5563,  957,
   67,   67,   85,   85,   85, 1237,10179, 6166, 1465,  514,
  565, 6166, 6166, 6166, 6166, 6166, 6166, 6166, 6166, 6166,
 6166, 6166, 6166, 6166,   35, 6166, 6166, 6166, 6166, 6166,
 6166, 6166, 6166, 6166, 6166, 6166, 6166,    0, 6166, 6166,
 6166, 6166, 6166, 6166, 6166, 6166, 6166, 6166, 6166,  469,
   50,  175,  181,    0,    0,  237,    0,    0, 5672, 5672,
  -12, 6166, 6166,   -7,  -53, 6166, 6166, 6166, 6166,10384,
   -8, 5672,    0,  -12,  -53,    0,10459,10517, 5672, 6166,
    0,  511,10555,11361,  496,  513,  238,  934,  503,  267,
10582,    0,    0,    0,    0,    0, 1566,10640,  527,    0,
 6166,    0,    0,  -16,    0,   40,  285,    0,    0,  276,
    0,    0,  284,  561,  570,    0,  372,    0,   -1, 4534,
  572,  576,    0,  -72,    0,    0,    0,    0,    0,    0,
 6275,   -1,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,10667,    0,    0,    0,11432,11476,11641,
 6781, 5237,  786,  786,  786,  786, 1031, 1031,   30,   30,
    0,10811, 3915, 2183, 2612, 1031, 1031,   67,   67,   67,
   85,   85,   85,11641,11641,11641,11641,11641,11641,11641,
11641,11641,11641,11641,  320, 6166,    0,    0,  -53,  -15,
    0,    0,  277,   -1,    0, 1347,  590,  600,  614,    0,
 6166,    0,  617,   16,    0,11361,  585,10838,11361,11361,
11361,11361,    0,  626,    0,    0, 3793,  648,11361, 6166,
 4122, 6166, 6166,   -1,   -1,   40,  386, 4207,    5,  653,
  365,    0,    0,10896,    0,  340,  674,   40,   40,    0,
    0,    0,  655,   -1,  660,   -1,    0,    0,  -32,  -32,
  661,    0,    0, 5775,    0, 5860,    0,  419,  -22,  637,
10923,  604,    0, 6166,    0,   -1,11641,  -53,  426,    0,
    0,    0, 5978,    0,10962, 5672,    0, 6166, 6166,    0,
    0,    0,  381,    0,    0,    0,10989,    0,    0,    0,
  676,11361,  396,  396,    0,  691,    0,    0,    0,  697,
  698,    0, -213,  719,    0,  463,   40,    0,    0,   40,
    0,    0,    0,  377,    0, 6166,   -1,11361,   -1, 5493,
    0,    0,    0,    0,  677, 6166,    0,    0,11685,   35,
    0,    0,    0,  423,   -1,    0, 1347,    0,  728,  425,
  686,11016,  -12,    0, 3708, -141,  721, 1669, 6166,   -1,
  740,  743,   40, 1998,    0,  326,    0,  -86,  426,    0,
  745,  759,   -9,  426,    0,  433,  748,  762,    0,    0,
11641,    0,    0, 6063,    0,11105,  364,  426,  688,    0,
    0,  -12,    0,    0,    0,    0,  -40,  769, 4741,    0,
    0,  755,  774,    0, 4327, 4327,    0,  757,  338,  758,
 6166,  307,  -57,    0,  520,  707, -207,  773,  532,  536,
   40,    0,   40,    0,   -1,11361,  715,    0,    0,  800,
    0,  617,  813,  798,  558, 6166,    0,    0, 4656,    0,
    0,    0,    0,    0,  803,    0, 9911,    0,    0,    0,
    0,    0,    0,  426,    6,   40,  807,  822,    0,  510,
    0,    0,  426,  560,    0, 6166,    0,  810,11269,    0,
    0,    0, 2083,    0,    0, 3708, 2412,  571,  818,  573,
    0,   40,  763,   40,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  575,  361, -186, -186,    0,  553,
11298, 3708,    0, 4741, 2515,  828, 3708,    0,    0,   40,
  831,    0,    0,    0,    0,  851,  591,    0,  566, -186,
    0,  602,  850,    0,  852,    0,    0,   40, 2844,  848,
  603,  855,    0,   42,  854,    0,    0,    0,  584,   40,
    0,    0,  856,  615,  405, 3708,  881,    0,  587,    0,
  863,  405,    0,  340,  886,  213,  213,  405,  405, 2148,
    0,    0,    0,    0,  426,  889,   40, 2148,  892,   40,
    0,    0,    0, 1364,  405,  405,  405,  405,  405,  405,
  405,  405,  405,  405,  405,  405,  630,  426,    0, -213,
  897,    0, 2556,  812,  812, 1711,   99,  491,  230,  230,
  230,    0,    0,    0,  898,  634,  899,    0,  820,  908,
   10,    0,  827,    0,    0,    0, 2947,    0, 3276,    0,
 3379,    0,    0,
  );
  $GLOBALS['_PHP_PARSER']['yyRindex'] = array(            0,
 1394,    0,  292,    0,    0,  292,  292,  292,  292,  292,
  292,  292,    0, 8156,    0,    0,    0, 6552,    0,    0,
    0,    0,  292,  292,    0,    0,    0,    0,    0,  292,
  292,  628,  292,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  292,  292,
  292,  292,  292,    0,  292,    0,   -5,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 7761,    0,    0,
    0,    0,    0,    0,    0,    0,    0, 8193,    0,    0,
    0, 7439, 6669,    0,    0,    0,    0,    0,    0,    0,
  292,  -36,  -37,    0,    0,    0,    0, 8336, 8456, 8545,
 8599, 8708, 8797, 8851, 6610,    0, 8278,    0, 7893, 7798,
    0,  292,    0,  292,    0,  397,    0,    0,  292,  480,
  292,    0,  292,    0,    0,    0,    0,    0,    0,    0,
    0,11388, 9950,    0,  292,    0,    0,    0,    0,    0,
    0,    0,  409,    0,    0,    0,    0,  383,  176,    0,
 2215, 3925, 8905, 8963, 9048, 1394,    0,  292,    0,    0,
    0,  292,  292,  292,  292,  292,  292,  292,  292,  292,
  292,  292,  292,  292,    0,  292,  292,  292,  292,  292,
  292,  292,  292,  292,  292,  292,  292,    0,  292,  292,
  292,  292,  292,  292,  292,  292,  292,  292,  292, 4861,
    0,    0,    0,    0,    0,    0,    0,    0,  227,  227,
    0,  130,  292,   -4, 6728,  292,  292,  292,  292,    0,
    0,  227,    0,    0, 7856,    0,    0,    0,  227,  292,
    0,    0,    0,  330,    0,   88,11388, 9950,    0,    0,
    0,    0,    0,    0,    0,    0, 1394,    0,    0,    0,
  292,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  408,
    0,  910,    0,   25,    0,    0,    0,    0,    0,    0,
  292,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   38, 1627, 1122,
  588,    2, 1783, 3493, 4664, 6341, 7904, 8185, 9623, 9660,
    0,    0, 1886, 1454, 9795, 9518, 9652, 4544, 9450, 9545,
 9157, 9256, 9351, 1153, 1256, 1585, 1758, 2099, 2366, 2431,
 2531, 2604, 2732, 2860,   76,  292,    0,    0, 6995,    0,
    0,    0,  -93,    0,10008, 5389,    0,  912,    0,    0,
  292,    0, 7380, 7054,    0,  861,    0,    0,  319,  582,
  830,  872,    0,    0,    0,    0,  292,    0,  422,  292,
  292,  480,  292,    0,    0,    0,    0,  292,    0,    0,
    0,    0,    0,    0,    0,    7,    0,    0,    0,    0,
    0,    0,  431,    0,    0,    0,    0,    0,  383,  383,
    0,    0,    0,  292,    0,  547,    0,    0,    0,11334,
    0,    0,    0,  292,    0,    0, 2964, 7113,    0,    0,
    0,    0,  292,    0,    0,  227,    0,  130,  292,    0,
    0,    0, 8067,    0,    0,    0,    0,    0,    0,    0,
    0,  384,  915,  915,    0,    0,    0,    0,    0,  356,
  111,    0,   52,    0,    0,    0,  919,    0,    0,    0,
    0,    0,    0,    0,    0,  292,    0,  418,    0,  459,
    0,    0,    0,    0,    0,  292,    0,    0,  695,    0,
    0,    0,    0,  838,    0,10083, 9803,    0,    0, 7498,
    0,    0,    0,    0,  991, 1134,    0, 1394,  633,    0,
    0,    0,    0, 1394,    0,    0,    0,    0,  657,    0,
    0,  921,    0,    0,    0,  515,    0,  910,    0,    0,
 2968,    0,    0,  292,    0,    0, 8278,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  664,    0,  292,    0,
    0,    0,    0,    0,  292,  292,    0,    0,    0,    0,
  292,    0,    0,    0,    0,    0,   63,  522,    0,    0,
    0,    0,  922,    0,    0,  533,    0,    0,    0,  844,
    0, 7380,    0,    0,    0,  292,    0,    0,  292,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  657,    0,    0,  541,    0,    0,  550,
    0,    0,    0,  303,    0,  292,    0,    0,    0,    0,
    0,    0, 1394,    0,    0,  962, 1394,    0,  562,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  638,  663,    0,    0,
    0, 1063,    0,  292, 1394,    0, 1047,    0,    0,    0,
  567,    0,    0,    0,  342,  909,    0,    0,    0,  640,
    0,    0,    0,    0,    0,    0,    0,    0, 1394,    0,
    0,    0,    0,  628,    0,    0,    0,    0,  687,    0,
  434,    0,    0,    0,    0, 1795,    0,    0,  802,    0,
    0,    0,    0, 2468,    0,    0,    0,    0,    0,  445,
    0,    0,    0,    0,    0,    0,    0,  447,    0,  919,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   52,
    0,    0,   47,  417, 1656,  574,  618,  555, 1631, 2930,
 3061,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0, 1394,    0, 1394,    0,
 1394,    0,    0,
  );
  $GLOBALS['_PHP_PARSER']['yyGindex'] = array(            0,
    0,    1,  971,  972, -133,    0,    0,    3,    0,    0,
    0,    0,    0, -288,    0,    0,   87,  201,    0,    0,
    0,    0,    0,  869,  540,  452,    0,    0,  -13,    0,
    0,    0,  605,    0,    0,  337,    0,  299,    0,    0,
    0,    0,    0,    0,    0,   26, -373,  435,    0, -300,
 -148,    0,  776,  891,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  395, -530,    0,    0,    0, 1350,    0,
    0,  639,    0,    0, -159,    0,  512,  656,    0,    0,
    0,    0,  689,    0,    0,   98, -174,    0,   32, -217,
    0,    0,   75,   48,    0,  331,  -38,    0,  534,    0,
  468,    0,    0,   29,   28,    0,  623,    0,    0,    0,
  658,    0,    0,    0,    0,    0,    0,    0,    0,
  );
  $GLOBALS['_PHP_PARSER']['yyTable'] = array(           106,
  247,   62,  234,   57,  233,   92,  365,  233,   98,   99,
  100,  101,  102,  103,  104,  311,  137,   57,  409,  140,
  214,  233,  233,   57,  118,  116,  338,   57,  559,   62,
  336,  337,  125,  127,   57,  131,  352,  212,  554,  134,
  111,  110,  190,  620,  109,  190,  338,  281,   91,  352,
  281,  151,  152,  153,  154,  155,  233,  157,  365,  190,
  190,  349,  450,  365,  190,  281,  187,  591,  755,  213,
   57,  185,  182,  364,  183,  184,  186,  508,  191,  128,
  368,  191,  388,  441,  389,   57,  143,  262,  233,  109,
  262,  482,   98,  220,  190,  191,  191,  482,  207,  208,
  109,   96,   96,  187,  251,  262,  428,  661,  185,  112,
  351,  169,  215,  186,  227,  158,  228,  365,  509,  132,
  365,  233,  234,  131,  594,  241,  190,  451,  163,  661,
  191,  549,  754,  553,  114,  726,  720,  248,  429,  225,
  724,  721,  119,  722,  723,  725,  163,  365,  230,  365,
  211,  270,  626,  627,  628,  629,  630,  631,  538,  539,
  294,  106,  191,  231,  298,  299,  300,  301,  302,  303,
  304,  305,  306,  307,  308,  309,  310,  120,  312,  313,
  314,  315,  316,  317,  318,  319,  320,  321,  322,  323,
  121,  324,  325,  326,  327,  328,  329,  330,  331,  332,
  333,  334,  111,  110,   94,   94,  109,  237,  555,  122,
  543,  131,  131,  123,  356,  358,  343,  392,  359,  360,
  361,  362,  327,  145,  131,  233,  233,  233,  340,  339,
  146,  131,  369,  133,  147,   82,  148,   96,  340,  339,
  551,  552,   96,   96,   96,   96,  254,  257,  340,  339,
  149,  340,  339,  384,  201,  696,  595,  697,   62,  573,
  574,  255,  258,  190,  190,  190,  726,  112,  209,  551,
  552,  724,   93,  210,   20,  536,  725,  489,  190,  190,
  408,  390,  472,  411,  473,  474,   93,  233,   20,  136,
  139,   20,  350,  618,   20,  345,  345,  558,   20,  191,
  495,  336,  337,   93,  498,   20,  217,  378,  345,  262,
  377,  216,  619,  504,  572,  345,  395,  233,  352,  394,
  527,  238,  265,  218,  397,  190,  175,  396,  219,  365,
  391,  365,  365,  238,  365,  365,  365,  392,  417,  105,
  252,   20,   16,   17,  386,  259,  262,  264,  266,  392,
  392,  221,   22,  425,  337,  190,   20,  352,  109,  377,
  281,  191,  377,  175,  588,  589,   96,  435,  418,  109,
  165,  439,  437,  165,  234,  442,  377,  377,  448,   96,
  169,  175,  169,  716,  717,  153,  376,  378,  165,  381,
  383,  191,  365,  365,  365,  387,   44,   45,   46,   47,
  153,  445,  154,  222,  657,  483,  468,  229,  470,  346,
  346,  377,  401,  458,  459,  400,  479,  520,  392,  658,
  400,  392,  346,  342,  164,  131,  342,  164,  131,  346,
  356,  492,  376,  378,  224,  381,  383,   82,   82,  510,
  161,   96,  164,  377,  699,  239,  613,  696,  348,  697,
  391,  348,  126,  244,  260,  161,  616,  260,  347,  617,
  260,  347,  391,  391,  392,  160,  106,  126,  521,  402,
  232,   96,   96,  642,  124,  260,  645,  150,  526,  245,
  160,  647,  412,  376,  378,  519,  381,  383,  159,  124,
  157,   96,  150,   96,  151,  510,   96,   96,  249,  346,
  560,  234,  346,  159,  250,  157,  335,  111,  110,  486,
  260,  109,  345,   96,  569,   16,   17,  694,  256,  669,
  340,  339,  392,  341,  392,   22,  566,  726,  547,  342,
  698,  391,  724,  721,  391,  722,  723,  725,  162,  577,
  260,  343,  686,  510,  402,  581,  581,  296,  376,  378,
  370,  381,  383,  587,  372,  301,  373,  392,  301,  340,
  339,  374,   99,  376,   96,   99,   96,  383,  695,   44,
   45,   46,   47,  345,  402,  402,  345,  391,  609,  611,
  510,  100,   96,  392,  100,  392,  599,  297,  600,  625,
  299,  393,  264,  299,  259,  264,  463,   96,  264,  266,
  266,  398,  104,  297,  283,  104,  286,  105,  641,  399,
  105,  392,  405,  264,  263,  415,  481,  263,  757,  406,
  759,  621,  379,  487,  761,  379,  346,  419,  189,  392,
  422,  189,  263,  133,  158,  391,  284,  391,  285,  379,
  379,  392,  377,  423,  664,  189,  189,  652,  264,  654,
  189,  550,  551,  552,  424,  283,  426,  286,  265,   95,
   97,  265,   96,  585,  551,  552,  432,  402,  392,  402,
  391,  392,  377,  162,  379,  667,  265,  430,  264,  260,
  189,   82,   82,   82,  633,  402,   41,  284,  436,  285,
  446,  727,  453,  678,  202,  203,  391,  263,  391,  454,
  402,  260,  260,  204,  205,  690,  379,   16,   17,  694,
  456,  265,  189,  457,  746,  460,  510,   22,  462,   41,
   41,  466,   41,  471,  391,   41,   41,  476,  478,   41,
  482,   41,  729,  493,  499,  219,  376,  378,  219,  381,
  383,  265,  391,  711,  712,   41,  159,  160,  161,  500,
   41,  503,  219,  219,  391,  505,  507,  219,  514,  701,
  695,   44,   45,   46,   47,  402,  701,  515,  531,  525,
  701,  701,  701,  701,  528,  716,  717,  532,  534,  541,
  545,  391,   41,  546,  391,  556,  561,  219,  562,  701,
  701,  701,  701,  701,  701,  701,  701,  701,  701,  701,
  701,   40,  557,  376,  378,  563,  381,  383,  576,   41,
  571,   41,   41,  578,  579,  584,  586,  264,  273,  219,
  274,  275,  187,  276,  277,  278,  592,  185,  182,  593,
  183,  184,  186,  596,   40,   40,  263,   40,  597,  602,
   40,   40,  598,  603,   40,  180,   40,  181,  726,  189,
  189,  189,  606,  724,  721,  607,  722,  723,  725,  608,
   40,  614,  623,  624,  189,   40,  279,  622,  643,  273,
  382,  274,  275,  382,  276,  277,  278,  649,  650,  651,
  265,  655,  281,  282,  662,  653,  666,  382,  382,  376,
  378,  668,  381,  383,  671,  673,  674,   40,  626,  627,
  628,  629,  630,  631,  632,  379,  675,  676,  680,  681,
  677,  189,  384,  682,  685,  384,  692,  279,  687,  693,
  705,  706,  382,  707,   40,  710,   40,   40,  728,  384,
  384,  730,   51,  281,  282,  379,  745,  748,  749,  751,
  750,  189,  752,   41,   41,   41,   41,   41,  753,  758,
  296,   41,  111,  328,  382,   68,  219,  219,  219,  294,
   64,   97,  297,  109,  384,   95,   65,  130,  140,  138,
  141,   63,   64,   41,   41,   41,   41,   41,   41,   41,
   41,   41,   41,  502,   41,   41,   41,   41,   41,   41,
   41,   41,   41,   41,  200,   41,  384,  583,  461,   41,
   41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
  684,   41,   41,   41,   41,   41,   41,   41,  219,   41,
   41,  615,   41,   41,   41,   41,   41,   41,  747,  385,
  253,  660,   41,   41,   41,   41,   41,  464,  568,  605,
  731,   41,   41,   41,   41,   41,   41,  283,  219,  286,
  491,  564,    0,   41,    0,    0,    0,  465,   40,   40,
   40,   40,   40,    0,    0,    0,   40,  187,  171,  172,
  173,  174,  185,  182,    0,  183,  184,  186,    0,  284,
    0,  285,  175,    0,    0,    0,   84,    0,   40,   40,
   40,   40,   40,   40,   40,   40,   40,   40,    0,   40,
   40,   40,   40,   40,   40,   40,   40,   40,   40,    0,
   40,    0,    0,    0,   40,   40,   40,   40,   40,   40,
   40,   40,   40,   40,   40,    0,   40,   40,   40,   40,
   40,   40,   40,   93,   40,   40,    0,   40,   40,   40,
   40,   40,   40,    0,    0,    0,    0,   40,   40,   40,
   40,   40,    0,  382,    0,    0,   40,   40,   40,   40,
   40,   40,  192,    0,    0,  192,   93,   93,   40,   93,
    0,   83,   93,   93,    0,    0,   93,    0,   93,  192,
  192,    0,    0,  382,    0,    0,    0,    0,    0,    0,
    0,    0,   93,  174,    0,  384,  174,   93,    0,  189,
  190,  191,  192,  193,  194,  195,  196,  197,  198,  199,
  174,  174,  421,    0,  192,    0,    0,    0,  376,  378,
    0,  381,  383,    0,    0,  384,    0,    0,    0,   93,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  443,  444,    0,  174,  192,  376,  378,    0,
  381,  383,    0,    0,    0,    0,   93,  375,   93,   93,
    0,  273,    0,  274,  275,    0,  276,  277,  278,   51,
   59,    0,   57,    0,    0,   60,   55,  174,    0,   49,
    0,   50,    0,    0,    0,    0,    0,   84,   84,   84,
   91,   91,   91,    0,    0,   56,  175,    0,    0,  175,
   53,   55,   55,  376,  378,    0,  381,  383,    0,  279,
   55,   55,    0,  175,  175,  173,  174,    0,    0,  376,
  378,    0,  381,  383,  280,  281,  282,  175,    0,    0,
   55,   55,   58,    0,    0,  522,    0,  523,    0,   55,
   55,    0,    0,    0,    0,    0,    0,    0,  175,    0,
    0,    0,    0,  530,    0,    0,    0,    0,    0,   54,
    0,  288,   52,    0,   96,    0,    0,    0,  544,    0,
    0,    0,   83,   83,   83,    0,    0,    0,    0,    0,
  175,    0,    0,  192,  192,  192,   55,   55,    0,    0,
   93,   93,   93,   93,   93,   55,   55,    0,   93,    0,
  726,  720,   55,   55,  732,  724,  721,  200,  722,  723,
  725,   55,   55,    0,  174,  174,  174,    0,    0,    0,
   93,   93,   93,   93,   93,   93,   93,   93,   93,   93,
    0,   93,   93,  601,    0,   93,   93,   93,   93,   93,
   93,    0,   93,    0,    0,  192,   93,   93,   93,   93,
   93,   93,   93,   93,   93,   93,   93,  719,   93,   93,
   93,   93,   93,   93,   93,    0,   93,   93,    0,   93,
   93,   93,   93,   93,   93,  192,  174,    0,    0,   93,
   93,   93,   93,   93,    0,    0,    0,  718,   93,   93,
   93,   93,   93,   93,  196,    2,    0,  196,    0,    0,
   93,    3,    0,    0,    0,    0,  174,    0,    0,    0,
    0,  196,  196,    0,    0,    0,  196,  175,  175,  175,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,  196,  196,    0,   22,
   23,   24,   25,    0,   26,  283,   27,  286,   28,    0,
  295,   29,    0,    0,    0,   30,   31,   32,    0,   33,
   34,    0,   35,   36,   37,   38,    0,  196,  196,  175,
    0,    0,   39,   40,   41,    0,    0,  284,    0,  285,
    0,   42,   43,   44,   45,   46,   47,    0,   51,   59,
    0,   57,    0,   48,   60,   55,    0,    0,   49,  175,
   50,    0,  189,  190,  191,  192,  193,  194,  195,  196,
  197,  198,  199,    0,   56,  176,  715,    0,  176,   53,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  176,  176,    0,    0,    0,    0,  716,  717,
  376,  378,    0,  381,  383,    0,    0,    0,    0,    0,
    0,   58,    0,    0,    0,    0,    0,  193,  267,    0,
  193,  267,    0,  267,  267,  267,  267,  176,    0,    0,
    0,    0,    0,    0,  193,  193,    0,    0,   54,  267,
  381,   52,    0,  261,    0,    0,  261,    0,    0,  261,
    0,   51,   59,    0,   57,    0,    0,   60,   55,  176,
    0,   49,    0,   50,  261,  196,  196,  196,    0,  193,
    0,    0,    0,    0,  267,    0,    0,   56,    0,    0,
  196,  196,   53,   55,   55,    0,    0,    0,    0,    0,
    0,    0,   55,   55,    0,    0,    0,  726,  720,  261,
    0,  193,  724,  721,  267,  722,  723,  725,    0,    0,
    0,    0,    0,    0,   58,    0,    0,    0,    0,  273,
    0,  274,  275,    0,  276,  277,  278,  196,    0,  261,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   54,    0,    0,   52,    0,    0,    0,  177,    0,
    0,  177,    0,    0,  719,    0,    0,  196,    0,    0,
    0,    0,    0,    0,    0,  177,  177,  279,    0,    0,
  211,    0,    0,  211,    2,    0,  211,    0,    0,    0,
    3,    0,    0,  281,  282,    0,    0,    0,    0,    0,
  211,  211,    0,    0,    0,  211,  176,  176,  176,    0,
  177,    0,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,   15,    0,    0,    0,   16,   17,
   18,   19,   20,    0,   21,  211,  211,    0,   22,   23,
   24,   25,  177,   26,    0,   27,    0,   28,  193,  193,
   29,    0,    0,  267,   30,   31,   32,    0,   33,   34,
    0,   35,   36,   37,   38,    0,  211,  211,  176,    0,
    0,   39,   40,   41,    0,  267,  267,    0,  261,    0,
   42,   43,   44,   45,   46,   47,  194,    2,    0,  194,
    0,    0,   48,    3,    0,    0,    0,    0,  176,    0,
  261,  261,    0,  194,  194,    0,    0,    0,  194,    0,
  193,    0,    0,    0,    0,    4,    5,    6,    7,    8,
    9,   10,   11,   12,   13,    0,   14,   15,    0,    0,
    0,   16,   17,   18,   19,   20,    0,   21,  194,    0,
  193,   22,   23,   24,   25,  542,   26,    0,   27,    0,
   28,    0,    0,   29,    0,  716,  717,   30,   31,   32,
    0,   33,   34,    0,   35,   36,   37,   38,    0,  194,
  194,    0,    0,    0,   39,   40,   41,    0,    0,  177,
  177,  177,    0,   42,   43,   44,   45,   46,   47,    0,
   51,   59,    0,   57,    0,   48,   60,   55,    0,    0,
   49,  708,   50,    0,  211,  211,  211,  713,  714,    0,
    0,  376,  378,    0,  381,  383,   56,    0,    0,  211,
  211,   53,    0,    0,  733,  734,  735,  736,  737,  738,
  739,  740,  741,  742,  743,  744,    0,    0,    0,    0,
    0,  177,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   58,   92,   92,   92,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  211,    0,    0,    0,
    0,  177,    0,    0,    0,   51,   59,    0,   57,    0,
   54,   60,   55,   52,    0,   49,    0,   50,    0,    0,
    0,    0,    0,    0,   55,   55,  211,    0,    0,  178,
    0,   56,  178,   55,   55,    0,   53,  194,  194,  194,
    0,    0,    0,    0,    0,    0,  178,  178,    0,    0,
    0,    0,  194,  194,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   58,    0,
    0,    0,    0,    0,  726,  720,    0,    0,    0,  724,
  721,  178,  722,  723,  725,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   54,    0,    0,   52,  194,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  187,
  179,    0,    0,  178,  185,  182,    0,  183,  184,  186,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  194,
    0,  719,  180,    0,  181,    0,    0,    0,    0,    0,
    0,    0,  205,    0,    0,  205,    2,  205,  205,  205,
  205,    0,    3,    0,    0,    0,    0,    0,    0,    0,
    0,  718,  205,  205,  205,    0,  205,  205,    0,    0,
    0,    0,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,    0,    0,
   16,   17,   18,   19,   20,    0,   21,  205,  205,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
  548,    0,   29,    0,    0,    0,   30,   31,   32,    0,
   33,   34,    0,   35,   36,   37,   38,    0,  205,  205,
    0,    2,    0,   39,   40,   41,    0,    3,    0,    0,
    0,    0,   42,   43,   44,   45,   46,   47,    0,    0,
  178,  178,  178,    0,   48,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,  646,   28,    0,  179,   29,    0,  179,
  715,   30,   31,   32,    0,   33,   34,    0,   35,   36,
   37,   38,  178,  179,  179,    0,    0,    0,   39,   40,
   41,    0,  716,  717,    0,    0,    0,   42,   43,   44,
   45,   46,   47,    0,   51,   59,    0,   57,    0,   48,
   60,   55,  178,    0,   49,    0,   50,    0,  179,    0,
    0,  167,  168,  169,  170,  171,  172,  173,  174,    0,
   56,  180,    0,    0,  180,   53,  205,  205,  205,  175,
    0,    0,    0,    0,    0,    0,    0,    0,  180,  180,
  179,  205,  205,  205,  205,  205,  205,  205,  205,  205,
  205,    0,    0,    0,  275,  275,    0,   58,  275,  275,
  275,  275,  275,  275,  275,    0,    0,    0,    0,    0,
    0,    0,    0,  180,    0,    0,  275,    0,    0,    0,
    0,    0,    0,    0,   54,    0,  648,   52,  205,    0,
    0,    0,    0,    0,    0,    0,    0,   51,   59,    0,
   57,    0,    0,   60,   55,  180,    0,   49,    0,   50,
    0,  275,    0,    0,    0,    0,    0,    0,  205,    0,
    0,  181,    0,   56,  181,    0,    0,    0,   53,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  181,  181,
    0,  275,  726,  720,    0,    0,    0,  724,  721,    0,
  722,  723,  725,    0,    0,    0,    0,    0,    0,    0,
   58,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  181,    0,    0,    0,  179,  179,  179,
    0,    0,    0,    0,    0,    0,    0,   54,    0,    0,
   52,    0,    0,    0,  182,    0,    0,  182,  187,  719,
    0,    0,    0,  185,  182,  181,  183,  184,  186,    0,
    0,  182,  182,    0,    0,    0,    0,    0,    0,    0,
    2,  180,    0,  181,    0,    0,    3,    0,    0,  718,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  179,
    0,    0,  180,  180,  180,    0,  182,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,    0,    0,   16,   17,   18,   19,   20,  179,
   21,  246,    0,  200,   22,   23,   24,   25,  182,   26,
  275,   27,    0,   28,    0,    0,   29,    0,    0,    0,
   30,   31,   32,    0,   33,   34,    0,   35,   36,   37,
   38,    0,  275,  275,  180,    0,    0,   39,   40,   41,
    0,    0,    0,    0,    0,    0,   42,   43,   44,   45,
   46,   47,  183,    2,    0,  183,    0,    0,   48,    3,
    0,    0,    0,    0,  180,    0,    0,    0,    0,  183,
  183,    0,  181,  181,  181,    0,    0,    0,    0,    0,
    0,    4,    5,    6,    7,    8,    9,   10,   11,   12,
   13,    0,   14,   15,    0,    0,    0,   16,   17,   18,
   19,   20,    0,   21,  183,    0,    0,   22,   23,   24,
   25,    0,   26,  665,   27,    0,   28,    0,    0,   29,
  716,  717,    0,   30,   31,   32,    0,   33,   34,    0,
   35,   36,   37,   38,  181,    0,  183,    0,    0,    0,
   39,   40,   41,    0,    0,  182,  182,  182,    0,   42,
   43,   44,   45,   46,   47,    0,   51,   59,    0,   57,
    0,   48,   60,   55,  181,    0,   49,    0,   50,    0,
  167,  168,  169,  170,  171,  172,  173,  174,    0,    0,
  184,    0,   56,  184,    0,    0,    0,   53,  175,    0,
    0,    0,    0,    0,    0,    0,    0,  184,  184,    0,
    0,    0,    0,    0,    0,    0,    0,  182,  189,  190,
  191,  192,  193,  194,  195,  196,  197,  198,  199,   58,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  184,    0,    0,    0,    0,  182,    0,    0,
    0,    0,    0,    0,    0,    0,   54,  268,  679,   52,
  268,    0,  268,  268,  268,  268,    0,    0,    0,   51,
   59,    0,   57,    0,  184,   60,   55,    0,  268,   49,
    0,   50,    0,  183,  183,  183,    0,    0,    0,    0,
    0,    0,    0,    0,  168,   56,    0,  168,  166,    0,
   53,  166,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  168,  168,  268,    0,  166,  166,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  268,    0,  183,  168,    0,    0,    0,
  166,    0,    0,    0,    0,    0,    0,    0,    0,   54,
    0,  760,   52,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  183,    0,    0,  168,    0,
    0,    0,  166,    0,    0,    0,    0,    0,  266,    0,
    0,  266,    2,  266,  266,  266,  266,    0,    3,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  266,
    0,  184,  184,  184,    0,    0,    0,    0,    0,    0,
    4,    5,    6,    7,    8,    9,   10,   11,   12,   13,
    0,   14,   15,    0,    0,    0,   16,   17,   18,   19,
   20,    0,   21,    0,  266,    0,   22,   23,   24,   25,
    0,   26,    0,   27,    0,   28,    0,    0,   29,    0,
    0,    0,   30,   31,   32,    0,   33,   34,    0,   35,
   36,   37,   38,  184,  266,    0,    0,    0,    0,   39,
   40,   41,  268,    0,    0,    0,    0,    0,   42,   43,
   44,   45,   46,   47,    0,    2,    0,    0,    0,    0,
   48,    3,    0,  184,  268,  268,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  168,  168,  168,    0,  166,
  166,  166,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,    0,    0,    0,   22,
   23,   24,   25,    0,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,   32,    0,   33,
   34,    0,   35,   36,   37,   38,    0,  168,    0,    0,
    0,  166,   39,   40,   41,    0,    0,    0,    0,    0,
    0,   42,   43,   44,   45,   46,   47,    0,   51,   59,
    0,   57,    0,   48,   60,   55,    0,  168,   49,    0,
   50,  166,    0,  266,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   56,    0,    0,    0,    0,   53,
    0,    0,    0,    0,    0,  266,  266,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   58,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   54,    0,
  762,   52,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   51,   59,    0,   57,    0,    0,   60,   55,    0,
    0,   49,    0,   50,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   56,    0,    0,
    0,    0,   53,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   58,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   54,    0,  763,   52,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  212,    0,    0,  212,    2,    0,  212,    0,    0,    0,
    3,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  212,  212,    0,    0,    0,  212,    0,    0,    0,    0,
    0,    0,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,   15,    0,    0,    0,   16,   17,
   18,   19,   20,    0,   21,  212,  212,    0,   22,   23,
   24,   25,    0,   26,    0,   27,    0,   28,    0,    0,
   29,    0,    0,    0,   30,   31,   32,    0,   33,   34,
    0,   35,   36,   37,   38,    0,  212,  212,    0,    0,
    0,   39,   40,   41,    0,    0,    0,    0,    0,    0,
   42,   43,   44,   45,   46,   47,    0,    2,    0,    0,
    0,    0,   48,    3,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    4,    5,    6,    7,    8,
    9,   10,   11,   12,   13,    0,   14,   15,    0,    0,
    0,   16,   17,   18,   19,   20,    0,   21,    0,    0,
    0,   22,   23,   24,   25,    0,   26,    0,   27,    0,
   28,    0,    0,   29,    0,    0,    0,   30,   31,   32,
    0,   33,   34,    0,   35,   36,   37,   38,    0,    0,
    0,    0,    0,    0,   39,   40,   41,    0,    0,    0,
    0,    0,    0,   42,   43,   44,   45,   46,   47,    0,
   51,   59,    0,   57,    0,   48,   60,   55,    0,    0,
   49,    0,   50,    0,  212,  212,  212,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   56,    0,    0,  212,
  212,   53,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   58,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  212,    0,    0,    0,
    0,    0,    0,    0,    0,   51,   59,    0,   57,    0,
   54,   60,   55,   52,    0,   49,    0,   50,    0,    0,
    0,    0,    0,    0,    0,    0,  212,    0,    0,    0,
  434,   56,    0,    0,    0,    0,   53,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   58,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   54,    0,    0,   52,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  187,  179,    0,    0,    0,  185,  182,    0,  183,
  184,  186,  206,    0,    0,  206,    2,  206,  206,  206,
  206,    0,    3,    0,  180,    0,  181,    0,    0,    0,
    0,    0,  206,  206,  206,    0,  206,  206,    0,    0,
    0,    0,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,   15,    0,  178,    0,
   16,   17,   18,   19,   20,    0,   21,  206,  206,    0,
   22,   23,   24,   25,    0,   26,    0,   27,    0,   28,
    0,    0,   29,    0,    0,    0,   30,   31,   32,    0,
   33,   34,    0,   35,   36,   37,   38,    0,  206,  206,
    0,    2,    0,   39,   40,   41,    0,    3,    0,    0,
    0,    0,   42,   43,   44,   45,   46,   47,    0,    0,
    0,    0,    0,    0,   48,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,   15,    0,    0,    0,   16,   17,   18,   19,   20,
    0,   21,    0,    0,    0,   22,   23,   24,   25,    0,
   26,    0,   27,    0,   28,    0,    0,   29,    0,    0,
    0,   30,   31,    0,    0,   33,   34,    0,   35,   36,
   37,   38,    0,    0,    0,    0,    0,    0,   39,   40,
   41,    0,    0,    0,    0,    0,    0,   42,   43,   44,
   45,   46,   47,    0,   51,   59,    0,   57,    0,   48,
   60,   55,    0,    0,   49,    0,   50,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  438,
   56,    0,    0,    0,    0,   53,  206,  206,  206,    0,
    0,    0,    0,  167,  168,  169,  170,  171,  172,  173,
  174,  206,  206,  206,  206,  206,  206,  206,  206,  206,
  206,  175,    0,    0,    0,    0,    0,   58,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   51,
   59,    0,   57,    0,   54,   60,   55,   52,  206,   49,
    0,   50,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  447,   56,    0,    0,    0,    0,
   53,    0,    0,    0,    0,    0,    0,    0,  206,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   58,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   54,
    0,    0,   52,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   51,
   59,    0,   57,    0,    0,   60,   55,    0,    0,   49,
    0,   50,    0,    0,    0,    0,    0,    0,    0,    0,
    2,    0,    0,    0,  580,   56,    3,    0,    0,    0,
   53,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   15,    0,   58,    0,   16,   17,   18,   19,   20,    0,
   21,    0,    0,    0,   22,   23,   24,   25,    0,   26,
    0,   27,    0,   28,    0,    0,   29,    0,    0,   54,
   30,   31,   52,    0,   33,   34,    0,   35,   36,   37,
   38,    0,    0,    0,    0,    2,    0,   39,   40,   41,
    0,    3,    0,    0,    0,    0,   42,   43,   44,   45,
   46,   47,    0,    0,    0,    0,    0,    0,   48,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,    0,    0,   16,
   17,   18,   19,   20,    0,   21,    0,    0,    0,   22,
   23,   24,   25,    0,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,    0,    0,   33,
   34,    0,   35,   36,   37,   38,    0,    0,    0,    0,
    0,    0,   39,   40,   41,    0,    0,    0,    0,    0,
    0,   42,   43,   44,   45,   46,   47,    0,    0,    0,
  187,  179,    0,   48,    0,  185,  182,    0,  183,  184,
  186,  198,    0,    0,  198,    2,  198,  198,  198,  198,
    0,    3,    0,  180,    0,  181,  176,    0,    0,    0,
    0,  198,  198,  198,    0,  198,  198,    0,    0,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   15,    0,  178,    0,   16,
   17,   18,   19,   20,    0,   21,  198,  198,    0,   22,
   23,   24,   25,    0,   26,    0,   27,    0,   28,    0,
    0,   29,    0,    0,    0,   30,   31,  177,    0,   33,
   34,    0,   35,   36,   37,   38,    0,  198,  198,    0,
    0,    0,   39,   40,   41,    0,    0,    0,    0,    0,
    0,   42,   43,   44,   45,   46,   47,    0,   51,   59,
    0,   57,    0,   48,   60,   55,    0,    0,   49,    0,
   50,  209,    0,    0,  209,    0,    0,  209,    0,    0,
    0,    0,    0,  610,   56,    0,    0,    0,    0,   53,
    0,  209,  209,    0,    0,    0,  209,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   58,    0,    0,    0,    0,  209,  209,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   51,   59,    0,   57,    0,   54,   60,
   55,   52,    0,   49,    0,   50,    0,  209,  209,    0,
    0,    0,    0,    0,    0,  162,  163,  164,    0,   56,
    0,    0,    0,    0,   53,  198,  198,  198,    0,    0,
  165,  166,  167,  168,  169,  170,  171,  172,  173,  174,
  198,  198,  198,  198,  198,  198,  198,  198,  198,  198,
  175,    0,    0,    0,    0,    0,   58,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   54,    0,    0,   52,  198,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  404,    0,    0,
    0,    0,    0,  167,  167,    0,  167,  198,    0,  167,
  167,    0,    0,  167,    0,  167,    0,    0,    0,    0,
    0,    0,    0,    0,    2,    0,    0,    0,    0,    0,
    3,    0,    0,    0,  167,  209,  209,  209,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  209,  209,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,   15,    0,  167,    0,   16,   17,
   18,   19,   20,    0,   21,    0,    0,    0,   22,   23,
   24,   25,    0,   26,    0,   27,    0,   28,    0,    0,
   29,    0,    0,    0,   30,   31,  167,  209,   33,   34,
    0,   35,   36,   37,   38,    0,    0,    0,    0,    2,
    0,   39,   40,   41,    0,    3,    0,    0,    0,    0,
   42,   43,   44,   45,   46,   47,    0,  209,    0,    0,
    0,    0,   48,    0,    0,    0,    0,    4,    5,    6,
    7,    8,    9,   10,   11,   12,   13,    0,   14,   15,
    0,    0,    0,   16,   17,   18,   19,   20,    0,   21,
    0,    0,    0,   22,   23,   24,   25,    0,   26,    0,
   27,    0,   28,    0,    0,   29,    0,    0,    0,   30,
   31,    0,    0,   33,   34,    0,   35,   36,   37,   38,
    0,    0,    0,    0,    0,    0,   39,   40,   41,    0,
    0,    0,    0,    0,    0,   42,   43,   44,   45,   46,
   47,    0,    0,    0,    0,    0,    0,   48,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  167,  167,  167,
  167,  167,    0,    0,    0,  167,    0,    0,    0,    0,
    0,   51,   59,    0,   57,    0,    0,   60,   55,    0,
    0,   49,    0,   50,    0,    0,    0,  167,  167,  167,
  167,  167,  167,  167,  167,  167,  167,  124,  167,    0,
    0,    0,   53,  167,  167,  167,  167,  167,    0,    0,
    0,    0,    0,  167,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   58,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  167,  167,    0,
    0,    0,    0,    0,    0,  167,  167,  167,  167,  167,
  167,    0,    0,    0,   52,    0,    0,  167,    0,    0,
    0,    0,    0,    0,   51,   59,    0,   57,    0,    0,
   60,   55,    0,    0,   49,    0,   50,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  126,    0,    0,    0,    0,   53,    0,    0,    0,    0,
    0,    0,    0,  187,  179,    0,    0,    0,  185,  182,
    0,  183,  184,  186,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  180,   58,  181,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   51,
   59,    0,   57,    0,    0,   60,   55,   52,    0,   49,
  178,   50,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  130,    0,    0,    0,    0,
   53,    0,    0,    0,    0,    0,    0,    2,    0,    0,
  177,    0,    0,    3,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   58,    0,    0,    4,    5,    6,    7,    8,
    9,   10,   11,   12,   13,    0,   14,    0,    0,    0,
    0,   16,   17,   18,   19,   20,    0,    0,    0,    0,
    0,   22,   52,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  304,  304,    0,    0,  114,
  304,  304,  114,  304,  304,  304,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   40,   41,    0,  304,    0,
  304,  304,    0,   42,   43,   44,   45,   46,   47,    0,
    2,    0,    0,    0,    0,   48,    3,    0,    0,   51,
   59,    0,   57,    0,    0,   60,   55,  226,    0,   49,
    0,   50,  304,    0,    0,    0,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
   53,    0,    0,    0,   16,   17,   18,   19,   20,    0,
    0,    0,  304,    0,   22,  167,  168,  169,  170,  171,
  172,  173,  174,    0,    0,    0,    0,    0,    0,  187,
  179,    0,   58,  175,  185,  182,    0,  183,  184,  186,
    0,    0,    0,    0,    0,    2,    0,    0,   40,   41,
    0,    3,  180,    0,  181,  176,   42,   43,   44,   45,
   46,   47,   52,    0,    0,    0,    0,    0,   48,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,    0,  178,    0,    0,   16,
   17,   18,   19,   20,    0,   51,   59,    0,   57,   22,
  269,   60,   55,    0,    0,   49,    0,   50,    0,    0,
    0,    0,    0,    0,    0,    0,  177,    0,    0,    0,
    0,    0,    0,    0,    0,    0,   53,    0,    0,    0,
    0,    0,    0,   40,   41,    0,    0,    0,    0,    0,
    0,   42,   43,   44,   45,   46,   47,    0,    0,    0,
  304,  304,  304,   48,    0,    0,    0,    0,   58,    0,
    0,    0,    0,    0,    0,  304,  304,  304,  304,  304,
  304,  304,  304,  304,  304,  306,  306,    0,    0,    0,
    0,    0,    0,    0,    0,  304,    0,    0,   52,    0,
    0,    0,    0,    0,    0,    2,    0,    0,    0,    0,
    0,    3,    0,    0,   51,   59,    0,   57,    0,  344,
   60,   55,    0,    0,   49,    0,   50,    0,    0,    0,
    0,    0,    0,    4,    5,    6,    7,    8,    9,   10,
   11,   12,   13,    0,   14,   53,    0,    0,    0,   16,
   17,   18,   19,   20,    0,    0,    0,    0,    0,   22,
    0,    0,    0,    0,  162,  163,  164,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   58,    0,  165,
  166,  167,  168,  169,  170,  171,  172,  173,  174,    0,
    0,    0,    0,   40,   41,    0,    0,    0,    0,  175,
    0,   42,   43,   44,   45,   46,   47,   52,    0,    0,
    0,    0,    0,   48,    0,    0,    0,   51,   59,    0,
   57,    0,  467,   60,   55,    0,    0,   49,    0,   50,
    0,    2,    0,    0,    0,    0,    0,    3,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   53,    0,
    0,    0,    0,    0,    0,    0,  524,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,    0,    0,    0,    0,   16,   17,   18,   19,   20,
   58,    0,    0,    0,    0,   22,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   51,   59,    0,   57,    0,  469,   60,   55,
   52,    0,   49,    0,   50,    0,    0,    0,    0,   40,
   41,    0,    0,    0,    0,    0,    0,   42,   43,   44,
   45,   46,   47,   53,    0,    0,    0,    0,    0,   48,
    2,    0,    0,    0,    0,    0,    3,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   58,    0,    0,    4,    5,
    6,    7,    8,    9,   10,   11,   12,   13,    0,   14,
    0,    0,    0,    0,   16,   17,   18,   19,   20,    0,
    0,    0,    0,    0,   22,   52,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   51,   59,    0,   57,    0,  485,   60,   55,   40,   41,
   49,    0,   50,    0,    0,    0,   42,   43,   44,   45,
   46,   47,    0,    2,    0,    0,    0,    0,   48,    3,
    0,   53,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    4,    5,    6,    7,    8,    9,   10,   11,   12,
   13,    0,   14,   58,    0,    0,    0,   16,   17,   18,
   19,   20,    0,    0,    0,    0,    0,   22,    0,    0,
    0,    0,    0,    0,    0,   51,   59,    0,   57,    0,
  565,   60,   55,   52,    0,   49,    0,   50,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    2,    0,
    0,   40,   41,    0,    3,    0,   53,    0,    0,   42,
   43,   44,   45,   46,   47,    0,    0,    0,    0,    0,
    0,   48,    0,    0,    0,    0,    4,    5,    6,    7,
    8,    9,   10,   11,   12,   13,    0,   14,   58,    0,
    0,    0,   16,   17,   18,   19,   20,    0,    0,    0,
    0,    0,   22,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   52,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   51,   59,
    0,   57,    0,    0,   60,   55,   40,   41,   49,    0,
   50,    0,    0,    0,   42,   43,   44,   45,   46,   47,
    0,    0,    0,    0,    0,    0,   48,    0,    0,   53,
    0,    0,    0,    0,    0,    0,    2,    0,    0,    0,
    0,    0,    3,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   58,    0,    0,    4,    5,    6,    7,    8,    9,
   10,   11,   12,   13,    0,   14,    0,    0,    0,    0,
   16,   17,   18,   19,   20,    0,    0,    0,    0,    0,
   22,   52,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   51,   59,    0,
   57,    0,    0,   60,   55,    0,    0,   49,    0,   50,
    0,    2,    0,    0,   40,   41,    0,    3,    0,    0,
    0,    0,   42,   43,   44,   45,   46,   47,   53,    0,
    0,    0,    0,    0,   48,    0,    0,    0,    0,    4,
    5,    6,    7,    8,    9,   10,   11,   12,   13,    0,
   14,    0,    0,    0,    0,   16,   17,   18,   19,   20,
   58,    0,    0,    0,    0,   22,    0,    0,  210,    0,
    0,  210,    0,    0,  210,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  210,  210,
   52,    0,    0,  210,    0,    0,    0,    0,    0,   40,
   41,    0,    0,    0,    0,    0,    0,   42,   43,   44,
   45,   46,   47,    0,    2,    0,    0,    0,    0,   48,
    3,    0,    0,  210,  210,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    4,    5,    6,    7,    8,    9,   10,   11,
   12,   13,    0,   14,  210,  210,    0,    0,   16,   17,
   18,   19,   20,    0,    0,    0,    0,    0,   22,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   40,   41,    0,    0,    0,    0,    0,    0,
   42,   43,   44,   45,   46,   47,    0,    0,    0,    0,
    0,    0,   48,    2,    0,    0,    0,    0,    0,    3,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    4,    5,    6,    7,    8,    9,   10,   11,   12,
   13,    0,   14,    0,    0,    0,    0,   16,   17,   18,
  410,   20,    0,    0,    0,    0,    0,   22,  287,  287,
    0,  234,  287,  287,  287,  287,  287,  287,  287,    0,
    0,    0,  210,  210,  210,    0,    0,    0,    0,  287,
  287,  287,    0,  287,  287,    0,    0,  210,  210,    0,
    0,   40,   41,    0,    0,    0,    0,    0,    0,   42,
   43,   44,   45,   46,   47,    0,    0,    0,    0,    0,
    0,   48,    0,    0,  287,  287,  239,  239,    0,  239,
  239,  239,  239,  239,  239,  239,  239,    0,    0,    0,
    0,    0,    0,    0,  210,    0,    0,  239,  239,  239,
    0,  239,  239,    0,    0,  287,  287,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  210,    0,    0,    0,    0,    0,
    0,    0,  239,  239,    0,  319,  319,    0,  314,  319,
  319,  319,  319,  319,  319,  319,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  319,  319,  319,  319,
  319,  319,    0,  239,  239,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  319,  319,    0,  320,  320,    0,  315,  320,  320,
  320,  320,  320,  320,  320,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  320,  320,  320,  320,  320,
  320,    0,  319,  319,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  287,  287,  287,    0,  187,  179,    0,
  320,  320,  185,  182,    0,  183,  184,  186,  287,  287,
  287,  287,  287,  287,  287,  287,  287,  287,    0,    0,
  180,    0,  181,    0,    0,    0,    0,    0,  287,    0,
    0,  320,  320,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  239,  239,  239,  178,  287,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  239,  239,  239,  239,
  239,  239,  239,  239,  239,  239,    0,    0,    0,    0,
    0,    0,    0,    0,  177,  287,  239,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  238,    0,    0,    0,    0,    0,    0,    0,
  319,  319,  319,  239,  319,  319,  319,  319,  319,  319,
  319,  319,  319,  319,  319,  319,  319,  319,  319,  319,
  319,  319,  319,  319,  319,  319,  319,    0,    0,    0,
    0,    0,    0,  239,    0,  319,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  238,    0,    0,    0,    0,    0,    0,    0,    0,  320,
  320,  320,  319,  320,  320,  320,  320,  320,  320,  320,
  320,  320,  320,  320,  320,  320,  320,  320,  320,  320,
  320,  320,  320,  320,  320,  320,    0,    0,    0,    0,
    0,  319,  319,    0,  320,    0,    0,    0,    0,    0,
    0,  314,  314,    0,  314,  314,  314,  314,  314,  314,
  314,  314,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  320,  314,  314,  314,  314,  314,  314,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  175,    0,    0,
  320,  320,    0,    0,    0,    0,    0,  314,  314,    0,
  329,  329,    0,  329,  329,  329,  329,  329,  329,  329,
  329,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  329,  329,  329,  329,  329,  329,    0,  314,  314,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  329,  329,    0,  315,
  315,    0,  315,  315,  315,  315,  315,  315,  315,  315,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  315,  315,  315,  315,  315,  315,    0,  329,  329,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  315,  315,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  315,  315,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  314,  314,  314,    0,
  314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
  314,  314,  314,  314,  314,  314,  314,  314,  314,  314,
  314,  314,  314,    0,    0,    0,    0,    0,    0,    0,
    0,  314,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  329,  329,  329,  314,  329,
  329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
  329,  329,  329,  329,  329,  329,  329,  329,  329,  329,
  329,  329,    0,    0,    0,    0,    0,  314,  314,    0,
  329,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  315,  315,  315,  329,  315,  315,
  315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
  315,  315,  315,  315,  315,  315,  315,  315,  315,  315,
  315,    0,    0,    0,    0,    0,  329,  329,    0,  315,
    0,    0,    0,    0,    0,    0,  313,  313,    0,    0,
  313,  313,  313,  313,  313,  313,  313,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  315,  313,  313,  313,
  313,  313,  313,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  315,  315,    0,    0,    0,
    0,    0,  313,  313,    0,  308,  308,    0,    0,  308,
  308,  308,  308,  308,  308,  308,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  308,  308,  308,  308,
  308,  308,    0,  313,  313,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  308,  308,    0,  307,  307,    0,    0,  307,  307,
  307,  307,  307,  307,  307,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  307,  307,  307,  307,  307,
  307,    0,  308,  308,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  307,  307,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  307,  307,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  313,  313,  313,    0,  313,  313,  313,  313,  313,
  313,  313,  313,  313,  313,  313,  313,  313,  313,  313,
  313,  313,  313,  313,  313,  313,  313,  313,    0,    0,
    0,    0,    0,    0,    0,    0,  313,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  308,  308,  308,  313,  308,  308,  308,  308,  308,  308,
  308,  308,  308,  308,  308,  308,  308,  308,  308,  308,
  308,  308,  308,  308,  308,  308,  308,    0,    0,    0,
    0,    0,  313,  313,    0,  308,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  307,
  307,  307,  308,  307,  307,  307,  307,  307,  307,  307,
  307,  307,  307,  307,  307,  307,  307,  307,  307,  307,
  307,  307,  307,  307,  307,  307,    0,    0,    0,    0,
    0,    0,  308,    0,  307,    0,    0,  304,  304,    0,
    0,  304,  304,  304,  304,  304,  304,  304,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  304,  304,
  304,  307,  304,  304,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  319,  319,    0,  319,  319,  319,
  319,  319,  319,  319,  319,    0,    0,    0,    0,    0,
    0,  307,    0,  304,  304,  319,  319,  319,    0,  319,
  319,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  304,  304,    0,    0,    0,    0,
  319,  319,  320,  320,    0,  320,  320,  320,  320,  320,
  320,  320,  320,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  320,  320,  320,    0,  320,  320,    0,
    0,  319,  319,    0,    0,    0,    0,    0,    0,  242,
  242,    0,  242,  242,  242,  242,  242,  242,  242,  242,
    0,  214,    0,    0,  214,    0,    0,  214,  320,  320,
  242,  242,  242,    0,  242,  242,    0,    0,    0,    0,
    0,  214,  214,    0,    0,    0,  214,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  320,
  320,    0,    0,    0,    0,  242,  242,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  214,  214,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  242,  242,    0,    0,
    0,    0,  304,  304,  304,    0,    0,  214,  214,    0,
    0,    0,    0,    0,    0,    0,    0,  304,  304,  304,
  304,  304,  304,  304,  304,  304,  304,  306,  306,    0,
    0,    0,    0,    0,    0,    0,    0,  304,    0,  319,
  319,  319,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  319,  319,  319,  319,  319,  319,
  319,  319,  319,  319,  304,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  319,    0,    0,    0,    0,    0,
    0,    0,    0,  241,  241,    0,  241,  241,  241,  241,
  241,  241,  241,  241,  304,    0,    0,  320,  320,  320,
    0,  319,    0,    0,  241,  241,  241,    0,  241,  241,
    0,    0,  320,  320,  320,  320,  320,  320,  320,  320,
  320,  320,    0,    0,    0,    0,    0,    0,    0,    0,
  319,  319,  320,    0,  242,  242,  242,    0,    0,  241,
  241,    0,    0,    0,    0,  214,  214,  214,    0,  242,
  242,  242,  242,  242,  242,  242,  242,  242,  242,  320,
  214,  214,  214,  214,  214,  214,    0,    0,    0,  242,
  241,  241,  246,  246,    0,    0,  246,  246,  246,  246,
  246,  246,  246,    0,    0,    0,    0,    0,  320,  320,
    0,    0,    0,  246,  246,  246,  242,  246,  246,    0,
    0,    0,  216,    0,    0,  216,    0,  214,  216,  289,
  289,    0,    0,  289,  289,  289,  289,  289,  289,  289,
    0,    0,  216,  216,    0,    0,  242,  216,  246,  246,
  289,  289,  289,    0,  289,  289,    0,  214,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  216,  216,  246,
  246,    0,    0,    0,    0,  289,  289,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  216,  216,
    0,    0,    0,    0,  249,  249,  289,  289,  249,  249,
  249,  249,  249,  249,  249,    0,    0,    0,  241,  241,
  241,    0,    0,    0,    0,  249,  249,  249,    0,  249,
  249,    0,    0,  241,  241,  241,  241,  241,  241,  241,
  241,  241,  241,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  241,    0,    0,    0,    0,    0,    0,
  249,  249,  221,  221,    0,    0,  221,  221,  221,  221,
  221,  221,  221,    0,    0,    0,    0,    0,    0,    0,
  241,    0,    0,  221,  221,  221,    0,  221,  221,    0,
    0,  249,  249,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  246,  246,  246,
  241,    0,    0,    0,    0,    0,    0,    0,  221,  221,
    0,    0,  246,  246,  246,  246,  246,  246,  246,  246,
  246,  246,    0,    0,    0,    0,  216,  216,  216,    0,
    0,    0,  246,    0,  289,  289,  289,    0,    0,  221,
  221,  216,  216,  216,  216,  216,  216,    0,    0,  289,
  289,  289,  289,  289,  289,  289,  289,  289,  289,  246,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  289,
    0,    0,  222,  222,    0,    0,  222,  222,  222,  222,
  222,  222,  222,    0,    0,    0,    0,    0,  216,  246,
    0,    0,    0,  222,  222,  222,  289,  222,  222,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  216,  249,
  249,  249,    0,    0,    0,    0,  289,    0,  222,  222,
    0,    0,    0,    0,  249,  249,  249,  249,  249,  249,
  249,  249,  249,  249,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  249,    0,    0,    0,    0,  222,
  222,  223,  223,    0,    0,  223,  223,  223,  223,  223,
  223,  223,    0,    0,    0,    0,    0,  221,  221,  221,
    0,  249,  223,  223,  223,    0,  223,  223,    0,    0,
    0,    0,  221,  221,  221,  221,  221,  221,  221,  221,
  221,  221,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  249,    0,    0,    0,  224,  224,  223,  223,  224,
  224,  224,  224,  224,  224,  224,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  224,  224,  224,  221,
  224,  224,    0,    0,    0,    0,    0,    0,  223,  223,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  221,
    0,  224,  224,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  222,  222,  222,
    0,    0,  224,  224,    0,    0,    0,    0,    0,    0,
    0,    0,  222,  222,  222,  222,  222,  222,  222,  222,
  222,  222,    0,    0,  225,  225,    0,    0,  225,  225,
  225,  225,  225,  225,  225,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  225,  225,  225,    0,  225,
  225,    0,    0,    0,    0,    0,    0,    0,    0,  222,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  225,  225,    0,    0,    0,    0,  223,  223,  223,  222,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  223,  223,  223,  223,  223,  223,  223,  223,  223,
  223,  225,  225,  226,  226,    0,    0,  226,  226,  226,
  226,  226,  226,  226,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  226,  226,  226,    0,  226,  226,
  224,  224,  224,    0,    0,    0,    0,    0,  223,    0,
    0,    0,    0,    0,    0,  224,  224,  224,  224,  224,
  224,  224,  224,  224,  224,    0,    0,  227,  227,  226,
  226,  227,  227,  227,  227,  227,  227,  227,  223,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  227,  227,
  227,    0,  227,  227,    0,    0,    0,    0,    0,    0,
  226,  226,  224,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  207,  207,  227,  227,  207,  207,  207,  207,  207,
  207,  207,  224,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  207,  207,  207,    0,  207,  207,    0,  225,
  225,  225,    0,    0,  227,  227,    0,    0,    0,    0,
    0,    0,    0,    0,  225,  225,  225,  225,  225,  225,
  225,  225,  225,  225,    0,    0,    0,  207,  207,  208,
  208,    0,    0,  208,  208,  208,  208,  208,  208,  208,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  208,  208,  208,    0,  208,  208,    0,    0,  207,  207,
    0,  225,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  208,  208,    0,  226,  226,
  226,  225,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  226,  226,  226,  226,  226,  226,  226,
  226,  226,  226,    0,  229,  229,  208,  208,  229,  229,
  229,  229,  229,  229,  229,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  229,  229,  229,    0,  229,
  229,    0,  227,  227,  227,    0,    0,    0,    0,    0,
  226,    0,    0,    0,    0,    0,    0,  227,  227,  227,
  227,  227,  227,  227,  227,  227,  227,    0,    0,    0,
  229,  229,    0,    0,    0,    0,    0,    0,    0,    0,
  226,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  207,  207,  207,    0,
    0,  229,  229,    0,  227,    0,    0,    0,    0,    0,
    0,  207,  207,  207,  207,  207,  207,  207,  207,  207,
  207,    0,    0,  200,  200,    0,    0,  200,  200,  200,
  200,  200,  200,  200,  227,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  200,  200,  200,    0,  200,  200,
    0,    0,    0,    0,  208,  208,  208,    0,  207,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  208,
  208,  208,  208,  208,  208,  208,  208,  208,  208,  200,
  200,    0,    0,    0,    0,    0,    0,    0,  207,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  200,  200,    0,    0,    0,    0,  208,    0,    0,    0,
    0,    0,  201,  201,    0,    0,  201,  201,  201,  201,
  201,  201,  201,    0,    0,    0,    0,    0,    0,  229,
  229,  229,    0,  201,  201,  201,  208,  201,  201,    0,
    0,    0,    0,    0,  229,  229,  229,  229,  229,  229,
  229,  229,  229,  229,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  201,  201,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  229,    0,    0,    0,    0,    0,    0,    0,  201,
  201,    0,    0,    0,    0,    0,    0,  202,  202,    0,
    0,  202,  202,  202,  202,  202,  202,  202,    0,    0,
    0,  229,    0,    0,    0,    0,    0,    0,  202,  202,
  202,    0,  202,  202,    0,    0,    0,    0,  200,  200,
  200,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  200,  200,  200,  200,  200,  200,  200,
  200,  200,  200,  202,  202,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  202,  202,    0,    0,    0,    0,
  200,    0,    0,    0,    0,    0,    0,  199,    0,    0,
  199,    0,  199,  199,  199,  199,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  199,  199,  199,
  200,  199,  199,    0,    0,    0,    0,  201,  201,  201,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  201,  201,  201,  201,  201,  201,  201,  201,
  201,  201,  199,  199,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  213,    0,    0,  213,    0,
    0,  213,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  199,  199,  213,  213,    0,    0,  201,
  213,    0,  197,    0,    0,  197,    0,  197,  197,  197,
  197,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  197,  197,  197,    0,  197,  197,    0,  201,
  213,  213,  202,  202,  202,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  202,  202,  202,
  202,  202,  202,  202,  202,  202,  202,  197,  197,    0,
    0,  213,  213,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  203,    0,    0,  203,    0,    0,  203,    0,  197,  197,
    0,    0,    0,    0,  202,    0,    0,    0,    0,    0,
  203,  203,  203,    0,  203,  203,    0,    0,    0,  215,
    0,    0,  215,    0,    0,  215,    0,  204,    0,    0,
  204,    0,    0,  204,  202,    0,    0,    0,    0,  215,
  215,  199,  199,  199,  215,  203,  203,  204,  204,  204,
    0,  204,  204,    0,    0,    0,  199,  199,  199,  199,
  199,  199,  199,  199,  199,  199,    0,    0,    0,    0,
    0,    0,    0,    0,  215,  215,  203,  203,    0,    0,
    0,    0,  204,  204,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  199,    0,  215,  215,    0,    0,  213,
  213,  213,    0,  204,  204,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  213,  213,  213,  213,  213,  213,
    0,    0,    0,  199,    0,    0,  197,  197,  197,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  197,  197,  197,  197,  197,  197,  197,  197,  197,
  197,    0,  195,    0,    0,  195,    0,    0,  195,  304,
  304,  213,    0,  117,  304,  304,  117,  304,  304,  304,
    0,    0,  195,  195,    0,    0,    0,  195,    0,    0,
    0,    0,  304,    0,  304,  304,    0,    0,  197,    0,
    0,  213,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  203,  203,  203,  195,  195,    0,
    0,    0,    0,    0,    0,    0,  304,    0,  197,  203,
  203,  203,  203,  203,  203,  203,  203,  203,  203,    0,
    0,    0,    0,  215,  215,  215,    0,    0,  195,  195,
    0,  204,  204,  204,    0,    0,  304,    0,  215,  215,
  215,  215,  215,  215,    0,    0,  204,  204,  204,  204,
  204,  204,  204,  204,  204,  204,  203,  187,  179,    0,
    0,    0,  185,  182,    0,  183,  184,  186,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  588,  589,
  180,    0,  181,  176,    0,  215,  203,    0,    0,    0,
    0,    0,    0,  204,    0,    0,  304,  304,    0,    0,
    0,  304,  304,    0,  304,  304,  304,    0,    0,    0,
    0,    0,    0,    0,  178,  215,    0,    0,    0,  304,
    0,  304,  304,  204,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  177,    0,    0,    0,    0,    0,
    0,    0,    0,  304,  303,  303,    0,    0,  113,  303,
  303,  113,  303,  303,  303,    0,  195,  195,  195,    0,
    0,    0,    0,    0,  304,  304,  304,  303,    0,  303,
  303,  195,  195,  304,    0,    0,    0,    0,    0,  304,
  304,  304,  304,  304,  304,  304,  304,  304,  304,  306,
  306,    0,    0,    0,    0,    0,    0,    0,    0,  304,
    0,  303,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  195,  303,
  303,    0,    0,  116,  303,  303,  116,  303,  303,  303,
    0,  303,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  303,    0,  303,  303,    0,    0,  195,    0,
    0,    0,    0,    0,    0,    0,    0,  187,  179,    0,
    0,    0,  185,  182,    0,  183,  184,  186,    0,    0,
    0,    0,  162,  163,  164,    0,  303,    0,    0,  188,
  180,    0,  181,  176,    0,    0,    0,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  303,  175,    0,    0,
    0,  304,  304,  304,  178,  187,  179,    0,    0,  293,
  185,  182,    0,  183,  184,  186,  304,  304,  304,  304,
  304,  304,  304,  304,  304,  304,  306,  306,  180,    0,
  181,  176,  187,  179,  177,    0,  304,  185,  182,    0,
  183,  184,  186,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  242,  180,    0,  181,  176,  303,
  303,  303,  178,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  303,  303,  303,  303,  303,  303,
  303,  303,  303,  303,    0,    0,    0,    0,    0,  178,
  187,  179,  177,    0,  303,  185,  182,    0,  183,  184,
  186,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  243,  180,    0,  181,  176,    0,    0,  177,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  303,  303,  303,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  178,    0,  303,
  303,  303,  303,  303,  303,  303,  303,  303,  303,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  303,
    0,    0,  162,  163,  164,    0,    0,  177,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  175,    0,    0,
  187,  179,    0,    0,  363,  185,  182,    0,  183,  184,
  186,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  162,  163,  164,  180,    0,  181,  176,    0,    0,    0,
    0,    0,    0,    0,    0,  165,  166,  167,  168,  169,
  170,  171,  172,  173,  174,    0,    0,  162,  163,  164,
    0,    0,    0,    0,    0,  175,    0,  178,    0,    0,
    0,    0,  165,  166,  167,  168,  169,  170,  171,  172,
  173,  174,    0,    0,    0,  187,  179,    0,    0,  366,
  185,  182,  175,  183,  184,  186,    0,  177,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  180,    0,
  181,  176,    0,    0,    0,  162,  163,  164,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  165,  166,  167,  168,  169,  170,  171,  172,  173,  174,
    0,    0,  178,  187,  179,    0,    0,  367,  185,  182,
  175,  183,  184,  186,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  180,    0,  181,  176,
    0,    0,  177,    0,    0,    0,    0,    0,    0,    0,
    0,  187,  179,    0,    0,  371,  185,  182,    0,  183,
  184,  186,    0,    0,    0,    0,    0,    0,    0,    0,
  178,    0,    0,    0,  180,    0,  181,  176,  187,  179,
    0,    0,  379,  185,  182,    0,  183,  184,  186,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  177,  180,    0,  181,  176,  162,  163,  164,  178,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  165,  166,  167,  168,  169,  170,  171,  172,  173,  174,
    0,    0,    0,    0,    0,  178,  187,  179,  177,    0,
  175,  185,  182,    0,  183,  184,  186,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  382,  180,
    0,  181,  176,  187,  179,  177,    0,    0,  185,  182,
    0,  183,  184,  186,    0,    0,    0,    0,    0,    0,
  162,  163,  164,    0,    0,    0,  180,    0,  181,  176,
    0,    0,    0,  178,    0,  165,  166,  167,  168,  169,
  170,  171,  172,  173,  174,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  175,    0,    0,    0,    0,
  178,    0,    0,  177,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  162,  163,
  164,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  177,  413,    0,  165,  166,  167,  168,  169,  170,  171,
  172,  173,  174,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  175,    0,    0,  162,  163,  164,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  165,  166,  167,  168,  169,  170,  171,  172,  173,
  174,    0,    0,  162,  163,  164,    0,  187,  179,    0,
    0,  175,  185,  182,    0,  183,  184,  186,  165,  166,
  167,  168,  169,  170,  171,  172,  173,  174,  414,    0,
  180,    0,  181,  176,  187,  179,    0,    0,  175,  185,
  182,    0,  183,  184,  186,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  180,    0,  181,
  176,  162,  163,  164,  178,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  165,  166,  167,  168,
  169,  170,  171,  172,  173,  174,    0,    0,  162,  163,
  164,  178,  187,  179,  177,    0,  175,  185,  182,    0,
  183,  184,  186,  165,  166,  167,  168,  169,  170,  171,
  172,  173,  174,    0,    0,  180,    0,  181,  176,  187,
  179,  177,  431,  175,  185,  182,    0,  183,  184,  186,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  180,    0,  181,  176,    0,    0,    0,  178,
    0,    0,    0,    0,    0,    0,    0,    0,  187,  179,
    0,    0,    0,  185,  182,    0,  183,  184,  186,    0,
    0,    0,    0,    0,    0,    0,  178,    0,    0,  177,
  455,  180,    0,  181,  176,  187,  179,    0,    0,  497,
  185,  182,    0,  183,  184,  186,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  177,  477,  180,    0,
  181,  176,  187,  179,    0,  178,    0,  185,  182,    0,
  183,  184,  186,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  162,  163,  164,  180,    0,  181,  176,    0,
    0,    0,  178,    0,    0,  177,  488,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,  162,
  163,  164,    0,    0,    0,    0,    0,  175,    0,  178,
    0,    0,  177,    0,  165,  166,  167,  168,  169,  170,
  171,  172,  173,  174,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  175,    0,    0,    0,    0,  177,
  535,  187,  179,    0,    0,    0,  185,  182,    0,  183,
  184,  186,    0,    0,    0,    0,    0,  162,  163,  164,
    0,    0,    0,    0,  180,    0,  181,  176,    0,    0,
    0,    0,  165,  166,  167,  168,  169,  170,  171,  172,
  173,  174,    0,    0,  162,  163,  164,    0,    0,    0,
    0,    0,  175,    0,    0,    0,    0,  567,  178,  165,
  166,  167,  168,  169,  170,  171,  172,  173,  174,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  175,
    0,    0,    0,  162,  163,  164,    0,    0,  177,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  165,  166,
  167,  168,  169,  170,  171,  172,  173,  174,    0,    0,
  162,  163,  164,    0,    0,    0,    0,    0,  175,    0,
    0,    0,    0,    0,    0,  165,  166,  167,  168,  169,
  170,  171,  172,  173,  174,    0,    0,  162,  163,  164,
    0,    0,    0,    0,    0,  175,    0,    0,    0,    0,
    0,    0,  165,  166,  167,  168,  169,  170,  171,  172,
  173,  174,    0,    0,    0,  187,  179,    0,    0,  644,
  185,  182,  175,  183,  184,  186,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  180,    0,
  181,  176,    0,    0,  187,  179,    0,    0,  663,  185,
  182,    0,  183,  184,  186,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  180,    0,  181,
  176,    0,  178,    0,    0,    0,  162,  163,  164,    0,
  288,  288,    0,    0,    0,  288,  288,    0,  288,  288,
  288,  165,  166,  167,  168,  169,  170,  171,  172,  173,
  174,  178,  177,  288,    0,  288,  288,  187,  179,    0,
    0,  175,  185,  182,    0,  183,  184,  186,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  180,  177,  181,  176,  303,  303,    0,  288,    0,  303,
  303,    0,  303,  303,  303,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  303,    0,  303,
  303,    0,    0,    0,  178,    0,    0,  288,  288,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  187,  179,
    0,    0,    0,  185,  182,    0,  183,  184,  186,    0,
    0,  303,    0,    0,  177,    0,    0,    0,    0,    0,
    0,  180,    0,  181,  176,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  303,  187,  179,    0,    0,    0,  185,  182,    0,
  183,  184,  186,    0,    0,  178,    0,    0,    0,    0,
  162,  163,  164,    0,    0,  180,    0,  181,  176,    0,
    0,    0,    0,    0,    0,  165,  166,  167,  168,  169,
  170,  171,  172,  173,  174,  177,    0,    0,    0,  162,
  163,  164,    0,    0,    0,  175,    0,    0,    0,  178,
    0,    0,    0,    0,  165,  166,  167,  168,  169,  170,
  171,  172,  173,  174,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  175,  288,  288,  288,    0,  177,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  288,  288,  288,  288,  288,  288,  288,  288,  288,  288,
    0,    0,  162,  163,  164,    0,    0,    0,    0,    0,
  288,    0,    0,    0,    0,    0,    0,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,  303,
  303,  303,    0,    0,    0,    0,    0,  175,    0,    0,
    0,    0,    0,    0,  303,  303,  303,  303,  303,  303,
  303,  303,  303,  303,    0,    0,    0,  187,  179,    0,
    0,    0,  185,  182,  303,  183,  184,  186,    0,    0,
    0,    0,    0,    0,  163,  164,    0,    0,    0,    0,
  180,    0,  181,  176,    0,    0,    0,    0,  165,  166,
  167,  168,  169,  170,  171,  172,  173,  174,    0,    0,
    0,  187,  179,    0,    0,    0,  185,  182,  175,  183,
  184,  186,    0,    0,  178,    0,    0,    0,    0,  164,
    0,    0,    0,    0,  180,    0,  181,    0,    0,    0,
    0,    0,  165,  166,  167,  168,  169,  170,  171,  172,
  173,  174,    0,    0,  177,    0,    0,    0,    0,    0,
    0,    0,  175,    0,    0,    0,    0,    0,  178,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  177,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  175,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  165,  166,  167,  168,  169,  170,  171,  172,  173,
  174,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  175,
  );
 $GLOBALS['_PHP_PARSER']['yyCheck'] = array(            13,
  134,    1,   40,   36,   41,    3,  224,   44,    6,    7,
    8,    9,   10,   11,   12,  175,   40,   36,   91,   36,
   36,   58,   59,   36,   24,   23,  201,   36,   38,  123,
   36,   36,   30,   31,   36,   33,  211,   91,  125,  123,
   13,   13,   41,   38,   13,   44,  221,   41,   40,  224,
   44,   49,   50,   51,   52,   53,   93,   55,   34,   58,
   59,  210,   58,   39,   63,   59,   37,  125,   59,  123,
   36,   42,   43,  222,   45,   46,   47,  451,   41,   38,
  229,   44,   43,  372,   45,   36,  307,   41,  125,   38,
   44,  305,   41,   91,   93,   58,   59,  305,  287,  288,
   38,    4,    5,   37,  123,   59,   91,  638,   42,   40,
  123,   36,   84,   47,  112,  123,  114,   93,  332,   33,
   96,  119,  120,  121,  332,  123,  125,  123,   41,  660,
   93,  505,  123,  507,   40,   37,   38,  135,  123,  111,
   42,   43,   40,   45,   46,   47,   59,  123,   44,  125,
  353,  149,  339,  340,  341,  342,  343,  344,  300,  301,
  158,  175,  125,   59,  162,  163,  164,  165,  166,  167,
  168,  169,  170,  171,  172,  173,  174,   40,  176,  177,
  178,  179,  180,  181,  182,  183,  184,  185,  186,  187,
   40,  189,  190,  191,  192,  193,  194,  195,  196,  197,
  198,  199,  175,  175,    4,    5,  175,  121,  509,   40,
  499,  209,  210,   40,  212,  213,   41,  256,  216,  217,
  218,  219,   93,   40,  222,  262,  263,  264,  201,  201,
   40,  229,  230,   33,   40,  125,   40,  140,  211,  211,
  327,  328,  145,  146,  147,  148,   44,   44,  221,  221,
   40,  224,  224,  251,  371,   43,  557,   45,  352,  300,
  301,   59,   59,  262,  263,  264,   37,   41,   40,  327,
  328,   42,  305,   40,  307,  493,   47,  426,  277,  278,
  353,  256,  305,  281,  307,  308,  305,  324,  307,  313,
  307,  307,  305,  594,  307,  209,  210,  307,  307,  262,
  434,  307,  307,  305,  438,  307,  258,   41,  222,  263,
   44,  257,  307,  447,  532,  229,   41,  354,  493,   44,
  480,  121,  355,  260,   41,  324,  297,   44,  261,  305,
  256,  307,  308,  371,  310,  311,  312,  376,  336,  305,
  140,  307,  303,  304,  305,  145,  146,  147,  148,  388,
  389,  371,  313,  351,  305,  354,  307,  532,  307,   41,
  354,  324,   44,  297,   58,   59,  269,  367,  340,  307,
   41,  371,  370,   44,  372,  373,   58,   59,  378,  282,
  305,  297,  307,  285,  286,   44,  257,  258,   59,  260,
  261,  354,  368,  369,  370,  356,  357,  358,  359,  360,
   59,  376,   61,   40,   44,  419,  404,   40,  406,  209,
  210,   93,   41,  388,  389,   44,  414,   41,  457,   59,
   44,  460,  222,   41,   41,  423,   44,   44,  426,  229,
  428,  429,  257,  258,  353,  260,  261,  327,  328,  453,
   44,  344,   59,  125,   40,  305,  580,   43,   41,   45,
  376,   44,   44,  305,   38,   59,  590,   41,   41,  593,
   44,   44,  388,  389,  503,   44,  480,   59,  466,  269,
  316,  374,  375,  607,   44,   59,  610,   44,  476,   59,
   59,  615,  282,  257,  258,  460,  260,  261,   44,   59,
   44,  394,   59,  396,   61,  509,  399,  400,  313,   41,
  514,  499,   44,   59,   59,   59,   38,  480,  480,  423,
   94,  480,  426,  416,  528,  303,  304,  305,   61,  653,
  493,  493,  561,  349,  563,  313,  524,   37,  503,  349,
  126,  457,   42,   43,  460,   45,   46,   47,   59,  539,
  124,  305,  676,  557,  344,  545,  546,   34,  257,  258,
   40,  260,  261,  551,   59,   41,   44,  596,   44,  532,
  532,  324,   41,   61,  467,   44,  469,   41,  356,  357,
  358,  359,  360,   41,  374,  375,   44,  503,  576,  579,
  594,   41,  485,  622,   44,  624,  561,   41,  563,  603,
   41,  307,   38,   44,  394,   41,  396,  500,   44,  399,
  400,   41,   41,   39,   91,   44,   93,   41,  606,   40,
   44,  650,   41,   59,   41,  296,  416,   44,  752,   44,
  754,  596,   41,  423,  758,   44,  426,  351,   41,  668,
   41,   44,   59,  331,  332,  561,  123,  563,  125,   58,
   59,  680,  324,   44,  644,   58,   59,  622,   94,  624,
   63,  326,  327,  328,   41,   91,   40,   93,   41,    4,
    5,   44,  565,  326,  327,  328,   41,  467,  707,  469,
  596,  710,  354,   41,   93,  650,   59,   93,  124,  263,
   93,  326,  327,  328,  125,  485,    0,  123,   41,  125,
  305,  705,   40,  668,  340,  341,  622,  124,  624,  335,
  500,  285,  286,  349,  350,  680,  125,  303,  304,  305,
  371,   94,  125,   40,  728,   61,  730,  313,   59,   33,
   34,   61,   36,  305,  650,   39,   40,   91,  125,   43,
  305,   45,  707,  353,   59,   41,  257,  258,   44,  260,
  261,  124,  668,  696,  697,   59,   58,   59,   60,  354,
   64,   61,   58,   59,  680,   59,   59,   63,   40,  685,
  356,  357,  358,  359,  360,  565,  692,  305,   41,   93,
  696,  697,  698,  699,  352,  285,  286,  353,   93,   59,
   41,  707,   96,   41,  710,   41,  354,   93,   41,  715,
  716,  717,  718,  719,  720,  721,  722,  723,  724,  725,
  726,    0,   44,  257,  258,   44,  260,  261,   40,  123,
  123,  125,  126,   59,   41,   59,   59,  263,  305,  125,
  307,  308,   37,  310,  311,  312,  307,   42,   43,  123,
   45,   46,   47,   61,   33,   34,  263,   36,  307,  125,
   39,   40,  307,   44,   43,   60,   45,   62,   37,  262,
  263,  264,   40,   42,   43,   58,   45,   46,   47,  302,
   59,   59,   41,  354,  277,   64,  353,   61,   59,  305,
   41,  307,  308,   44,  310,  311,  312,  307,   61,  307,
  263,  307,  369,  370,  332,  123,   59,   58,   59,  257,
  258,   61,  260,  261,   44,  305,  331,   96,  339,  340,
  341,  342,  343,  344,  345,  324,  305,   58,   61,  307,
   59,  324,   41,   59,   61,   44,   61,  353,  335,  305,
   40,  335,   93,   61,  123,   40,  125,  126,   40,   58,
   59,   40,  305,  369,  370,  354,  307,   41,   41,   41,
  307,  354,  123,  257,  258,  259,  260,  261,   41,  123,
   41,  265,   41,   93,  125,   41,  262,  263,  264,   41,
  123,   41,   41,  307,   93,  302,  123,   59,  331,  307,
  331,    1,    1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,  444,  298,  299,  300,  301,  302,  303,
  304,  305,  306,  307,   61,  309,  125,  546,  394,  313,
  314,  315,  316,  317,  318,  319,  320,  321,  322,  323,
  674,  325,  326,  327,  328,  329,  330,  331,  324,  333,
  334,  587,  336,  337,  338,  339,  340,  341,  730,  254,
  140,  637,  346,  347,  348,  349,  350,  399,  527,  572,
  710,  355,  356,  357,  358,  359,  360,   91,  354,   93,
  428,  518,   -1,  367,   -1,   -1,   -1,  400,  257,  258,
  259,  260,  261,   -1,   -1,   -1,  265,   37,  283,  284,
  285,  286,   42,   43,   -1,   45,   46,   47,   -1,  123,
   -1,  125,  297,   -1,   -1,   -1,  125,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,  300,  301,  302,  303,  304,  305,  306,  307,   -1,
  309,   -1,   -1,   -1,  313,  314,  315,  316,  317,  318,
  319,  320,  321,  322,  323,   -1,  325,  326,  327,  328,
  329,  330,  331,    0,  333,  334,   -1,  336,  337,  338,
  339,  340,  341,   -1,   -1,   -1,   -1,  346,  347,  348,
  349,  350,   -1,  324,   -1,   -1,  355,  356,  357,  358,
  359,  360,   41,   -1,   -1,   44,   33,   34,  367,   36,
   -1,  125,   39,   40,   -1,   -1,   43,   -1,   45,   58,
   59,   -1,   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   41,   -1,  324,   44,   64,   -1,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
   58,   59,  344,   -1,   93,   -1,   -1,   -1,  257,  258,
   -1,  260,  261,   -1,   -1,  354,   -1,   -1,   -1,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  374,  375,   -1,   93,  125,  257,  258,   -1,
  260,  261,   -1,   -1,   -1,   -1,  123,  324,  125,  126,
   -1,  305,   -1,  307,  308,   -1,  310,  311,  312,   33,
   34,   -1,   36,   -1,   -1,   39,   40,  125,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,  326,  327,  328,
  300,  301,  302,   -1,   -1,   59,   41,   -1,   -1,   44,
   64,  340,  341,  257,  258,   -1,  260,  261,   -1,  353,
  349,  350,   -1,   58,   59,  285,  286,   -1,   -1,  257,
  258,   -1,  260,  261,  368,  369,  370,  297,   -1,   -1,
  340,  341,   96,   -1,   -1,  467,   -1,  469,   -1,  349,
  350,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,
   -1,   -1,   -1,  485,   -1,   -1,   -1,   -1,   -1,  123,
   -1,  125,  126,   -1,  302,   -1,   -1,   -1,  500,   -1,
   -1,   -1,  326,  327,  328,   -1,   -1,   -1,   -1,   -1,
  125,   -1,   -1,  262,  263,  264,  340,  341,   -1,   -1,
  257,  258,  259,  260,  261,  349,  350,   -1,  265,   -1,
   37,   38,  340,  341,   41,   42,   43,   61,   45,   46,
   47,  349,  350,   -1,  262,  263,  264,   -1,   -1,   -1,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,  299,  565,   -1,  302,  303,  304,  305,  306,
  307,   -1,  309,   -1,   -1,  324,  313,  314,  315,  316,
  317,  318,  319,  320,  321,  322,  323,   94,  325,  326,
  327,  328,  329,  330,  331,   -1,  333,  334,   -1,  336,
  337,  338,  339,  340,  341,  354,  324,   -1,   -1,  346,
  347,  348,  349,  350,   -1,   -1,   -1,  124,  355,  356,
  357,  358,  359,  360,   41,  259,   -1,   44,   -1,   -1,
  367,  265,   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   63,  262,  263,  264,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,   93,   94,   -1,  313,
  314,  315,  316,   -1,  318,   91,  320,   93,  322,   -1,
   96,  325,   -1,   -1,   -1,  329,  330,  331,   -1,  333,
  334,   -1,  336,  337,  338,  339,   -1,  124,  125,  324,
   -1,   -1,  346,  347,  348,   -1,   -1,  123,   -1,  125,
   -1,  355,  356,  357,  358,  359,  360,   -1,   33,   34,
   -1,   36,   -1,  367,   39,   40,   -1,   -1,   43,  354,
   45,   -1,  266,  267,  268,  269,  270,  271,  272,  273,
  274,  275,  276,   -1,   59,   41,  263,   -1,   44,   64,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,  285,  286,
  257,  258,   -1,  260,  261,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   41,   38,   -1,
   44,   41,   -1,   43,   44,   45,   46,   93,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,  123,   59,
  125,  126,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,
   -1,   33,   34,   -1,   36,   -1,   -1,   39,   40,  125,
   -1,   43,   -1,   45,   59,  262,  263,  264,   -1,   93,
   -1,   -1,   -1,   -1,   94,   -1,   -1,   59,   -1,   -1,
  277,  278,   64,  340,  341,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  349,  350,   -1,   -1,   -1,   37,   38,   94,
   -1,  125,   42,   43,  124,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,  305,
   -1,  307,  308,   -1,  310,  311,  312,  324,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,   -1,  126,   -1,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   94,   -1,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,  353,   -1,   -1,
   38,   -1,   -1,   41,  259,   -1,   44,   -1,   -1,   -1,
  265,   -1,   -1,  369,  370,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   63,  262,  263,  264,   -1,
   93,   -1,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,  304,
  305,  306,  307,   -1,  309,   93,   94,   -1,  313,  314,
  315,  316,  125,  318,   -1,  320,   -1,  322,  262,  263,
  325,   -1,   -1,  263,  329,  330,  331,   -1,  333,  334,
   -1,  336,  337,  338,  339,   -1,  124,  125,  324,   -1,
   -1,  346,  347,  348,   -1,  285,  286,   -1,  263,   -1,
  355,  356,  357,  358,  359,  360,   41,  259,   -1,   44,
   -1,   -1,  367,  265,   -1,   -1,   -1,   -1,  354,   -1,
  285,  286,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,
  324,   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,
   -1,  303,  304,  305,  306,  307,   -1,  309,   93,   -1,
  354,  313,  314,  315,  316,  317,  318,   -1,  320,   -1,
  322,   -1,   -1,  325,   -1,  285,  286,  329,  330,  331,
   -1,  333,  334,   -1,  336,  337,  338,  339,   -1,  124,
  125,   -1,   -1,   -1,  346,  347,  348,   -1,   -1,  262,
  263,  264,   -1,  355,  356,  357,  358,  359,  360,   -1,
   33,   34,   -1,   36,   -1,  367,   39,   40,   -1,   -1,
   43,  692,   45,   -1,  262,  263,  264,  698,  699,   -1,
   -1,  257,  258,   -1,  260,  261,   59,   -1,   -1,  277,
  278,   64,   -1,   -1,  715,  716,  717,  718,  719,  720,
  721,  722,  723,  724,  725,  726,   -1,   -1,   -1,   -1,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,  300,  301,  302,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,
   -1,  354,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,
  123,   39,   40,  126,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,  340,  341,  354,   -1,   -1,   41,
   -1,   59,   44,  349,  350,   -1,   64,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,
   -1,   -1,  277,  278,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,
   43,   93,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   38,   -1,   -1,  125,   42,   43,   -1,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,
   -1,   94,   60,   -1,   62,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   38,   -1,   -1,   41,  259,   43,   44,   45,
   46,   -1,  265,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,
  303,  304,  305,  306,  307,   -1,  309,   93,   94,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
  323,   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,
  333,  334,   -1,  336,  337,  338,  339,   -1,  124,  125,
   -1,  259,   -1,  346,  347,  348,   -1,  265,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,   -1,   -1,
  262,  263,  264,   -1,  367,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,  321,  322,   -1,   41,  325,   -1,   44,
  263,  329,  330,  331,   -1,  333,  334,   -1,  336,  337,
  338,  339,  324,   58,   59,   -1,   -1,   -1,  346,  347,
  348,   -1,  285,  286,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,   -1,   33,   34,   -1,   36,   -1,  367,
   39,   40,  354,   -1,   43,   -1,   45,   -1,   93,   -1,
   -1,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   59,   41,   -1,   -1,   44,   64,  262,  263,  264,  297,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
  125,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,   -1,   -1,   37,   38,   -1,   96,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  123,   -1,  125,  126,  324,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,
   36,   -1,   -1,   39,   40,  125,   -1,   43,   -1,   45,
   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,
   -1,   41,   -1,   59,   44,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   -1,  124,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   93,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,
  126,   -1,   -1,   -1,   41,   -1,   -1,   44,   37,   94,
   -1,   -1,   -1,   42,   43,  125,   45,   46,   47,   -1,
   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  259,   60,   -1,   62,   -1,   -1,  265,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,
   -1,   -1,  262,  263,  264,   -1,   93,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,  354,
  309,   59,   -1,   61,  313,  314,  315,  316,  125,  318,
  263,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,   -1,
  329,  330,  331,   -1,  333,  334,   -1,  336,  337,  338,
  339,   -1,  285,  286,  324,   -1,   -1,  346,  347,  348,
   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,   41,  259,   -1,   44,   -1,   -1,  367,  265,
   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,   -1,   58,
   59,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,  299,   -1,   -1,   -1,  303,  304,  305,
  306,  307,   -1,  309,   93,   -1,   -1,  313,  314,  315,
  316,   -1,  318,  319,  320,   -1,  322,   -1,   -1,  325,
  285,  286,   -1,  329,  330,  331,   -1,  333,  334,   -1,
  336,  337,  338,  339,  324,   -1,  125,   -1,   -1,   -1,
  346,  347,  348,   -1,   -1,  262,  263,  264,   -1,  355,
  356,  357,  358,  359,  360,   -1,   33,   34,   -1,   36,
   -1,  367,   39,   40,  354,   -1,   43,   -1,   45,   -1,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   41,   -1,   59,   44,   -1,   -1,   -1,   64,  297,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,   96,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   -1,   -1,   -1,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  123,   38,  125,  126,
   41,   -1,   43,   44,   45,   46,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,  125,   39,   40,   -1,   59,   43,
   -1,   45,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   41,   59,   -1,   44,   41,   -1,
   64,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   94,   -1,   58,   59,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,   -1,  324,   93,   -1,   -1,   -1,
   93,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,  125,   -1,
   -1,   -1,  125,   -1,   -1,   -1,   -1,   -1,   38,   -1,
   -1,   41,  259,   43,   44,   45,   46,   -1,  265,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,
  287,  288,  289,  290,  291,  292,  293,  294,  295,  296,
   -1,  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,
  307,   -1,  309,   -1,   94,   -1,  313,  314,  315,  316,
   -1,  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,
   -1,   -1,  329,  330,  331,   -1,  333,  334,   -1,  336,
  337,  338,  339,  324,  124,   -1,   -1,   -1,   -1,  346,
  347,  348,  263,   -1,   -1,   -1,   -1,   -1,  355,  356,
  357,  358,  359,  360,   -1,  259,   -1,   -1,   -1,   -1,
  367,  265,   -1,  354,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  262,
  263,  264,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,  313,
  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,  333,
  334,   -1,  336,  337,  338,  339,   -1,  324,   -1,   -1,
   -1,  324,  346,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,   -1,   33,   34,
   -1,   36,   -1,  367,   39,   40,   -1,  354,   43,   -1,
   45,  354,   -1,  263,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,   -1,
  125,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   33,   34,   -1,   36,   -1,   -1,   39,   40,   -1,
   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,
   -1,   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  123,   -1,  125,  126,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   38,   -1,   -1,   41,  259,   -1,   44,   -1,   -1,   -1,
  265,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,   -1,
   -1,   -1,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,  304,
  305,  306,  307,   -1,  309,   93,   94,   -1,  313,  314,
  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,   -1,
  325,   -1,   -1,   -1,  329,  330,  331,   -1,  333,  334,
   -1,  336,  337,  338,  339,   -1,  124,  125,   -1,   -1,
   -1,  346,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,   -1,  259,   -1,   -1,
   -1,   -1,  367,  265,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,  299,   -1,   -1,
   -1,  303,  304,  305,  306,  307,   -1,  309,   -1,   -1,
   -1,  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,
  322,   -1,   -1,  325,   -1,   -1,   -1,  329,  330,  331,
   -1,  333,  334,   -1,  336,  337,  338,  339,   -1,   -1,
   -1,   -1,   -1,   -1,  346,  347,  348,   -1,   -1,   -1,
   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,   -1,
   33,   34,   -1,   36,   -1,  367,   39,   40,   -1,   -1,
   43,   -1,   45,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,  277,
  278,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,
  123,   39,   40,  126,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,
   58,   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  123,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,
   46,   47,   38,   -1,   -1,   41,  259,   43,   44,   45,
   46,   -1,  265,   -1,   60,   -1,   62,   -1,   -1,   -1,
   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,  299,   -1,   94,   -1,
  303,  304,  305,  306,  307,   -1,  309,   93,   94,   -1,
  313,  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,
   -1,   -1,  325,   -1,   -1,   -1,  329,  330,  331,   -1,
  333,  334,   -1,  336,  337,  338,  339,   -1,  124,  125,
   -1,  259,   -1,  346,  347,  348,   -1,  265,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,   -1,   -1,
   -1,   -1,   -1,   -1,  367,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,  299,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   -1,  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,
  318,   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,
   -1,  329,  330,   -1,   -1,  333,  334,   -1,  336,  337,
  338,  339,   -1,   -1,   -1,   -1,   -1,   -1,  346,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,   -1,   33,   34,   -1,   36,   -1,  367,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,
   59,   -1,   -1,   -1,   -1,   64,  262,  263,  264,   -1,
   -1,   -1,   -1,  279,  280,  281,  282,  283,  284,  285,
  286,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  297,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,  123,   39,   40,  126,  324,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  123,
   -1,   -1,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   -1,   -1,   43,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  259,   -1,   -1,   -1,   58,   59,  265,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
  299,   -1,   96,   -1,  303,  304,  305,  306,  307,   -1,
  309,   -1,   -1,   -1,  313,  314,  315,  316,   -1,  318,
   -1,  320,   -1,  322,   -1,   -1,  325,   -1,   -1,  123,
  329,  330,  126,   -1,  333,  334,   -1,  336,  337,  338,
  339,   -1,   -1,   -1,   -1,  259,   -1,  346,  347,  348,
   -1,  265,   -1,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,   -1,   -1,   -1,   -1,   -1,   -1,  367,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,  309,   -1,   -1,   -1,  313,
  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,   -1,   -1,  333,
  334,   -1,  336,  337,  338,  339,   -1,   -1,   -1,   -1,
   -1,   -1,  346,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,   -1,   -1,   -1,
   37,   38,   -1,  367,   -1,   42,   43,   -1,   45,   46,
   47,   38,   -1,   -1,   41,  259,   43,   44,   45,   46,
   -1,  265,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,  299,   -1,   94,   -1,  303,
  304,  305,  306,  307,   -1,  309,   93,   94,   -1,  313,
  314,  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,
   -1,  325,   -1,   -1,   -1,  329,  330,  124,   -1,  333,
  334,   -1,  336,  337,  338,  339,   -1,  124,  125,   -1,
   -1,   -1,  346,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,   -1,   33,   34,
   -1,   36,   -1,  367,   39,   40,   -1,   -1,   43,   -1,
   45,   38,   -1,   -1,   41,   -1,   -1,   44,   -1,   -1,
   -1,   -1,   -1,   58,   59,   -1,   -1,   -1,   -1,   64,
   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   34,   -1,   36,   -1,  123,   39,
   40,  126,   -1,   43,   -1,   45,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   59,
   -1,   -1,   -1,   -1,   64,  262,  263,  264,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  297,   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  123,   -1,   -1,  126,  324,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   33,   34,   -1,   36,  354,   -1,   39,
   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,   -1,   -1,
  265,   -1,   -1,   -1,   64,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  299,   -1,   96,   -1,  303,  304,
  305,  306,  307,   -1,  309,   -1,   -1,   -1,  313,  314,
  315,  316,   -1,  318,   -1,  320,   -1,  322,   -1,   -1,
  325,   -1,   -1,   -1,  329,  330,  126,  324,  333,  334,
   -1,  336,  337,  338,  339,   -1,   -1,   -1,   -1,  259,
   -1,  346,  347,  348,   -1,  265,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,   -1,  354,   -1,   -1,
   -1,   -1,  367,   -1,   -1,   -1,   -1,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   -1,  298,  299,
   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,  309,
   -1,   -1,   -1,  313,  314,  315,  316,   -1,  318,   -1,
  320,   -1,  322,   -1,   -1,  325,   -1,   -1,   -1,  329,
  330,   -1,   -1,  333,  334,   -1,  336,  337,  338,  339,
   -1,   -1,   -1,   -1,   -1,   -1,  346,  347,  348,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,   -1,   -1,   -1,   -1,   -1,   -1,  367,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  257,  258,  259,
  260,  261,   -1,   -1,   -1,  265,   -1,   -1,   -1,   -1,
   -1,   33,   34,   -1,   36,   -1,   -1,   39,   40,   -1,
   -1,   43,   -1,   45,   -1,   -1,   -1,  287,  288,  289,
  290,  291,  292,  293,  294,  295,  296,   59,  298,   -1,
   -1,   -1,   64,  303,  304,  305,  306,  307,   -1,   -1,
   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   96,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  347,  348,   -1,
   -1,   -1,   -1,   -1,   -1,  355,  356,  357,  358,  359,
  360,   -1,   -1,   -1,  126,   -1,   -1,  367,   -1,   -1,
   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,   -1,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   59,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   96,   62,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,  126,   -1,   43,
   94,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   -1,   -1,   -1,   -1,
   64,   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,
  124,   -1,   -1,  265,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   96,   -1,   -1,  287,  288,  289,  290,  291,
  292,  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,
   -1,  303,  304,  305,  306,  307,   -1,   -1,   -1,   -1,
   -1,  313,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  347,  348,   -1,   60,   -1,
   62,   63,   -1,  355,  356,  357,  358,  359,  360,   -1,
  259,   -1,   -1,   -1,   -1,  367,  265,   -1,   -1,   33,
   34,   -1,   36,   -1,   -1,   39,   40,   41,   -1,   43,
   -1,   45,   94,   -1,   -1,   -1,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
   64,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
   -1,   -1,  124,   -1,  313,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   38,   -1,   96,  297,   42,   43,   -1,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,  347,  348,
   -1,  265,   60,   -1,   62,   63,  355,  356,  357,  358,
  359,  360,  126,   -1,   -1,   -1,   -1,   -1,  367,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   -1,   94,   -1,   -1,  303,
  304,  305,  306,  307,   -1,   33,   34,   -1,   36,  313,
   38,   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   64,   -1,   -1,   -1,
   -1,   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,
   -1,  355,  356,  357,  358,  359,  360,   -1,   -1,   -1,
  262,  263,  264,  367,   -1,   -1,   -1,   -1,   96,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,   -1,
   -1,  265,   -1,   -1,   33,   34,   -1,   36,   -1,   38,
   39,   40,   -1,   -1,   43,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,  287,  288,  289,  290,  291,  292,  293,
  294,  295,  296,   -1,  298,   64,   -1,   -1,   -1,  303,
  304,  305,  306,  307,   -1,   -1,   -1,   -1,   -1,  313,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   96,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,  297,
   -1,  355,  356,  357,  358,  359,  360,  126,   -1,   -1,
   -1,   -1,   -1,  367,   -1,   -1,   -1,   33,   34,   -1,
   36,   -1,   38,   39,   40,   -1,   -1,   43,   -1,   45,
   -1,  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   64,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   96,   -1,   -1,   -1,   -1,  313,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   33,   34,   -1,   36,   -1,   38,   39,   40,
  126,   -1,   43,   -1,   45,   -1,   -1,   -1,   -1,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,   64,   -1,   -1,   -1,   -1,   -1,  367,
  259,   -1,   -1,   -1,   -1,   -1,  265,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   96,   -1,   -1,  287,  288,
  289,  290,  291,  292,  293,  294,  295,  296,   -1,  298,
   -1,   -1,   -1,   -1,  303,  304,  305,  306,  307,   -1,
   -1,   -1,   -1,   -1,  313,  126,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   33,   34,   -1,   36,   -1,   38,   39,   40,  347,  348,
   43,   -1,   45,   -1,   -1,   -1,  355,  356,  357,  358,
  359,  360,   -1,  259,   -1,   -1,   -1,   -1,  367,  265,
   -1,   64,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,   96,   -1,   -1,   -1,  303,  304,  305,
  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,   36,   -1,
   38,   39,   40,  126,   -1,   43,   -1,   45,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,
   -1,  347,  348,   -1,  265,   -1,   64,   -1,   -1,  355,
  356,  357,  358,  359,  360,   -1,   -1,   -1,   -1,   -1,
   -1,  367,   -1,   -1,   -1,   -1,  287,  288,  289,  290,
  291,  292,  293,  294,  295,  296,   -1,  298,   96,   -1,
   -1,   -1,  303,  304,  305,  306,  307,   -1,   -1,   -1,
   -1,   -1,  313,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  126,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,
   -1,   36,   -1,   -1,   39,   40,  347,  348,   43,   -1,
   45,   -1,   -1,   -1,  355,  356,  357,  358,  359,  360,
   -1,   -1,   -1,   -1,   -1,   -1,  367,   -1,   -1,   64,
   -1,   -1,   -1,   -1,   -1,   -1,  259,   -1,   -1,   -1,
   -1,   -1,  265,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   96,   -1,   -1,  287,  288,  289,  290,  291,  292,
  293,  294,  295,  296,   -1,  298,   -1,   -1,   -1,   -1,
  303,  304,  305,  306,  307,   -1,   -1,   -1,   -1,   -1,
  313,  126,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   33,   34,   -1,
   36,   -1,   -1,   39,   40,   -1,   -1,   43,   -1,   45,
   -1,  259,   -1,   -1,  347,  348,   -1,  265,   -1,   -1,
   -1,   -1,  355,  356,  357,  358,  359,  360,   64,   -1,
   -1,   -1,   -1,   -1,  367,   -1,   -1,   -1,   -1,  287,
  288,  289,  290,  291,  292,  293,  294,  295,  296,   -1,
  298,   -1,   -1,   -1,   -1,  303,  304,  305,  306,  307,
   96,   -1,   -1,   -1,   -1,  313,   -1,   -1,   38,   -1,
   -1,   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
  126,   -1,   -1,   63,   -1,   -1,   -1,   -1,   -1,  347,
  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,  356,  357,
  358,  359,  360,   -1,  259,   -1,   -1,   -1,   -1,  367,
  265,   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  287,  288,  289,  290,  291,  292,  293,  294,
  295,  296,   -1,  298,  124,  125,   -1,   -1,  303,  304,
  305,  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,
  355,  356,  357,  358,  359,  360,   -1,   -1,   -1,   -1,
   -1,   -1,  367,  259,   -1,   -1,   -1,   -1,   -1,  265,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  287,  288,  289,  290,  291,  292,  293,  294,  295,
  296,   -1,  298,   -1,   -1,   -1,   -1,  303,  304,  305,
  306,  307,   -1,   -1,   -1,   -1,   -1,  313,   37,   38,
   -1,   40,   41,   42,   43,   44,   45,   46,   47,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   58,
   59,   60,   -1,   62,   63,   -1,   -1,  277,  278,   -1,
   -1,  347,  348,   -1,   -1,   -1,   -1,   -1,   -1,  355,
  356,  357,  358,  359,  360,   -1,   -1,   -1,   -1,   -1,
   -1,  367,   -1,   -1,   93,   94,   37,   38,   -1,   40,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  324,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   -1,   -1,  124,  125,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  354,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   94,   -1,   37,   38,   -1,   40,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,
   62,   63,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   37,   38,   -1,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,
   63,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  262,  263,  264,   -1,   37,   38,   -1,
   93,   94,   42,   43,   -1,   45,   46,   47,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   60,   -1,   62,   -1,   -1,   -1,   -1,   -1,  297,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   94,  324,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  354,  297,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  371,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,  324,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,   -1,  354,   -1,  297,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  371,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,  324,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,
   -1,  353,  354,   -1,  297,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   40,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  324,   58,   59,   60,   61,   62,   63,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
  353,  354,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,
   37,   38,   -1,   40,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   60,   61,   62,   63,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   37,
   38,   -1,   40,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   61,   62,   63,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,
  266,  267,  268,  269,  270,  271,  272,  273,  274,  275,
  276,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  287,  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  262,  263,  264,  324,  266,
  267,  268,  269,  270,  271,  272,  273,  274,  275,  276,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
  287,  288,   -1,   -1,   -1,   -1,   -1,  353,  354,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,  324,  266,  267,
  268,  269,  270,  271,  272,  273,  274,  275,  276,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   -1,  353,  354,   -1,  297,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  324,   58,   59,   60,
   61,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  353,  354,   -1,   -1,   -1,
   -1,   -1,   93,   94,   -1,   37,   38,   -1,   -1,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,
   62,   63,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   93,   94,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   61,   62,
   63,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  262,  263,  264,   -1,  266,  267,  268,  269,  270,
  271,  272,  273,  274,  275,  276,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,  324,  266,  267,  268,  269,  270,  271,
  272,  273,  274,  275,  276,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,
   -1,   -1,  353,  354,   -1,  297,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,  324,  266,  267,  268,  269,  270,  271,  272,
  273,  274,  275,  276,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  287,  288,   -1,   -1,   -1,   -1,
   -1,   -1,  354,   -1,  297,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,  324,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,  354,   -1,   93,   94,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   93,   94,   37,   38,   -1,   40,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   37,
   38,   -1,   40,   41,   42,   43,   44,   45,   46,   47,
   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   93,   94,
   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,
   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,  287,  288,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,  324,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   37,   38,   -1,   40,   41,   42,   43,
   44,   45,   46,   47,  354,   -1,   -1,  262,  263,  264,
   -1,  324,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  353,  354,  297,   -1,  262,  263,  264,   -1,   -1,   93,
   94,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  324,
  277,  278,  279,  280,  281,  282,   -1,   -1,   -1,  297,
  124,  125,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,  353,  354,
   -1,   -1,   -1,   58,   59,   60,  324,   62,   63,   -1,
   -1,   -1,   38,   -1,   -1,   41,   -1,  324,   44,   37,
   38,   -1,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   58,   59,   -1,   -1,  354,   63,   93,   94,
   58,   59,   60,   -1,   62,   63,   -1,  354,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,  124,
  125,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   37,   38,  124,  125,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  324,   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,  297,   -1,  262,  263,  264,   -1,   -1,  124,
  125,  277,  278,  279,  280,  281,  282,   -1,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,  324,  354,
   -1,   -1,   -1,   58,   59,   60,  324,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,  262,
  263,  264,   -1,   -1,   -1,   -1,  354,   -1,   93,   94,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,  124,
  125,   37,   38,   -1,   -1,   41,   42,   43,   44,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,  324,   58,   59,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  354,   -1,   -1,   -1,   37,   38,   93,   94,   41,
   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,  324,
   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,
   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,  262,  263,  264,  354,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,  124,  125,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,  324,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,   37,   38,   93,
   94,   41,   42,   43,   44,   45,   46,   47,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   93,   94,   41,   42,   43,   44,   45,
   46,   47,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,  262,
  263,  264,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   93,   94,   37,
   38,   -1,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,   -1,  124,  125,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,  262,  263,
  264,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   37,   38,  124,  125,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
  324,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,   -1,
   -1,  124,  125,   -1,  324,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   46,   47,  354,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,  324,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   93,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,  262,
  263,  264,   -1,   58,   59,   60,  354,   62,   63,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   44,   45,   46,   47,   -1,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   93,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,
  324,   -1,   -1,   -1,   -1,   -1,   -1,   38,   -1,   -1,
   41,   -1,   43,   44,   45,   46,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
  354,   62,   63,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  124,  125,   58,   59,   -1,   -1,  324,
   63,   -1,   38,   -1,   -1,   41,   -1,   43,   44,   45,
   46,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,  354,
   93,   94,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   93,   94,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   38,   -1,   -1,   41,   -1,   -1,   44,   -1,  124,  125,
   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,   -1,   -1,
   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,   38,
   -1,   -1,   41,   -1,   -1,   44,   -1,   38,   -1,   -1,
   41,   -1,   -1,   44,  354,   -1,   -1,   -1,   -1,   58,
   59,  262,  263,  264,   63,   93,   94,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   93,   94,  124,  125,   -1,   -1,
   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  324,   -1,  124,  125,   -1,   -1,  262,
  263,  264,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
   -1,   -1,   -1,  354,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,   38,   -1,   -1,   41,   -1,   -1,   44,   37,
   38,  324,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,   -1,   58,   59,   -1,   -1,   -1,   63,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,  324,   -1,
   -1,  354,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   93,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,  354,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  124,  125,
   -1,  262,  263,  264,   -1,   -1,  124,   -1,  277,  278,
  279,  280,  281,  282,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  324,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,  324,  354,   -1,   -1,   -1,
   -1,   -1,   -1,  324,   -1,   -1,   37,   38,   -1,   -1,
   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   94,  354,   -1,   -1,   -1,   60,
   -1,   62,   63,  354,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   94,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   60,   -1,   62,
   63,  277,  278,  124,   -1,   -1,   -1,   -1,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,  287,
  288,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,
   -1,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  324,   37,
   38,   -1,   -1,   41,   42,   43,   44,   45,   46,   47,
   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,  354,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,  262,  263,  264,   -1,   94,   -1,   -1,   59,
   60,   -1,   62,   63,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  297,   -1,   -1,
   -1,  262,  263,  264,   94,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   46,   47,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,  287,  288,   60,   -1,
   62,   63,   37,   38,  124,   -1,  297,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   63,  262,
  263,  264,   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   94,
   37,   38,  124,   -1,  297,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   60,   -1,   62,   63,   -1,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,
   -1,   -1,  262,  263,  264,   -1,   -1,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,  297,   -1,   94,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,
   42,   43,  297,   45,   46,   47,   -1,  124,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,  262,  263,  264,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,   94,   37,   38,   -1,   -1,   41,   42,   43,
  297,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   -1,   -1,   41,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   60,   -1,   62,   63,   37,   38,
   -1,   -1,   41,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,   60,   -1,   62,   63,  262,  263,  264,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,   -1,   -1,   -1,   94,   37,   38,  124,   -1,
  297,   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,
   -1,   62,   63,   37,   38,  124,   -1,   -1,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,   94,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,
   94,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  262,  263,
  264,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  124,  125,   -1,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  297,   -1,   -1,  262,  263,  264,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,   -1,  262,  263,  264,   -1,   37,   38,   -1,
   -1,  297,   42,   43,   -1,   45,   46,   47,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   58,   -1,
   60,   -1,   62,   63,   37,   38,   -1,   -1,  297,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,  262,  263,  264,   94,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,
  281,  282,  283,  284,  285,  286,   -1,   -1,  262,  263,
  264,   94,   37,   38,  124,   -1,  297,   42,   43,   -1,
   45,   46,   47,  277,  278,  279,  280,  281,  282,  283,
  284,  285,  286,   -1,   -1,   60,   -1,   62,   63,   37,
   38,  124,  125,  297,   42,   43,   -1,   45,   46,   47,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   94,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   94,   -1,   -1,  124,
  125,   60,   -1,   62,   63,   37,   38,   -1,   -1,   41,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  124,  125,   60,   -1,
   62,   63,   37,   38,   -1,   94,   -1,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  262,  263,  264,   60,   -1,   62,   63,   -1,
   -1,   -1,   94,   -1,   -1,  124,  125,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,  297,   -1,   94,
   -1,   -1,  124,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,  124,
  125,   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   60,   -1,   62,   63,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,  262,  263,  264,   -1,   -1,   -1,
   -1,   -1,  297,   -1,   -1,   -1,   -1,   93,   94,  277,
  278,  279,  280,  281,  282,  283,  284,  285,  286,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,
   -1,   -1,   -1,  262,  263,  264,   -1,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
  262,  263,  264,   -1,   -1,   -1,   -1,   -1,  297,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,   -1,   -1,  262,  263,  264,
   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,   -1,   37,   38,   -1,   -1,   41,
   42,   43,  297,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   94,   -1,   -1,   -1,  262,  263,  264,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   94,  124,   60,   -1,   62,   63,   37,   38,   -1,
   -1,  297,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   60,  124,   62,   63,   37,   38,   -1,   94,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,   -1,   -1,   94,   -1,   -1,  124,  125,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   94,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,   37,   38,   -1,   -1,   -1,   42,   43,   -1,
   45,   46,   47,   -1,   -1,   94,   -1,   -1,   -1,   -1,
  262,  263,  264,   -1,   -1,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,
  282,  283,  284,  285,  286,  124,   -1,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,  297,   -1,   -1,   -1,   94,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  297,  262,  263,  264,   -1,  124,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  277,  278,  279,  280,  281,  282,  283,  284,  285,  286,
   -1,   -1,  262,  263,  264,   -1,   -1,   -1,   -1,   -1,
  297,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,  262,
  263,  264,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,  277,  278,  279,  280,  281,  282,
  283,  284,  285,  286,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,  297,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,  263,  264,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,   -1,   -1,   -1,  277,  278,
  279,  280,  281,  282,  283,  284,  285,  286,   -1,   -1,
   -1,   37,   38,   -1,   -1,   -1,   42,   43,  297,   45,
   46,   47,   -1,   -1,   94,   -1,   -1,   -1,   -1,  264,
   -1,   -1,   -1,   -1,   60,   -1,   62,   -1,   -1,   -1,
   -1,   -1,  277,  278,  279,  280,  281,  282,  283,  284,
  285,  286,   -1,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  297,   -1,   -1,   -1,   -1,   -1,   94,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  277,  278,  279,
  280,  281,  282,  283,  284,  285,  286,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  297,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  277,  278,  279,  280,  281,  282,  283,  284,  285,
  286,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  297,
  );

  $GLOBALS['_PHP_PARSER']['yyFinal'] = 1;
//t$GLOBALS['_PHP_PARSER']['yyRule'] = array(
//t   "\$accept :  top_statement_list ",
//t    "top_statement_list :  top_statement_list   top_statement ",
//t    "top_statement_list :",
//t    "top_statement :  statement ",
//t    "top_statement :  function_declaration_statement ",
//t    "top_statement :  class_declaration_statement ",
//t    "inner_statement_list :  inner_statement_list   inner_statement ",
//t    "inner_statement_list :",
//t    "inner_statement :  statement ",
//t    "inner_statement :  function_declaration_statement ",
//t    "inner_statement :  class_declaration_statement ",
//t    "statement :  unticked_statement ",
//t    "unticked_statement : '{'  inner_statement_list  '}'",
//t    "unticked_statement :  T_IF  '('  expr  ')'  statement   elseif_list   else_single ",
//t    "unticked_statement :  T_IF  '('  expr  ')' ':'  inner_statement_list   new_elseif_list   new_else_single   T_ENDIF  ';'",
//t    "unticked_statement :  T_WHILE  '('  expr  ')'  while_statement ",
//t    "unticked_statement :  T_DO   statement   T_WHILE  '('  expr  ')' ';'",
//t    "unticked_statement :  T_FOR  '('  for_expr  ';'  for_expr  ';'  for_expr  ')'  for_statement ",
//t    "unticked_statement :  T_SWITCH  '('  expr  ')'  switch_case_list ",
//t    "unticked_statement :  T_BREAK  ';'",
//t    "unticked_statement :  T_BREAK   expr  ';'",
//t    "unticked_statement :  T_CONTINUE  ';'",
//t    "unticked_statement :  T_CONTINUE   expr  ';'",
//t    "unticked_statement :  T_RETURN  ';'",
//t    "unticked_statement :  T_RETURN   expr_without_variable  ';'",
//t    "unticked_statement :  T_RETURN   variable  ';'",
//t    "unticked_statement :  T_GLOBAL   global_var_list  ';'",
//t    "unticked_statement :  T_STATIC   static_var_list  ';'",
//t    "unticked_statement :  T_ECHO   echo_expr_list  ';'",
//t    "unticked_statement :  T_INLINE_HTML ",
//t    "unticked_statement :  expr  ';'",
//t    "unticked_statement :  T_USE   use_filename  ';'",
//t    "unticked_statement :  T_UNSET  '('  unset_variables  ')' ';'",
//t    "unticked_statement :  T_FOREACH  '('  variable   T_AS   w_variable   foreach_optional_arg  ')'  foreach_statement ",
//t    "unticked_statement :  T_FOREACH  '('  expr_without_variable   T_AS   w_variable   foreach_optional_arg  ')'  foreach_statement ",
//t    "unticked_statement :  T_DECLARE  '('  declare_list  ')'  declare_statement ",
//t    "unticked_statement : ';'",
//t    "unticked_statement :  T_TRY  '{'  inner_statement_list  '}'  T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'  additional_catches ",
//t   "\$\$1 :",
//t    "unticked_statement :  T_THROW \$\$1  expr  ';'",
//t    "additional_catches :  non_empty_additional_catches ",
//t    "additional_catches :",
//t    "non_empty_additional_catches :  non_empty_additional_catches   T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'",
//t    "non_empty_additional_catches :  T_CATCH  '('  fully_qualified_class_name   T_VARIABLE  ')' '{'  inner_statement_list  '}'",
//t    "unset_variables :  unset_variable ",
//t    "unset_variables :  unset_variables  ','  unset_variable ",
//t    "unset_variable :  variable ",
//t    "use_filename :  T_CONSTANT_ENCAPSED_STRING ",
//t    "use_filename : '('  T_CONSTANT_ENCAPSED_STRING  ')'",
//t    "function_declaration_statement :  unticked_function_declaration_statement ",
//t    "class_declaration_statement :  unticked_class_declaration_statement ",
//t    "is_reference :",
//t    "is_reference : '&'",
//t   "\$\$2 :",
//t    "unticked_function_declaration_statement :  T_FUNCTION   is_reference   T_STRING \$\$2 '('  parameter_list  ')' '{'  inner_statement_list  '}'",
//t   "\$\$3 :",
//t   "\$\$4 :",
//t    "unticked_class_declaration_statement :\$\$3  class_entry_type   T_STRING   extends_from \$\$4  implements_list  '{'  class_statement_list  '}'",
//t    "class_entry_type :  T_CLASS ",
//t    "class_entry_type :  T_ABSTRACT   T_CLASS ",
//t    "class_entry_type :  T_FINAL   T_CLASS ",
//t    "class_entry_type :  T_INTERFACE ",
//t    "extends_from :",
//t    "extends_from :  T_EXTENDS   fully_qualified_class_name ",
//t    "implements_list :",
//t    "implements_list :  T_IMPLEMENTS   interface_list ",
//t    "interface_list :  fully_qualified_class_name ",
//t    "interface_list :  interface_list  ','  fully_qualified_class_name ",
//t    "foreach_optional_arg :",
//t    "foreach_optional_arg :  T_DOUBLE_ARROW   w_variable ",
//t    "for_statement :  statement ",
//t    "for_statement : ':'  inner_statement_list   T_ENDFOR  ';'",
//t    "foreach_statement :  statement ",
//t    "foreach_statement : ':'  inner_statement_list   T_ENDFOREACH  ';'",
//t    "declare_statement :  statement ",
//t    "declare_statement : ':'  inner_statement_list   T_ENDDECLARE  ';'",
//t    "declare_list :  T_STRING  '='  static_scalar ",
//t    "declare_list :  declare_list  ','  T_STRING  '='  static_scalar ",
//t    "switch_case_list : '{'  case_list  '}'",
//t    "switch_case_list : '{' ';'  case_list  '}'",
//t    "switch_case_list : ':'  case_list   T_ENDSWITCH  ';'",
//t    "switch_case_list : ':' ';'  case_list   T_ENDSWITCH  ';'",
//t    "case_list :",
//t    "case_list :  case_list   T_CASE   expr   case_separator   inner_statement_list ",
//t    "case_list :  case_list   T_DEFAULT   case_separator   inner_statement_list ",
//t    "case_separator : ':'",
//t    "case_separator : ';'",
//t    "while_statement :  statement ",
//t    "while_statement : ':'  inner_statement_list   T_ENDWHILE  ';'",
//t    "elseif_list :",
//t    "elseif_list :  elseif_list   T_ELSEIF  '('  expr  ')'  statement ",
//t    "new_elseif_list :",
//t    "new_elseif_list :  new_elseif_list   T_ELSEIF  '('  expr  ')' ':'  inner_statement_list ",
//t    "else_single :",
//t    "else_single :  T_ELSE   statement ",
//t    "new_else_single :",
//t    "new_else_single :  T_ELSE  ':'  inner_statement_list ",
//t    "parameter_list :  non_empty_parameter_list ",
//t    "parameter_list :",
//t    "non_empty_parameter_list :  optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  optional_class_type  '&'  T_VARIABLE ",
//t    "non_empty_parameter_list :  optional_class_type  '&'  T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  T_CONST   optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  optional_class_type   T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type  '&'  T_VARIABLE ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type  '&'  T_VARIABLE  '='  static_scalar ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  T_CONST   optional_class_type   T_VARIABLE ",
//t    "non_empty_parameter_list :  non_empty_parameter_list  ','  optional_class_type   T_VARIABLE  '='  static_scalar ",
//t    "optional_class_type :",
//t    "optional_class_type :  fully_qualified_class_name ",
//t    "function_call_parameter_list :  non_empty_function_call_parameter_list ",
//t    "function_call_parameter_list :",
//t    "non_empty_function_call_parameter_list :  expr_without_variable ",
//t    "non_empty_function_call_parameter_list :  variable ",
//t    "non_empty_function_call_parameter_list : '&'  w_variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ','  expr_without_variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ','  variable ",
//t    "non_empty_function_call_parameter_list :  non_empty_function_call_parameter_list  ',' '&'  w_variable ",
//t    "global_var_list :  global_var_list  ','  global_var ",
//t    "global_var_list :  global_var ",
//t    "global_var :  T_VARIABLE ",
//t    "global_var : '\$'  r_variable ",
//t    "global_var : '\$' '{'  expr  '}'",
//t    "static_var_list :  static_var_list  ','  T_VARIABLE ",
//t    "static_var_list :  static_var_list  ','  T_VARIABLE  '='  static_scalar ",
//t    "static_var_list :  T_VARIABLE ",
//t    "static_var_list :  T_VARIABLE  '='  static_scalar ",
//t    "class_statement_list :  class_statement_list   class_statement ",
//t    "class_statement_list :",
//t   "\$\$5 :",
//t    "class_statement :  variable_modifiers   class_variable_declaration \$\$5 ';'",
//t    "class_statement :  class_constant_declaration  ';'",
//t   "\$\$6 :",
//t   "\$\$7 :",
//t    "class_statement :\$\$6  method_modifiers   T_FUNCTION   is_reference   T_STRING \$\$7 '('  parameter_list  ')'  method_body ",
//t    "method_body : ';'",
//t    "method_body : '{'  inner_statement_list  '}'",
//t    "variable_modifiers :  non_empty_member_modifiers ",
//t    "variable_modifiers :  T_VAR ",
//t    "method_modifiers :",
//t    "method_modifiers :  non_empty_member_modifiers ",
//t    "non_empty_member_modifiers :  member_modifier ",
//t    "non_empty_member_modifiers :  non_empty_member_modifiers   member_modifier ",
//t    "member_modifier :  T_PUBLIC ",
//t    "member_modifier :  T_PROTECTED ",
//t    "member_modifier :  T_PRIVATE ",
//t    "member_modifier :  T_STATIC ",
//t    "member_modifier :  T_ABSTRACT ",
//t    "member_modifier :  T_FINAL ",
//t    "class_variable_declaration :  class_variable_declaration  ','  T_VARIABLE ",
//t   "\$\$8 :",
//t    "class_variable_declaration :  class_variable_declaration  ','  T_VARIABLE \$\$8 '='  static_scalar ",
//t    "class_variable_declaration :  T_VARIABLE ",
//t   "\$\$9 :",
//t    "class_variable_declaration :  T_VARIABLE \$\$9 '='  static_scalar ",
//t   "\$\$10 :",
//t    "class_constant_declaration :  class_constant_declaration  ','  T_STRING \$\$1 '='  const_scalar_expr ",
//t   "\$\$11 :",
//t    "class_constant_declaration :\$\$1  T_CONST   T_STRING  '='  const_scalar_expr ",
//t    "echo_expr_list :  echo_expr_list  ','  expr ",
//t    "echo_expr_list :  expr ",
//t    "for_expr :",
//t    "for_expr :  non_empty_for_expr ",
//t    "non_empty_for_expr :  non_empty_for_expr  ','  expr ",
//t    "non_empty_for_expr :  expr ",
//t    "expr_without_variable :  T_LIST  '('  assignment_list  ')' '='  expr ",
//t   "\$\$12 :",
//t    "expr_without_variable :  variable  '='\$\$1  expr ",
//t   "\$\$13 :",
//t    "expr_without_variable :  variable  '=' '&'\$\$1  variable ",
//t   "\$\$14 :",
//t    "expr_without_variable :  variable  '=' '&'  T_NEW \$\$1  class_name_reference   ctor_arguments ",
//t    "expr_without_variable :  T_NEW   class_name_reference   ctor_arguments ",
//t    "expr_without_variable :  variable   T_PLUS_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MINUS_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MUL_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_DIV_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_CONCAT_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_MOD_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_AND_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_OR_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_XOR_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_SL_EQUAL   expr ",
//t    "expr_without_variable :  variable   T_SR_EQUAL   expr ",
//t    "expr_without_variable :  rw_variable   T_INC ",
//t    "expr_without_variable :  T_INC   rw_variable ",
//t    "expr_without_variable :  rw_variable   T_DEC ",
//t    "expr_without_variable :  T_DEC   rw_variable ",
//t    "expr_without_variable :  expr   T_BOOLEAN_OR   expr ",
//t    "expr_without_variable :  expr   T_BOOLEAN_AND   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_OR   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_AND   expr ",
//t    "expr_without_variable :  expr   T_LOGICAL_XOR   expr ",
//t    "expr_without_variable :  expr  '|'  expr ",
//t    "expr_without_variable :  expr  '&'  expr ",
//t    "expr_without_variable :  expr  '^'  expr ",
//t    "expr_without_variable :  expr  '.'  expr ",
//t    "expr_without_variable :  expr  '+'  expr ",
//t    "expr_without_variable :  expr  '-'  expr ",
//t    "expr_without_variable :  expr  '*'  expr ",
//t    "expr_without_variable :  expr  '/'  expr ",
//t    "expr_without_variable :  expr  '%'  expr ",
//t    "expr_without_variable :  expr   T_SL   expr ",
//t    "expr_without_variable :  expr   T_SR   expr ",
//t    "expr_without_variable : '+'  expr ",
//t    "expr_without_variable : '-'  expr ",
//t    "expr_without_variable : '!'  expr ",
//t    "expr_without_variable : '~'  expr ",
//t    "expr_without_variable :  expr   T_IS_IDENTICAL   expr ",
//t    "expr_without_variable :  expr   T_IS_NOT_IDENTICAL   expr ",
//t    "expr_without_variable :  expr   T_IS_EQUAL   expr ",
//t    "expr_without_variable :  expr   T_IS_NOT_EQUAL   expr ",
//t    "expr_without_variable :  expr  '<'  expr ",
//t    "expr_without_variable :  expr   T_IS_SMALLER_OR_EQUAL   expr ",
//t    "expr_without_variable :  expr  '>'  expr ",
//t    "expr_without_variable :  expr   T_IS_GREATER_OR_EQUAL   expr ",
//t    "expr_without_variable :  expr   T_INSTANCEOF   class_name_reference ",
//t    "expr_without_variable : '('  expr  ')'",
//t    "expr_without_variable :  expr  '?'  expr  ':'  expr ",
//t    "expr_without_variable :  internal_functions_in_yacc ",
//t    "expr_without_variable :  T_INT_CAST   expr ",
//t    "expr_without_variable :  T_DOUBLE_CAST   expr ",
//t    "expr_without_variable :  T_STRING_CAST   expr ",
//t    "expr_without_variable :  T_ARRAY_CAST   expr ",
//t    "expr_without_variable :  T_OBJECT_CAST   expr ",
//t    "expr_without_variable :  T_BOOL_CAST   expr ",
//t    "expr_without_variable :  T_UNSET_CAST   expr ",
//t    "expr_without_variable :  T_EXIT   exit_expr ",
//t    "expr_without_variable : '@'  expr ",
//t    "expr_without_variable :  scalar ",
//t    "expr_without_variable :  T_ARRAY  '('  array_pair_list  ')'",
//t    "expr_without_variable : '`'  encaps_list  '`'",
//t    "expr_without_variable :  T_PRINT   expr ",
//t   "\$\$15 :",
//t    "function_call :  T_STRING \$\$1 '('  function_call_parameter_list  ')'",
//t    "function_call :  class_constant  '('  function_call_parameter_list  ')'",
//t    "function_call :  variable_without_objects  '('  function_call_parameter_list  ')'",
//t    "fully_qualified_class_name :  T_STRING ",
//t    "class_name_reference :  T_STRING ",
//t    "class_name_reference :  dynamic_class_name_reference ",
//t    "dynamic_class_name_reference :  base_variable   T_OBJECT_OPERATOR   object_property   dynamic_class_name_variable_properties ",
//t    "dynamic_class_name_reference :  base_variable ",
//t    "dynamic_class_name_variable_properties :  dynamic_class_name_variable_properties   dynamic_class_name_variable_property ",
//t    "dynamic_class_name_variable_properties :",
//t    "dynamic_class_name_variable_property :  T_OBJECT_OPERATOR   object_property ",
//t    "exit_expr :",
//t    "exit_expr : '(' ')'",
//t    "exit_expr : '('  expr  ')'",
//t    "ctor_arguments :",
//t    "ctor_arguments : '('  function_call_parameter_list  ')'",
//t    "common_scalar :  T_LNUMBER ",
//t    "common_scalar :  T_DNUMBER ",
//t    "common_scalar :  T_CONSTANT_ENCAPSED_STRING ",
//t    "common_scalar :  T_LINE ",
//t    "common_scalar :  T_FILE ",
//t    "common_scalar :  T_CLASS_C ",
//t    "common_scalar :  T_FUNC_C ",
//t    "const_scalar_expr :  const_scalar ",
//t    "const_scalar_expr :  const_scalar_expr_list ",
//t    "const_scalar_expr_list :  const_scalar_expr   T_SL   const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr   T_SR   const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr   T_LOGICAL_XOR   const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '|'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '&'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '^'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '.'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '+'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '-'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '*'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '/'  const_scalar_expr ",
//t    "const_scalar_expr_list :  const_scalar_expr  '%'  const_scalar_expr ",
//t    "const_scalar_expr_list : '~'  const_scalar_expr ",
//t    "const_scalar_expr_list : '('  const_scalar_expr  ')'",
//t    "const_scalar :  common_scalar ",
//t    "const_scalar :  T_STRING ",
//t    "const_scalar : '+'  const_scalar ",
//t    "const_scalar : '-'  const_scalar ",
//t    "const_scalar :  T_ARRAY  '('  static_array_pair_list  ')'",
//t    "const_scalar :  static_class_constant ",
//t    "static_scalar :  common_scalar ",
//t    "static_scalar :  T_STRING ",
//t    "static_scalar : '+'  static_scalar ",
//t    "static_scalar : '-'  static_scalar ",
//t    "static_scalar :  T_ARRAY  '('  static_array_pair_list  ')'",
//t    "static_scalar :  static_class_constant ",
//t    "static_class_constant :  T_STRING   T_PAAMAYIM_NEKUDOTAYIM   T_STRING ",
//t    "scalar :  T_STRING ",
//t    "scalar :  T_STRING_VARNAME ",
//t    "scalar :  class_constant ",
//t    "scalar :  common_scalar ",
//t    "scalar : '\"'  encaps_list  '\"'",
//t    "scalar : '\\''  encaps_list  '\\''",
//t    "scalar :  T_START_HEREDOC   encaps_list   T_END_HEREDOC ",
//t    "static_array_pair_list :",
//t    "static_array_pair_list :  non_empty_static_array_pair_list   possible_comma ",
//t    "possible_comma :",
//t    "possible_comma : ','",
//t    "non_empty_static_array_pair_list :  non_empty_static_array_pair_list  ','  static_scalar   T_DOUBLE_ARROW   static_scalar ",
//t    "non_empty_static_array_pair_list :  non_empty_static_array_pair_list  ','  static_scalar ",
//t    "non_empty_static_array_pair_list :  static_scalar   T_DOUBLE_ARROW   static_scalar ",
//t    "non_empty_static_array_pair_list :  static_scalar ",
//t    "expr :  r_variable ",
//t    "expr :  expr_without_variable ",
//t    "r_variable :  variable ",
//t    "w_variable :  variable ",
//t    "rw_variable :  variable ",
//t    "variable :  base_variable_with_function_calls   T_OBJECT_OPERATOR   object_property   method_or_not   variable_properties ",
//t    "variable :  base_variable_with_function_calls ",
//t    "variable_properties :  variable_properties   variable_property ",
//t    "variable_properties :",
//t    "variable_property :  T_OBJECT_OPERATOR   object_property   method_or_not ",
//t    "method_or_not : '('  function_call_parameter_list  ')'",
//t    "method_or_not :",
//t    "variable_without_objects :  reference_variable ",
//t    "variable_without_objects :  simple_indirect_reference   reference_variable ",
//t    "static_member :  fully_qualified_class_name   T_PAAMAYIM_NEKUDOTAYIM   variable_without_objects ",
//t    "base_variable_with_function_calls :  base_variable ",
//t    "base_variable_with_function_calls :  function_call ",
//t    "base_variable :  reference_variable ",
//t    "base_variable :  simple_indirect_reference   reference_variable ",
//t    "base_variable :  static_member ",
//t    "reference_variable :  reference_variable  '['  dim_offset  ']'",
//t    "reference_variable :  reference_variable  '{'  expr  '}'",
//t    "reference_variable :  compound_variable ",
//t    "compound_variable :  T_VARIABLE ",
//t    "compound_variable : '\$' '{'  expr  '}'",
//t    "dim_offset :",
//t    "dim_offset :  expr ",
//t    "object_property :  object_dim_list ",
//t    "object_property :  variable_without_objects ",
//t    "object_dim_list :  object_dim_list  '['  dim_offset  ']'",
//t    "object_dim_list :  object_dim_list  '{'  expr  '}'",
//t    "object_dim_list :  variable_name ",
//t    "variable_name :  T_STRING ",
//t    "variable_name : '{'  expr  '}'",
//t    "simple_indirect_reference : '\$'",
//t    "simple_indirect_reference :  simple_indirect_reference  '\$'",
//t    "assignment_list :  assignment_list  ','  assignment_list_element ",
//t    "assignment_list :  assignment_list_element ",
//t    "assignment_list_element :  variable ",
//t    "assignment_list_element :  T_LIST  '('  assignment_list  ')'",
//t    "assignment_list_element :",
//t    "array_pair_list :",
//t    "array_pair_list :  non_empty_array_pair_list   possible_comma ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr   T_DOUBLE_ARROW   expr ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr ",
//t    "non_empty_array_pair_list :  expr   T_DOUBLE_ARROW   expr ",
//t    "non_empty_array_pair_list :  expr ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ','  expr   T_DOUBLE_ARROW  '&'  w_variable ",
//t    "non_empty_array_pair_list :  non_empty_array_pair_list  ',' '&'  w_variable ",
//t    "non_empty_array_pair_list :  expr   T_DOUBLE_ARROW  '&'  w_variable ",
//t    "non_empty_array_pair_list : '&'  w_variable ",
//t    "encaps_list :  encaps_list   encaps_var ",
//t    "encaps_list :  encaps_list   T_STRING ",
//t    "encaps_list :  encaps_list   T_NUM_STRING ",
//t    "encaps_list :  encaps_list   T_ENCAPSED_AND_WHITESPACE ",
//t    "encaps_list :  encaps_list   T_CHARACTER ",
//t    "encaps_list :  encaps_list   T_BAD_CHARACTER ",
//t    "encaps_list :  encaps_list  '['",
//t    "encaps_list :  encaps_list  ']'",
//t    "encaps_list :  encaps_list  '{'",
//t    "encaps_list :  encaps_list  '}'",
//t    "encaps_list :  encaps_list   T_OBJECT_OPERATOR ",
//t    "encaps_list :",
//t    "encaps_var :  T_VARIABLE ",
//t    "encaps_var :  T_VARIABLE  '['  encaps_var_offset  ']'",
//t    "encaps_var :  T_VARIABLE   T_OBJECT_OPERATOR   T_STRING ",
//t    "encaps_var :  T_DOLLAR_OPEN_CURLY_BRACES   expr  '}'",
//t    "encaps_var :  T_DOLLAR_OPEN_CURLY_BRACES   T_STRING_VARNAME  '['  expr  ']' '}'",
//t    "encaps_var :  T_CURLY_OPEN   variable  '}'",
//t    "encaps_var_offset :  T_STRING ",
//t    "encaps_var_offset :  T_NUM_STRING ",
//t    "encaps_var_offset :  T_VARIABLE ",
//t    "internal_functions_in_yacc :  T_ISSET  '('  isset_variables  ')'",
//t    "internal_functions_in_yacc :  T_EMPTY  '('  variable  ')'",
//t   "\$\$16 :",
//t    "internal_functions_in_yacc :\$\$1  T_INCLUDE   expr ",
//t   "\$\$17 :",
//t    "internal_functions_in_yacc :\$\$1  T_INCLUDE_ONCE   expr ",
//t    "internal_functions_in_yacc :  T_EVAL  '('  expr  ')'",
//t   "\$\$18 :",
//t    "internal_functions_in_yacc :\$\$1  T_REQUIRE   expr ",
//t   "\$\$19 :",
//t    "internal_functions_in_yacc :\$\$1  T_REQUIRE_ONCE   expr ",
//t    "isset_variables :  variable ",
//t    "isset_variables :  isset_variables  ','  variable ",
//t    "class_constant :  fully_qualified_class_name   T_PAAMAYIM_NEKUDOTAYIM   T_STRING ",
//t  );
  $GLOBALS['_PHP_PARSER']['yyName'] =array(    
    "end-of-file",null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,"'!'","'\"'",null,"'\$'","'%'",
    "'&'","'\\''","'('","')'","'*'","'+'","','","'-'","'.'","'/'",null,
    null,null,null,null,null,null,null,null,null,"':'","';'","'<'","'='",
    "'>'","'?'","'@'",null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,"'['",null,"']'","'^'",null,"'`'",null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,"'{'","'|'","'}'","'~'",null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,null,null,null,null,null,null,null,null,null,null,null,null,
    null,null,"T_INCLUDE","T_INCLUDE_ONCE","T_EVAL","T_REQUIRE",
    "T_REQUIRE_ONCE","T_LOGICAL_OR","T_LOGICAL_XOR","T_LOGICAL_AND",
    "T_PRINT","T_PLUS_EQUAL","T_MINUS_EQUAL","T_MUL_EQUAL","T_DIV_EQUAL",
    "T_CONCAT_EQUAL","T_MOD_EQUAL","T_AND_EQUAL","T_OR_EQUAL",
    "T_XOR_EQUAL","T_SL_EQUAL","T_SR_EQUAL","T_BOOLEAN_OR",
    "T_BOOLEAN_AND","T_IS_EQUAL","T_IS_NOT_EQUAL","T_IS_IDENTICAL",
    "T_IS_NOT_IDENTICAL","T_IS_SMALLER_OR_EQUAL","T_IS_GREATER_OR_EQUAL",
    "T_SL","T_SR","T_INC","T_DEC","T_INT_CAST","T_DOUBLE_CAST",
    "T_STRING_CAST","T_ARRAY_CAST","T_OBJECT_CAST","T_BOOL_CAST",
    "T_UNSET_CAST","T_NEW","T_INSTANCEOF","T_EXIT","T_IF","T_ELSEIF",
    "T_ELSE","T_ENDIF","T_LNUMBER","T_DNUMBER","T_STRING",
    "T_STRING_VARNAME","T_VARIABLE","T_NUM_STRING","T_INLINE_HTML",
    "T_CHARACTER","T_BAD_CHARACTER","T_ENCAPSED_AND_WHITESPACE",
    "T_CONSTANT_ENCAPSED_STRING","T_ECHO","T_DO","T_WHILE","T_ENDWHILE",
    "T_FOR","T_ENDFOR","T_FOREACH","T_ENDFOREACH","T_DECLARE",
    "T_ENDDECLARE","T_AS","T_SWITCH","T_ENDSWITCH","T_CASE","T_DEFAULT",
    "T_BREAK","T_CONTINUE","T_FUNCTION","T_CONST","T_RETURN","T_TRY",
    "T_CATCH","T_THROW","T_USE","T_GLOBAL","T_STATIC","T_ABSTRACT",
    "T_FINAL","T_PRIVATE","T_PROTECTED","T_PUBLIC","T_VAR","T_UNSET",
    "T_ISSET","T_EMPTY","T_CLASS","T_INTERFACE","T_EXTENDS",
    "T_IMPLEMENTS","T_OBJECT_OPERATOR","T_DOUBLE_ARROW","T_LIST",
    "T_ARRAY","T_CLASS_C","T_FUNC_C","T_LINE","T_FILE","T_COMMENT",
    "T_DOC_COMMENT","T_OPEN_TAG","T_OPEN_TAG_WITH_ECHO","T_CLOSE_TAG",
    "T_WHITESPACE","T_START_HEREDOC","T_END_HEREDOC",
    "T_DOLLAR_OPEN_CURLY_BRACES","T_CURLY_OPEN","T_PAAMAYIM_NEKUDOTAYIM",
  );
 ?>
